{"version":3,"sources":["PlaceableView.js","ShapeView.js","Collision.js","Transform.js","Placeable.js","Prism.js","Section.js","Shape.js","Viewport.js","ColorPicker.js","Toolbar.js","ShapeFolder.js","Exporter.js","Config.js","Worker.worker.js","RigidInfo.js","VecMath.js","Trainer.js","App.js","serviceWorker.js","index.js"],"names":["PlaceableView","placeable","renderable","this","ShapeView","shape","showSections","viewport","placeableViews","Map","prisms","prism","set","id","createPrismView","sections","section","createSectionView","syncTransform","createPrismRenderable","createSectionRenderable","forEach","placeableView","destroyRenderable","get","scene","addEntity","remove","setRenderableTransform","worldPosition","worldOrientation","auxVec1","vec3","create","auxVec2","auxVec3","auxVec4","intersectTriangle","ray","p1","p2","p3","edge1","sub","edge2","pvec","cross","direction","det","dot","tvec","origin","u","qvec","v","intersectSphere","center","radius","rayorig","squaredRadius","squaredRayLength","squaredLength","a","b","d","sqrtD","Math","sqrt","t","projectVerticesOntoAxis","axis","vertices","dmin","dmax","i","length","overlapProjectionsOntoAxis","vertices1","vertices2","eps","rayToPointDistance","point","vector","projection","scale","distance","createTransform","position","orientation","quat","rotatedTransform","transform","pivot","angle","rotation","setAxisAngle","transformQuat","add","mul","normalize","multiplyTransforms","out","t1","t2","inverseTransform","invert","negate","Placeable","parentOrientation","multiply","translation","copy","JunctionFace","Object","freeze","LEFT","RIGHT","FRONT","BACK","BOTTOM","PRISM_HALF_HEIGHT","PRISM_SIDE","PRISM_HALF_SIDE","PRISM_VERTICES","fromValues","PRISM_MARGIN","PRISM_MARGIN_DIAG","cos","PI","PRISM_COLLISION_VERTICES","PRISM_TRIANGLE_INDICES","PRISM_POLYGON_NORMALS","map","indices","p0","normal","PRISM_LEFT_SLOPE_PIVOT_POINT","PRISM_RIGHT_SLOPE_PIVOT_POINT","PRISM_SIDE_PIVOT_Y","PRISM_LEFT_SLOPE_NORMAL","rotateZ","PRISM_RIGHT_SLOPE_NORMAL","PRISM_LEFT_TRANSFORM","fromEuler","PRISM_RIGHT_TRANSFORM","PRISM_JUNCTIONS","face","swapColors","tangent","transforms","coincideVertices","v1","v2","squaredDistance","coincideTriangleVertices","i11","i12","i13","i21","i22","i23","coincideRectangleVertices","i14","i24","coincideSquareVertices","Prism","colorMask","backgroundColor","foregroundColor","vertex","clone","collisionVertices","polygonNormals","hitDistance","triangleHitDistance","undefined","intersectTriangles","polygonNormals1","polygonNormals2","every","polygonNormal1","polygonNormal2","junctions","junction","junctionPrisms","j","junctionTransform","push","faceName","coincidingFace","coincideFace","baseFace","targetFace","archive","SectionType","SEPARATOR","ACTUATOR","SWAP_ROTATION","SECTION_PROPERTIES","name","min","max","default","Section","type","basePrismId","targetPrismId","properties","cylinder","A","dp","B","D","k","cp1","cp2","height","cd1","cd2","d1","d2","intersectCylinder","centered","cylinderPosition","createCylinder","mergedProperties","sectionProperties","sectionProperty","value","has","mergedProperty","assign","find","property","getProperty","validatePropertyValue","delete","isNaN","Array","from","entries","version","DEGREES_TO_RADIANS","Shape","lastPlaceableId","roll","pitch","yaw","showPose","aabb","error","rotateY","rotateX","alignHorizontally","getOrientation","zero","applyTransform","inverseOrientation","x","z","translate","rotate","hitPlaceable","prismHitDistance","intersect","sectionHitDistance","otherPrism","collides","getJunctions","junctionPrism","filter","shapePrism","some","binormal","fromMat3","mat3","parts","suitableParts","part","partPrism","coincidence","coincide","suitablePart","concat","apply","includes","partChains","remainingParts","Set","size","values","next","partChain","findChildParts","sort","reduce","acc","val","otherPartChain","otherPart","splice","basePrism","findPlaceable","targetPrism","basePart","targetPart","rootPart","parentPart","parentSection","bidirectional","childParts","sectionRefs","findValidSectionRefs","childPart","positionInversed","initialAngle","getPropertyValue","discoverParts","console","log","childPrisms","flat","childSections","toArchive","prismArchive","fromArchive","sectionArchive","lastPrismId","RADIANS_TO_DEGREES","ELEVATION_LIMIT","DEFAULT_ELEVATION","DEFAULT_HEADING","FOG_COLOR","HIGHLIGHT_PRIMARY_COLOR","HIGHLIGHT_ALTERNATE_COLOR","SECTION_COLORS","INDICATION_COLOR","CREATION_COLOR","iblUrl","prismMeshUrl","prismMaterialUrl","ghostMaterialUrl","highcolMaterialUrl","knobMeshUrl","groundMaterialUrl","groundTextureUrl","sectionMeshUrl","getPrismTextureUrl","maskIndex","colorToFloat3","color","rgb","tinycolor","toRgb","r","g","colorToFloat4","Viewport","props","auxMat4","mat4","auxTransform","assets","window","Filament","init","prevProps","modeChanged","mode","shapeChanged","originalShape","trainingStateChanged","trainingState","refreshShapeView","prepareGoalView","updateShapeView","updateGoalView","goalPosition","engine","shapeView","destroy","AppMode","EDIT","finalShape","addToScene","activePlaceableView","activePlaceable","activePlaceableId","selectPlaceable","goalShape","JSON","parse","goalView","removeFromScene","elevation","heading","focalLengthMin","focalLengthMax","cameraZoom","targetZoom","lastZoom","focalPoint","targetPosition","lastPosition","highlightColor","animationTimer","highlightTimer","availableJunctions","originalAvailableJunctions","pressing","dragging","pickedPlaceable","pickedJunction","activeJunctionPrism","pointerX","pointerY","canvas","filament","Engine","camera","createCamera","EntityManager","createScene","sunlight","LightManager","Builder","LightManager$Type","SUN","intensity","sunAngularRadius","sunHaloSize","sunHaloFalloff","castShadows","build","indirectLight","createIblFromKtx1","setIntensity","setIndirectLight","prismMaterial","createMaterial","prismMesh","loadFilamesh","ghostMaterial","ghostRenderable","createRenderable","createGhostMaterial","highcolMaterial","knobMesh","knobRenderables","sectionMesh","sectionRenderables","prismTextures","createTextureFromPng","prismTextureSampler","TextureSampler","MinFilter","LINEAR_MIPMAP_LINEAR","MagFilter","LINEAR","WrapMode","CLAMP_TO_EDGE","ground","createGround","swapChain","createSwapChain","renderer","createRenderer","view","createView","setCamera","setScene","setFogOptions","enabled","setClearOptions","clearColor","clear","resize","renderFrame","bind","addEventListener","requestAnimationFrame","e","handlePointerDown","handlePointerUp","handlePointerMove","halfSize","gridSize","vb","VertexBuffer","vertexCount","bufferCount","attribute","VertexAttribute","POSITION","VertexBuffer$AttributeType","FLOAT3","UV0","FLOAT2","setBufferAt","Float32Array","reps","ib","IndexBuffer","indexCount","bufferType","IndexBuffer$IndexType","USHORT","setBuffer","Uint16Array","material","texture","sampler","REPEAT","materialInstance","getDefaultInstance","setTextureParameter","entity","RenderableManager","boundingBox","halfExtent","geometry","RenderableManager$PrimitiveType","TRIANGLES","receiveShadows","mesh","getBoundingBox","vertexBuffer","indexBuffer","getRenderableMaterial","destroyMaterialInstance","destroyEntity","getRenderableManager","createInstance","setColor4Parameter","RgbaType","sRGB","setColor3Parameter","validColorMask","RgbType","createHighcolMaterial","renderableManager","renderableInstance","getInstance","getAxisAlignedBoundingBox","transformManager","getTransformManager","transformInstance","fromRotationTranslation","setTransform","getMaterialInstanceAt","eye","lookAt","fl","focalLength","fovY","atan","aspect","width","setProjectionFov","Camera$Fov","VERTICAL","baseLink","rigidInfo","baseLinks","partTransform","link","links","updateFollowPosition","prismId","viewTransform","viewTransforms","findPlaceableView","equals","timestamp","lastTime","deltaTime","lerp","updateCamera","abs","highlightIntensity","HIGHLIGHT_OPAQUE_BLEND","setHighlightIntensity","render","dpr","devicePixelRatio","innerWidth","innerHeight","setViewport","pointerType","isPrimary","isPrimaryPointer","junctionIntersection","getCastingRay","clientX","clientY","placeableIntersection","intersectJunctions","hitJunction","activatePrismSection","activatePrismKnob","originalPickedJunction","addSection","activeJunctionPrismIndex","findIndex","originalActiveJunctionPrism","addPrism","hideGhostPrism","showPrismKnobs","showPrismSections","dx","dy","nearestJunctionPrism","pickNearestJunctionPrism","showGhostPrism","POINTER_DRAG_THRESHOLD","autoFovY","viewRotation","fromMat4","getViewMatrix","invAspect","transformMat3","widthFitFovY","heightFitFovY","autoZoom","tan","y","rayVec","vec4","transformMat4","Camera","inverseProjection","getProjectionMatrix","getModelMatrix","getPosition","junctionHitDistance","rayDistance","prismRayDistance","animate","notify","updateHighlightColor","originalPlaceable","getAvailableJunctions","hidePrismKnobs","hidePrismSections","computeAutoZoom","onActivePlaceableChange","onShapeChange","placeableColor","colorStr","readability","createGhostKnobRenderable","knobRenderable","setGhostColor","activeJunction","junctionIndex","indexOf","index","createGhostSectionRenderable","sectionRenderable","className","ref","Component","ColorPicker","state","displayColorPicker","setState","onChange","hex","handleHideColorPicker","styles","reactCSS","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","style","onClick","handleToggleColorPicker","handleColorChange","Toolbar","syncColors","prevShape","shapeModifier","prevPlaceable","placeableModifier","modifyShape","parseFloat","prevPrism","prevColorMask","nextColorMask","parseInt","prevBackgroundColor","prevForegroundColor","modifyPlaceable","prevSection","setPropertyValue","active","clearPropertyValue","continuous","swap","prevConfig","config","stringify","split","Number","onConfigChange","time","floor","toString","padStart","s","charAt","toUpperCase","slice","join","htmlFor","handleNameChange","target","step","handleRollChange","handlePitchChange","handleYawChange","checked","handleShowPoseChange","onReset","onShapeShowcase","onArchiveSave","onArchiveLoad","disabled","onTrainingStart","TRAINING","PLAY","onTrainingStop","onTrainingPlay","trainingActive","trainingSteps","totalSteps","trainingValue","trainingLosses","lossP","toFixed","lossV","formatTime","trainingTime","keys","key","getPropertyLabel","isArray","handleConfigChange","COLOR_MASK_COUNT","handleColorMaskChange","handleBackgroundColorChange","handleForegroundColorChange","handleSwapColors","handleDeletePrism","lowerAngle","upperAngle","handleSectionTypeChange","typeName","substring","toLowerCase","getProperties","handleSectionPropertyChange","handleActiveChange","handleContinuousChange","handleSwapSection","handleDeleteSection","renderPrismParams","renderSectionParams","renderShapeParams","historyIndex","onHistoryChange","historyEntries","renderHistory","renderParams","ShapeFolder","pieceCount","notation","tokens","token","pos","downwardPrismNumberStr","twistsStr","twists","twist","ccw","twistAngle","twistPrism","rotations","shapeRotation","aa","figures","definition","definitions","skin","compileSkin","shapeFolder","pieces","colors","mask","fold","applyRotations","startPos","delimPos","lastIndexOf","skinName","skinDefinition","skins","skinPattern","patterns","pattern","shapeColors","colorNumbers","prismColors","colorNumber","colorName","reverse","vectorToString","precision","transformToString","quad","Exporter","lines","timeStep","frameSteps","environmentSteps","gravity","targetDistance","groundFriction","prismFriction","groundRestitution","prismRestitution","advanceReward","aliveReward","forwardReward","jointAtLimitCost","driveCost","stallTorqueCost","mass","inertia","localTransforms","localTransform","joints","joint","targetLink","power","Config","trainingStartSteps","trainingInterval","checkpointSteps","discount","batchSize","randomSteps","replayBufferSize","learningRate","interpolation","hiddenLayerSizes","Worker_fn","Worker","PRISM_CG_DY","PRISM_MASS_OFFSET","PRISM_MASS_OFFSET_INVERSED","PRISM_MASS","PRISM_INERTIA_FACTOR","PRISM_INERTIA_X","PRISM_INERTIA_Y","PRISM_INERTIA_Z","RigidInfo","debug","prismCollisionMargin","prismCollisionVertices","createLink","createJoint","discoverPartChains","p","partOrigin","tensor","mat1","mat2","basis","fromQuat","prismOrigin","px","py","pz","multiplyScalar","principalRotation","mat","threshold","maxSteps","rot","q","sin","mpq","theta","theta2","mrp","mrq","diagonalizeMatrix","childTransform","worldTransform","principalAxis","principalAngle","getAxisAngle","basePartIndex","targetPartIndex","ActorCriticLosses","ARCHIVE_EXTENSION","LOADING","getStringHash","str","hash","charCodeAt","App","createInitialShape","figureRandomIndices","figureIndex","shapeData","checkpoint","database","worker","playing","addHistoryEntry","historyLength","historyStart","HISTORY_LENGTH_MAX","handleShapeChange","reset","ensureEditMode","nextState","applyInitialAngles","hasPrismIntersections","historyEntry","figureName","showFigure","fetch","then","response","json","data","random","handleShapeShowcase","uploadFile","content","alert","generateShapeData","downloadFile","terminate","activeJointCount","loadCheckpoint","handleAppModeChange","onmessage","handleWorkerMessage","postMessage","steps","losses","Date","now","saveCheckpoint","exporter","export","createCheckpoint","editMode","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","extension","onload","setAttribute","files","reader","FileReader","result","readAsText","ondone","getRequest","transaction","objectStore","onsuccess","onerror","openDatabase","putRequest","put","openRequest","indexedDB","open","onupgradeneeded","objectStoreNames","contains","createObjectStore","keyPath","handleActivePlaceableChange","handleHistoryChange","handleReset","handleArchiveSave","handleArchiveLoad","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7ad6f1de.chunk.js","sourcesContent":["class PlaceableView {\n  constructor(placeable, renderable) {\n    this.placeable = placeable;\n    this.renderable = renderable;\n  }\n}\n\nexport default PlaceableView;\n","import PlaceableView from './PlaceableView';\n\nclass ShapeView {\n  constructor(shape, showSections, viewport) {\n    this.shape = shape;\n\n    this.placeableViews = new Map();\n    for (const prism of this.shape.prisms) {\n      this.placeableViews.set(prism.id, this.createPrismView(prism, viewport));\n    }\n    if (showSections) {\n      for (const section of this.shape.sections) {\n        this.placeableViews.set(section.id, this.createSectionView(section, viewport));\n      }\n    }\n\n    this.syncTransform(viewport);\n  }\n\n  createPrismView(prism, viewport) {\n    const renderable = viewport.createPrismRenderable(prism);\n    return new PlaceableView(prism, renderable);\n  }\n\n  createSectionView(section, viewport) {\n    const renderable = viewport.createSectionRenderable(section);\n    return new PlaceableView(section, renderable);\n  }\n\n  destroy(viewport) {\n    this.placeableViews.forEach(placeableView => viewport.destroyRenderable(placeableView.renderable));\n    this.placeableViews = null;\n  }\n\n  findPlaceableView(id) {\n    return this.placeableViews.get(id);\n  }\n\n  addToScene(viewport) {\n    this.placeableViews.forEach(placeableView => viewport.scene.addEntity(placeableView.renderable));\n  }\n\n  removeFromScene(viewport) {\n    this.placeableViews.forEach(placeableView => viewport.scene.remove(placeableView.renderable));\n  }\n\n  syncTransform(viewport) {\n    this.placeableViews.forEach(placeableView =>\n        viewport.setRenderableTransform(placeableView.renderable, placeableView.placeable.worldPosition,\n            placeableView.placeable.worldOrientation));\n  }\n}\n\nexport default ShapeView;\n","import { vec3 } from 'gl-matrix';\n\nconst auxVec1 = vec3.create();\nconst auxVec2 = vec3.create();\nconst auxVec3 = vec3.create();\nconst auxVec4 = vec3.create();\n\nfunction intersectTriangles(ray, vertices, indices) {\n  let hitDistance;\n  for (let i = 0; i < indices.length; i += 3) {\n    const triangleHitDistance = intersectTriangle(ray,\n        vertices[indices[i]], vertices[indices[i + 1]], vertices[indices[i + 2]]);\n    if (triangleHitDistance !== undefined) {\n      if ((hitDistance === undefined) || (triangleHitDistance < hitDistance)) {\n        hitDistance = triangleHitDistance;\n      }\n    }\n  }\n  return hitDistance;\n}\n\nfunction intersectTriangle(ray, p1, p2, p3) {\n  const edge1 = vec3.sub(auxVec1, p2, p1);\n  const edge2 = vec3.sub(auxVec2, p3, p1);\n  const pvec = vec3.cross(auxVec3, ray.direction, edge2);\n  const det = vec3.dot(edge1, pvec);\n  if (det < 1e-6) {\n    return;\n  }\n  const tvec = vec3.sub(auxVec4, ray.origin, p1);\n  const u = vec3.dot(tvec, pvec);\n  if ((u < 0) || (u > det)) {\n    return;\n  }\n  const qvec = vec3.cross(auxVec4, tvec, edge1);\n  const v = vec3.dot(ray.direction, qvec);\n  if ((v < 0) || (u + v > det)) {\n    return;\n  }\n  return vec3.dot(edge2, qvec) / det;\n}\n\nfunction intersectSphere(ray, center, radius) {\n  const rayorig = vec3.sub(auxVec1, ray.origin, center);\n  const squaredRadius = radius * radius;\n  const squaredRayLength = vec3.squaredLength(rayorig);\n\n  if (squaredRayLength <= squaredRadius) {\n    return 0; // inside hit\n  }\n\n  const a = vec3.dot(ray.direction, ray.direction);\n  const b = 2 * vec3.dot(rayorig, ray.direction);\n  const c = squaredRayLength - squaredRadius;\n  const d = b * b - (4 * a * c);\n  if (d >= 0) {\n    const sqrtD = Math.sqrt(d);\n    let t = (-b - sqrtD) / (2 * a);\n    if (t < 0) {\n      t = (-b + sqrtD) / (2 * a);\n    }\n    return t; // nearest surface hit\n  }\n}\n\n// Cylinder geometry\n//  .-----.\n// '._____.'\n// |       |\n// |   ^ N | H\n// |.--|--.|\n// '._____.' R\n//     P\nfunction createCylinder(position, normal, radius, height, centered = false) {\n  const cylinderPosition = vec3.create();\n  if (centered) {\n    vec3.scale(cylinderPosition, normal, -0.5 * height);\n    vec3.add(cylinderPosition, cylinderPosition, position);\n  } else {\n    vec3.copy(cylinderPosition, position);\n  }\n  return {\n    position: cylinderPosition,\n    normal: vec3.clone(normal),\n    radius: radius,\n    height: height\n  };\n}\n\nfunction intersectCylinder(ray, cylinder) {\n  const a = vec3.sub(auxVec1, ray.direction, vec3.scale(auxVec1, cylinder.normal,\n      vec3.dot(ray.direction, cylinder.normal)));\n  const A = vec3.dot(a, a);\n  if (A < 1e-12) {\n    return;\n  }\n  const dp = vec3.sub(auxVec2, ray.origin, cylinder.position);\n  const b = vec3.sub(auxVec3, dp, vec3.scale(auxVec3, cylinder.normal, vec3.dot(dp, cylinder.normal)));\n  const B = 2 * vec3.dot(a, b);\n  const C = vec3.dot(b, b) - cylinder.radius * cylinder.radius;\n\n  const d = B * B - 4 * A * C;\n  if (d < 0) {\n    return;\n  }\n  const D = Math.sqrt(d);\n  const k = 1 / (2 * A);\n  const t1 = k * (-B - D);\n  const t2 = k * (-B + D);\n  if ((t1 < 0) && (t2 < 0)) {\n    return;\n  }\n\n  const cp1 = cylinder.position;\n  const cp2 = vec3.add(auxVec1, vec3.scale(auxVec1, cylinder.normal, cylinder.height), cylinder.position);\n  const cd1 = vec3.dot(cylinder.normal, cp1);\n  const cd2 = vec3.dot(cylinder.normal, cp2);\n  if (t1 >= 0) {\n    const p1 = vec3.add(auxVec1, vec3.scale(auxVec1, ray.direction, t1), ray.origin);\n    const d1 = vec3.dot(cylinder.normal, p1);\n    if ((cd1 - d1) * (cd2 - d1) < 0) {\n      return t1;\n    }\n  }\n  if (t2 >= 0) {\n    const p2 = vec3.add(auxVec1, vec3.scale(auxVec1, ray.direction, t2), ray.origin);\n    const d2 = vec3.dot(cylinder.normal, p2);\n    if ((cd1 - d2) * (cd2 - d2) < 0) {\n      return t2;\n    }\n  }\n}\n\nfunction projectVerticesOntoAxis(axis, vertices) {\n  let dmin = 0;\n  let dmax = 0;\n  for (let i = 0; i < vertices.length; i++) {\n    const d = vec3.dot(axis, vertices[i]);\n    if (i === 0) {\n      dmin = d;\n      dmax = d;\n    } else {\n      if (d < dmin) {\n        dmin = d;\n      }\n      if (d > dmax) {\n        dmax = d;\n      }\n    }\n  }\n  return {\n    dmin: dmin,\n    dmax: dmax\n  };\n}\n\nfunction overlapProjectionsOntoAxis(axis, vertices1, vertices2, eps = 1e-3) {\n  if ((vertices1.length === 0) || (vertices2.length === 0)) {\n    return false;\n  }\n  let p1 = projectVerticesOntoAxis(axis, vertices1);\n  let p2 = projectVerticesOntoAxis(axis, vertices2);\n  return (p1.dmin + eps < p2.dmax) && (p2.dmin + eps < p1.dmax);\n}\n\nfunction collideConvexHulls(vertices1, polygonNormals1, vertices2, polygonNormals2) {\n  return polygonNormals1.every(polygonNormal1 =>\n          overlapProjectionsOntoAxis(polygonNormal1, vertices1, vertices2))\n      && polygonNormals2.every(polygonNormal2 =>\n          overlapProjectionsOntoAxis(polygonNormal2, vertices1, vertices2));\n}\n\nfunction rayToPointDistance(ray, point) {\n  const vector = vec3.sub(auxVec1, point, ray.origin);\n  const projection = vec3.scale(auxVec2, ray.direction, vec3.dot(vector, ray.direction));\n  return vec3.distance(vector, projection);\n}\n\nexport { intersectTriangles, intersectSphere, createCylinder, intersectCylinder,\n    collideConvexHulls, rayToPointDistance };\n","import { vec3, quat } from 'gl-matrix';\n\nfunction createTransform(position = vec3.create(), orientation = quat.create()) {\n  return {\n    position: position,\n    orientation: orientation\n  };\n}\n\nfunction rotatedTransform(transform, pivot, axis, angle) {\n  const rotation = quat.setAxisAngle(quat.create(), axis, angle);\n  const position = vec3.sub(vec3.create(), transform.position, pivot);\n  vec3.transformQuat(position, position, rotation);\n  vec3.add(position, position, pivot);\n  const orientation = quat.mul(rotation, rotation, transform.orientation);\n  quat.normalize(orientation, orientation);\n  return createTransform(position, orientation);\n}\n\nfunction multiplyTransforms(out, t1, t2) {\n  vec3.transformQuat(out.position, t2.position, t1.orientation);\n  vec3.add(out.position, out.position, t1.position);\n  quat.mul(out.orientation, t1.orientation, t2.orientation);\n  quat.normalize(out.orientation, out.orientation);\n  return out;\n}\n\nfunction inverseTransform(out, t) {\n  quat.invert(out.orientation, t.orientation);\n  vec3.negate(out.position, t.position);\n  vec3.transformQuat(out.position, out.position, out.orientation);\n  return out;\n}\n\nexport { createTransform, rotatedTransform, multiplyTransforms, inverseTransform };\n","import { vec3, quat } from 'gl-matrix';\n\nclass Placeable {\n  constructor() {\n    this.id = 0;\n    this.position = vec3.create();\n    this.orientation = quat.create();\n    this.worldPosition = vec3.create();\n    this.worldOrientation = quat.create();\n  }\n\n  applyTransform(parentOrientation) {\n    vec3.transformQuat(this.worldPosition, this.position, parentOrientation);\n    quat.multiply(this.worldOrientation, parentOrientation, this.orientation);\n  }\n\n  translate(translation) {\n    vec3.add(this.position, this.position, translation);\n  }\n\n  rotate(rotation) {\n    vec3.transformQuat(this.position, this.position, rotation);\n    quat.multiply(this.orientation, rotation, this.orientation);\n    quat.normalize(this.orientation, this.orientation);\n  }\n\n  copy(placeable) {\n    this.id = placeable.id;\n    vec3.copy(this.position, placeable.position);\n    quat.copy(this.orientation, placeable.orientation);\n    vec3.copy(this.worldPosition, placeable.worldPosition);\n    quat.copy(this.worldOrientation, placeable.worldOrientation);\n  }\n}\n\nexport default Placeable;\n","import { vec3, quat } from 'gl-matrix';\nimport { intersectTriangles, collideConvexHulls } from './Collision';\nimport { createTransform, rotatedTransform, multiplyTransforms } from './Transform';\nimport Placeable from './Placeable';\n\nconst JunctionFace = Object.freeze({\n  LEFT: 0,\n  RIGHT: 1,\n  FRONT: 2,\n  BACK: 3,\n  BOTTOM: 4\n});\n\nconst PRISM_HEIGHT = 1.0;\nconst PRISM_HALF_HEIGHT = 0.5 * PRISM_HEIGHT;\nconst PRISM_BASE = 2.0 * PRISM_HEIGHT;\nconst PRISM_HALF_BASE = 0.5 * PRISM_BASE;\nconst PRISM_SIDE = Math.sqrt(PRISM_BASE);\nconst PRISM_HALF_SIDE = 0.5 * PRISM_SIDE;\nconst PRISM_DISTANCE = 0.5 * PRISM_BASE;\nconst PRISM_HALF_DISTANCE = 0.5 * PRISM_DISTANCE;\n\n// Prism geometry\n//     2\n//     /\\\n//    /| \\\n//   / |  \\\n// 0/  /\\  \\4\n//  | /3 \\ |\n//  |/    \\|\n//  /______\\\n// 1        5\nconst PRISM_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE)\n];\nconst PRISM_MARGIN = 0.04;\nconst PRISM_MARGIN_DIAG = PRISM_MARGIN * Math.cos(Math.PI / 4);\nconst PRISM_COLLISION_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT - 2 * PRISM_MARGIN_DIAG,\n      -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT - 2 * PRISM_MARGIN_DIAG,\n      PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN)\n];\nconst PRISM_POLYGON_INDICES = [\n  [ 0, 1, 2, 3 ], // left slope\n  [ 2, 3, 5, 4 ], // right slope\n  [ 1, 0, 4, 5 ], // bottom\n  [ 0, 2, 4 ], // back\n  [ 5, 3, 1 ] // front\n];\nconst PRISM_TRIANGLE_INDICES = [\n  0, 1, 2,  2, 1, 3, // left slope\n  2, 3, 4,  4, 3, 5, // right slope\n  4, 5, 0,  0, 5, 1, // bottom\n  0, 2, 4, // back\n  5, 3, 1 // front\n];\nconst PRISM_POLYGON_NORMALS = PRISM_POLYGON_INDICES.map(indices => {\n  const p0 = PRISM_COLLISION_VERTICES[indices[0]];\n  const p1 = PRISM_COLLISION_VERTICES[indices[1]];\n  const p2 = PRISM_COLLISION_VERTICES[indices[2]];\n  const normal = vec3.sub(vec3.create(), p1, p0);\n  vec3.cross(normal, normal, vec3.sub(vec3.create(), p2, p0));\n  return vec3.normalize(normal, normal);\n});\n\nconst PRISM_LEFT_SLOPE_PIVOT_POINT = vec3.fromValues(-PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_RIGHT_SLOPE_PIVOT_POINT = vec3.fromValues(PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_SIDE_PIVOT_Y = -PRISM_HALF_HEIGHT / 6;\nconst PRISM_LEFT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), 0.25 * Math.PI);\nconst PRISM_RIGHT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), -0.25 * Math.PI);\nconst PRISM_LEFT_TRANSFORM = createTransform(vec3.fromValues(-PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), -180, 0, 0));\nconst PRISM_RIGHT_TRANSFORM = createTransform(vec3.fromValues(PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), 180, 0, 0));\nconst PRISM_JUNCTIONS = [\n  {\n    face: JunctionFace.LEFT,\n    swapColors: true,\n    pivot: PRISM_LEFT_SLOPE_PIVOT_POINT,\n    normal: PRISM_LEFT_SLOPE_NORMAL,\n    tangent: PRISM_RIGHT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_LEFT_TRANSFORM,\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, 0.5 * Math.PI),\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, Math.PI),\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, -0.5 * Math.PI)\n    ]\n  },\n  {\n    face: JunctionFace.RIGHT,\n    swapColors: true,\n    pivot: PRISM_RIGHT_SLOPE_PIVOT_POINT,\n    normal: PRISM_RIGHT_SLOPE_NORMAL,\n    tangent: PRISM_LEFT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_RIGHT_TRANSFORM,\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, -0.5 * Math.PI),\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, Math.PI),\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, 0.5 * Math.PI)\n    ]\n  },\n  {\n    face: JunctionFace.FRONT,\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, 1),\n    tangent: vec3.fromValues(0, 1, 0),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, PRISM_SIDE))\n    ]\n  },\n  {\n    face: JunctionFace.BACK,\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, -PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, -1),\n    tangent: vec3.fromValues(0, 1, 0),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, -PRISM_SIDE))\n    ]\n  },\n  {\n    face: JunctionFace.BOTTOM,\n    swapColors: false,\n    pivot: vec3.fromValues(0, -PRISM_HALF_HEIGHT, 0),\n    normal: vec3.fromValues(0, -1, 0),\n    tangent: vec3.fromValues(0, 0, -1),\n    transforms: [\n      createTransform(vec3.fromValues(0, -PRISM_HEIGHT, 0),\n          quat.fromEuler(quat.create(), 180, 0, 0))\n    ]\n  }\n];\n\nconst COINCIDING_VERTICES_SQUARED_DISTANCE_MAX = 1e-3;\nfunction coincideVertices(v1, v2) {\n  return vec3.squaredDistance(v1, v2) < COINCIDING_VERTICES_SQUARED_DISTANCE_MAX;\n}\nfunction coincideTriangleVertices(vertices1, vertices2, i11, i12, i13, i21, i22, i23) {\n  return coincideVertices(vertices1[i11], vertices2[i21])\n      && coincideVertices(vertices1[i12], vertices2[i22])\n      && coincideVertices(vertices1[i13], vertices2[i23]);\n}\nfunction coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24) {\n  return coincideVertices(vertices1[i11], vertices2[i21])\n      && coincideVertices(vertices1[i12], vertices2[i22])\n      && coincideVertices(vertices1[i13], vertices2[i23])\n      && coincideVertices(vertices1[i14], vertices2[i24]);\n}\nfunction coincideSquareVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24) {\n  return coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i22, i23, i24, i21)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i23, i24, i21, i22)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i24, i21, i22, i23);\n}\n\nclass Prism extends Placeable {\n  constructor() {\n    super();\n    this.colorMask = 0;\n    this.backgroundColor = \"#000\";\n    this.foregroundColor = \"#fff\";\n    this.vertices = PRISM_VERTICES.map(vertex => vec3.clone(vertex));\n    this.collisionVertices = PRISM_COLLISION_VERTICES.map(vertex => vec3.clone(vertex));\n    this.polygonNormals = PRISM_POLYGON_NORMALS.map(normal => vec3.clone(normal));\n  }\n\n  applyTransform(parentOrientation) {\n    super.applyTransform(parentOrientation);\n    for (let i = 0; i < this.vertices.length; i++) {\n      const vertex = this.vertices[i];\n      vec3.transformQuat(vertex, PRISM_VERTICES[i], this.worldOrientation);\n      vec3.add(vertex, vertex, this.worldPosition);\n    }\n    for (let i = 0; i < this.collisionVertices.length; i++) {\n      const vertex = this.collisionVertices[i];\n      vec3.transformQuat(vertex, PRISM_COLLISION_VERTICES[i], this.worldOrientation);\n      vec3.add(vertex, vertex, this.worldPosition);\n    }\n    for (let i = 0; i < this.polygonNormals.length; i++) {\n      vec3.transformQuat(this.polygonNormals[i], PRISM_POLYGON_NORMALS[i], this.worldOrientation);\n    }\n  }\n\n  intersect(ray) {\n    return intersectTriangles(ray, this.vertices, PRISM_TRIANGLE_INDICES);\n  }\n\n  collides(prism) {\n    return collideConvexHulls(this.collisionVertices, this.polygonNormals,\n        prism.collisionVertices, prism.polygonNormals);\n  }\n\n  getJunctions() {\n    const junctions = [];\n    const transform = createTransform(this.position, this.orientation);\n    for (let i = 0; i < PRISM_JUNCTIONS.length; i++) {\n      const junction = PRISM_JUNCTIONS[i];\n      const junctionPrisms = [];\n      for (let j = 0; j < junction.transforms.length; j++) {\n        const junctionTransform = multiplyTransforms(createTransform(),\n            transform, junction.transforms[j]);\n        const prism = new Prism();\n        prism.colorMask = this.colorMask;\n        prism.backgroundColor = (junction.swapColors) ? this.foregroundColor : this.backgroundColor;\n        prism.foregroundColor = (junction.swapColors) ? this.backgroundColor : this.foregroundColor;\n        vec3.copy(prism.position, junctionTransform.position);\n        quat.copy(prism.orientation, junctionTransform.orientation);\n        junctionPrisms.push(prism);\n      }\n      const pivot = vec3.transformQuat(vec3.create(), junction.pivot, this.orientation);\n      vec3.add(pivot, pivot, this.position);\n      const normal = vec3.transformQuat(vec3.create(), junction.normal, this.orientation);\n      const tangent = vec3.transformQuat(vec3.create(), junction.tangent, this.orientation);\n      junctions.push({\n        face: junction.face,\n        pivot: pivot,\n        normal: normal,\n        tangent: tangent,\n        prisms: junctionPrisms\n      });\n    }\n    return junctions;\n  }\n\n  coincideFace(prism, face) {\n    switch (face) {\n      case JunctionFace.LEFT:\n        if (coincideSquareVertices(this.vertices, prism.vertices, 0, 1, 3, 2, 4, 5, 3, 2)) {\n          return JunctionFace.RIGHT;\n        }\n        if (coincideSquareVertices(this.vertices, prism.vertices, 0, 1, 3, 2, 1, 0, 2, 3)) {\n          return JunctionFace.LEFT;\n        }\n        break;\n      case JunctionFace.RIGHT:\n        if (coincideSquareVertices(this.vertices, prism.vertices, 2, 3, 5, 4, 2, 3, 1, 0)) {\n          return JunctionFace.LEFT;\n        }\n        if (coincideSquareVertices(this.vertices, prism.vertices, 2, 3, 5, 4, 3, 2, 4, 5)) {\n          return JunctionFace.RIGHT;\n        }\n        break;\n      case JunctionFace.FRONT:\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 1, 3, 5, 0, 2, 4)) {\n          return JunctionFace.BACK;\n        }\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 1, 3, 5, 5, 3, 1)) {\n          return JunctionFace.FRONT;\n        }\n        break;\n      case JunctionFace.BACK:\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 0, 2, 4, 1, 3, 5)) {\n          return JunctionFace.FRONT;\n        }\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 0, 2, 4, 4, 2, 0)) {\n          return JunctionFace.BACK;\n        }\n        break;\n      case JunctionFace.BOTTOM:\n        if (coincideRectangleVertices(this.vertices, prism.vertices, 0, 1, 5, 4, 4, 5, 1, 0)\n            || coincideRectangleVertices(this.vertices, prism.vertices, 0, 1, 5, 4, 1, 0, 4, 5)) {\n          return JunctionFace.BOTTOM;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  coincide(prism) {\n    for (const faceName in JunctionFace) {\n      const face = JunctionFace[faceName];\n      const coincidingFace = this.coincideFace(prism, face);\n      if (coincidingFace !== undefined) {\n        return {\n          baseFace: face,\n          targetFace: coincidingFace\n        }\n      }\n    }\n  }\n\n  toArchive() {\n    return {\n      id: this.id,\n      colorMask: this.colorMask,\n      backgroundColor: this.backgroundColor,\n      foregroundColor: this.foregroundColor,\n      position: this.position,\n      orientation: this.orientation\n    };\n  }\n\n  fromArchive(archive) {\n    this.id = archive.id;\n    this.colorMask = archive.colorMask;\n    this.backgroundColor = archive.backgroundColor;\n    this.foregroundColor = archive.foregroundColor;\n    vec3.copy(this.position, archive.position);\n    quat.copy(this.orientation, archive.orientation);\n  }\n\n  clone() {\n    const prism = new Prism();\n    prism.copy(this);\n    prism.colorMask = this.colorMask;\n    prism.backgroundColor = this.backgroundColor;\n    prism.foregroundColor = this.foregroundColor;\n    for (let i = 0; i < this.vertices.length; i++) {\n      vec3.copy(prism.vertices[i], this.vertices[i]);\n    }\n    for (let i = 0; i < this.collisionVertices.length; i++) {\n      vec3.copy(prism.collisionVertices[i], this.collisionVertices[i]);\n    }\n    for (let i = 0; i < this.polygonNormals.length; i++) {\n      vec3.copy(prism.polygonNormals[i], this.polygonNormals[i]);\n    }\n    return prism;\n  }\n}\n\nexport default Prism;\nexport { PRISM_HEIGHT, PRISM_BASE, PRISM_SIDE, PRISM_MARGIN };\nexport { JunctionFace };\n","import Placeable from './Placeable';\nimport { createCylinder, intersectCylinder } from './Collision';\nimport { vec3, quat } from 'gl-matrix';\n\nconst SectionType = Object.freeze({\n  SEPARATOR: 0,\n  ACTUATOR: 1\n});\n\nconst SECTION_RADIUS = 1;\nconst SECTION_DEPTH = 0.3;\nconst SWAP_ROTATION = quat.setAxisAngle(quat.create(),\n    vec3.fromValues(0, 1, 0), Math.PI);\n\nconst SECTION_PROPERTIES = new Map([\n  [SectionType.ACTUATOR, [\n    { name: \"initialAngle\", min: -180, max: 180, default: 0 },\n    { name: \"lowerAngle\", min: -180, max: 1, default: -90 },\n    { name: \"upperAngle\", min: -1, max: 180, default: 90 },\n    { name: \"power\", min: 0, max: 10000, default: 1000 }\n  ]]\n]);\n\nclass Section extends Placeable {\n  constructor() {\n    super();\n    this.type = SectionType.ACTUATOR;\n    this.baseFace = undefined;\n    this.targetFace = undefined;\n    this.basePrismId = 0;\n    this.targetPrismId = 0;\n    this.properties = new Map();\n  }\n\n  swap() {\n    [this.baseFace, this.targetFace] = [this.targetFace, this.baseFace];\n    [this.basePrismId, this.targetPrismId] = [this.targetPrismId, this.basePrismId];\n    quat.multiply(this.orientation, this.orientation, SWAP_ROTATION);\n    quat.normalize(this.orientation, this.orientation);\n  }\n\n  intersect(ray) {\n    const normal = vec3.fromValues(1, 0, 0);\n    vec3.transformQuat(normal, normal, this.worldOrientation);\n    const cylinder = createCylinder(this.worldPosition, normal,\n        SECTION_RADIUS, SECTION_DEPTH, true);\n    return intersectCylinder(ray, cylinder);\n  }\n\n  getProperties() {\n    const mergedProperties = [];\n    const sectionProperties = SECTION_PROPERTIES.get(this.type);\n    if (sectionProperties) {\n      for (const sectionProperty of sectionProperties) {\n        let value;\n        if (this.properties.has(sectionProperty.name)) {\n          value = this.properties.get(sectionProperty.name);\n        } else {\n          value = sectionProperty.default;\n        }\n        const mergedProperty = Object.assign({}, sectionProperty);\n        mergedProperty.value = value;\n        mergedProperties.push(mergedProperty);\n      }\n    }\n    return mergedProperties;\n  }\n\n  getProperty(name) {\n    const sectionProperties = SECTION_PROPERTIES.get(this.type);\n    if (sectionProperties) {\n      return sectionProperties.find(property => property.name === name);\n    }\n  }\n\n  getPropertyValue(name) {\n    if (this.properties.has(name)) {\n      return this.properties.get(name);\n    }\n    const property = this.getProperty(name);\n    if (property) {\n      return property.default;\n    }\n  }\n\n  setPropertyValue(name, value) {\n    this.properties.set(name, this.validatePropertyValue(name, value));\n  }\n\n  clearPropertyValue(name) {\n    this.properties.delete(name);\n  }\n\n  validatePropertyValue(name, value) {\n    const property = this.getProperty(name);\n    if (property) {\n      if (isNaN(value)) {\n        return property.default;\n      } else {\n        return Math.max(property.min, Math.min(property.max, value));\n      }\n    } else {\n      return value;\n    }\n  }\n\n  toArchive() {\n    return {\n      id: this.id,\n      type: this.type,\n      baseFace: this.baseFace,\n      targetFace: this.targetFace,\n      basePrismId: this.basePrismId,\n      targetPrismId: this.targetPrismId,\n      properties: Array.from(this.properties.entries()),\n      position: this.position,\n      orientation: this.orientation\n    };\n  }\n\n  fromArchive(archive, version) {\n    this.id = archive.id;\n    if (version >= 3) {\n      this.type = archive.type;\n      this.properties = new Map(archive.properties);\n    } else {\n      this.type = SectionType.SEPARATOR;\n    }\n    this.baseFace = archive.baseFace;\n    this.targetFace = archive.targetFace;\n    this.basePrismId = archive.basePrismId;\n    this.targetPrismId = archive.targetPrismId;\n    vec3.copy(this.position, archive.position);\n    quat.copy(this.orientation, archive.orientation);\n  }\n\n  clone() {\n    const section = new Section();\n    section.copy(this);\n    section.type = this.type;\n    section.baseFace = this.baseFace;\n    section.targetFace = this.targetFace;\n    section.basePrismId = this.basePrismId;\n    section.targetPrismId = this.targetPrismId;\n    section.properties = new Map(this.properties);\n    return section;\n  }\n}\n\nexport default Section;\nexport { SectionType };\n","import { mat3, quat, vec3 } from 'gl-matrix';\nimport Prism from './Prism';\nimport Section, { SectionType } from './Section';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst DEFAULT_BACKGROUND_COLOR = \"#1976d2\";\nconst DEFAULT_FOREGROUND_COLOR = \"#d9d9d9\";\n\nclass Shape {\n  constructor() {\n    this.name = \"\";\n    this.prisms = [];\n    this.sections = [];\n    this.lastPlaceableId = 0;\n    this.roll = 0;\n    this.pitch = 0;\n    this.yaw = 0;\n    this.showPose = true;\n    this.aabb = {\n      min: vec3.create(),\n      max: vec3.create(),\n      center: vec3.create()\n    };\n\n    this.error = null;\n  }\n\n  static createInitialShape() {\n    const shape = new Shape();\n    const prism = new Prism();\n    prism.id = ++shape.lastPlaceableId;\n    prism.backgroundColor = DEFAULT_BACKGROUND_COLOR;\n    prism.foregroundColor = DEFAULT_FOREGROUND_COLOR;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    return shape;\n  }\n\n  getOrientation() {\n    const orientation = quat.create();\n    quat.rotateY(orientation, orientation, this.yaw * DEGREES_TO_RADIANS);\n    quat.rotateX(orientation, orientation, this.roll * DEGREES_TO_RADIANS);\n    quat.rotateZ(orientation, orientation, this.pitch * DEGREES_TO_RADIANS);\n    return orientation;\n  }\n\n  applyTransform(alignHorizontally = false) {\n    const orientation = this.getOrientation();\n    for (let i = 0; i < 2; i++) {\n      vec3.zero(this.aabb.min);\n      vec3.zero(this.aabb.max);\n      for (let j = 0; j < this.prisms.length; j++) {\n        const prism = this.prisms[j];\n        prism.applyTransform(orientation);\n\n        // Compute axis aligned bounding box\n        for (let k = 0; k < prism.vertices.length; k++) {\n          const vertex = prism.vertices[k];\n          if ((j === 0) && (k === 0)) {\n            vec3.copy(this.aabb.min, vertex);\n            vec3.copy(this.aabb.max, vertex);\n          } else {\n            vec3.min(this.aabb.min, this.aabb.min, vertex);\n            vec3.max(this.aabb.max, this.aabb.max, vertex);\n          }\n        }\n      }\n\n      if (i === 0) {\n        // Align to ground\n        const inverseOrientation = quat.invert(quat.create(), orientation);\n        const x = (alignHorizontally ? -0.5 * (this.aabb.min[0] + this.aabb.max[0]) : 0);\n        const z = (alignHorizontally ? -0.5 * (this.aabb.min[2] + this.aabb.max[2]) : 0);\n        const translation = vec3.fromValues(x, -this.aabb.min[1], z);\n        vec3.transformQuat(translation, translation, inverseOrientation);\n        this.translate(translation);\n      } else {\n        for (const section of this.sections) {\n          section.applyTransform(orientation);\n        }\n\n        vec3.add(this.aabb.center, this.aabb.min, this.aabb.max);\n        vec3.scale(this.aabb.center, this.aabb.center, 0.5);\n      }\n    }\n  }\n\n  translate(translation) {\n    this.prisms.forEach(prism => prism.translate(translation));\n    this.sections.forEach(section => section.translate(translation));\n  }\n\n  rotate(rotation) {\n    this.prisms.forEach(prism => prism.rotate(rotation));\n    this.sections.forEach(section => section.rotate(rotation));\n  }\n\n  findPlaceable(id) {\n    if (!id) {\n      return null;\n    }\n    for (const prism of this.prisms) {\n      if (prism.id === id) {\n        return prism;\n      }\n    }\n    for (const section of this.sections) {\n      if (section.id === id) {\n        return section;\n      }\n    }\n    return null;\n  }\n\n  intersect(ray) {\n    let hitPlaceable;\n    let hitDistance;\n    for (const prism of this.prisms) {\n      const prismHitDistance = prism.intersect(ray);\n      if (prismHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (prismHitDistance < hitDistance)) {\n          hitPlaceable = prism;\n          hitDistance = prismHitDistance;\n        }\n      }\n    }\n    for (const section of this.sections) {\n      const sectionHitDistance = section.intersect(ray);\n      if (sectionHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (sectionHitDistance < hitDistance)) {\n          hitPlaceable = section;\n          hitDistance = sectionHitDistance;\n        }\n      }\n    }\n    if (!hitPlaceable) {\n      return;\n    }\n    return {\n      hitPlaceable: hitPlaceable,\n      hitDistance: hitDistance\n    };\n  }\n\n  hasPrismIntersections() {\n    for (let i = 0; i < this.prisms.length; i++) {\n      const prism = this.prisms[i];\n      for (let j = i + 1; j < this.prisms.length; j++) {\n        const otherPrism = this.prisms[j];\n        if (prism.collides(otherPrism)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  getAvailableJunctions(prism) {\n    const orientation = this.getOrientation();\n    let junctions = prism.getJunctions();\n    junctions.forEach(junction => {\n      junction.prisms.forEach(junctionPrism => junctionPrism.applyTransform(orientation));\n      junction.prisms = junction.prisms.filter(junctionPrism => this.prisms.every(shapePrism =>\n          (shapePrism === prism) || !shapePrism.collides(junctionPrism)));\n\n      if (junction.prisms.length === 0) {\n        for (const shapePrism of this.prisms) {\n          if (shapePrism === prism) {\n            continue;\n          }\n          const coincidingFace = prism.coincideFace(shapePrism, junction.face);\n          if (coincidingFace !== undefined) {\n            if (this.sections.some(section =>\n                ((section.basePrismId === prism.id) && (section.targetPrismId === shapePrism.id))\n                || ((section.basePrismId === shapePrism.id) && (section.targetPrismId === prism.id)))) {\n              continue;\n            }\n            const section = new Section();\n            const binormal = vec3.cross(vec3.create(), junction.normal, junction.tangent);\n            vec3.copy(section.position, junction.pivot);\n            quat.fromMat3(section.orientation, mat3.fromValues(\n                junction.normal[0], junction.normal[1], junction.normal[2],\n                junction.tangent[0], junction.tangent[1], junction.tangent[2],\n                binormal[0], binormal[1], binormal[2]));\n            section.baseFace = junction.face;\n            section.targetFace = coincidingFace;\n            section.basePrismId = prism.id;\n            section.targetPrismId = shapePrism.id;\n            section.applyTransform(orientation);\n            junction.section = section;\n            break;\n          }\n        }\n      }\n\n      vec3.transformQuat(junction.pivot, junction.pivot, orientation);\n      vec3.transformQuat(junction.normal, junction.normal, orientation);\n      vec3.transformQuat(junction.tangent, junction.tangent, orientation);\n    });\n    return junctions.filter(junction => (junction.prisms.length > 0) || junction.section);\n  }\n\n  discoverParts() {\n    this.error = null;\n    let parts = [];\n    for (const prism of this.prisms) {\n      const suitableParts = [];\n      for (const part of parts) {\n        for (const partPrism of part) {\n          const coincidence = prism.coincide(partPrism);\n          if ((coincidence !== undefined) && this.sections.every(section =>\n              ((section.basePrismId !== prism.id) || (section.baseFace !== coincidence.baseFace))\n              && ((section.targetPrismId !== prism.id) || (section.targetFace !== coincidence.baseFace)))) {\n            suitableParts.push(part);\n            break;\n          }\n        }\n      }\n      let suitablePart;\n      if (suitableParts.length === 1) {\n        suitablePart = suitableParts[0];\n      } else if (suitableParts.length > 1) {\n        // Merge suitable parts\n        suitablePart = [].concat.apply([], suitableParts);\n        parts = parts.filter(part => !suitableParts.includes(part));\n        parts.push(suitablePart);\n      } else {\n        suitablePart = [];\n        parts.push(suitablePart);\n      }\n      suitablePart.push(prism);\n    }\n    return parts;\n  }\n\n  discoverPartChains(parts) {\n    this.error = null;\n    const partChains = [];\n    const remainingParts = new Set(parts);\n    while (remainingParts.size > 0) {\n      const part = remainingParts.values().next().value;\n      const partChain = this.findChildParts(null, part, null, parts, false);\n      if (!partChain) {\n        return;\n      }\n      for (const part of partChain) {\n        remainingParts.delete(part);\n      }\n      partChains.push(partChain);\n    }\n    partChains.sort((a, b) => (a.length === b.length\n        ? b.reduce((acc, val) => acc + val.length) - a.reduce((acc, val) => acc + val.length)\n        : b.length - a.length));\n    for (let i = 0; i < partChains.length; i++) {\n      const partChain = partChains[i];\n      for (let j = i + 1; j < partChains.length; j++) {\n        const otherPartChain = partChains[j];\n        if (partChain.some(part => otherPartChain.some(otherPart => otherPart === part))) {\n          partChains.splice(j, 1);\n          j--;\n        }\n      }\n    }\n    return partChains;\n  }\n\n  findValidSectionRefs(section, parts) {\n    const basePrism = this.findPlaceable(section.basePrismId);\n    const targetPrism = this.findPlaceable(section.targetPrismId);\n    const basePart = parts.find(part => part.some(prism => prism === basePrism));\n    const targetPart = parts.find(part => part.some(prism => prism === targetPrism));\n    if (!basePart || !targetPart) {\n      this.error = \"Section parts not found\";\n      return;\n    }\n    if (basePart === targetPart) {\n      this.error = \"Section must connect different parts\";\n      return;\n    }\n    return {\n      basePart: basePart,\n      targetPart: targetPart\n    };\n  }\n\n  findChildParts(rootPart, parentPart, parentSection, parts, bidirectional, childParts = []) {\n    if (childParts.length === 0) {\n      childParts.push(parentPart);\n    }\n    for (const section of this.sections) {\n      if ((section.type === SectionType.SEPARATOR) || (section === parentSection)) {\n        continue;\n      }\n      const sectionRefs = this.findValidSectionRefs(section, parts);\n      if (!sectionRefs) {\n        return;\n      }\n      let childPart = (sectionRefs.basePart === parentPart ? sectionRefs.targetPart : null);\n      if (!childPart && bidirectional) {\n        childPart = (sectionRefs.targetPart === parentPart ? sectionRefs.basePart : null);\n      }\n      if (!childPart) {\n        continue;\n      }\n      if ((childPart === rootPart) || childParts.find(part => part === childPart)) {\n        this.error = \"Child parts must not be looped\";\n        return;\n      }\n      childParts.push(childPart);\n      if (!this.findChildParts(rootPart, childPart, section, parts, bidirectional, childParts)) {\n        return;\n      }\n    }\n    return childParts;\n  }\n\n  applyInitialAngles() {\n    this.error = null;\n    let parts;\n    const positionInversed = vec3.create();\n    const axis = vec3.create();\n    const rotation = quat.create();\n    for (const section of this.sections) {\n      if (section.type !== SectionType.ACTUATOR) {\n        continue;\n      }\n      const initialAngle = section.getPropertyValue(\"initialAngle\");\n      if (initialAngle === 0) {\n        continue;\n      }\n      if (!parts) {\n        parts = this.discoverParts();\n      }\n      const sectionRefs = this.findValidSectionRefs(section, parts);\n      if (!sectionRefs) {\n        return;\n      }\n      const childParts = this.findChildParts(sectionRefs.basePart,\n          sectionRefs.targetPart, section, parts, true);\n      if (!childParts) {\n        console.log(\"Failed to apply initial angle\");\n        continue;\n      }\n      vec3.negate(positionInversed, section.position);\n      vec3.transformQuat(axis, vec3.set(axis, 1, 0, 0), section.orientation);\n      quat.setAxisAngle(rotation, axis, initialAngle * DEGREES_TO_RADIANS);\n      const childPrisms = childParts.flat();\n      const childSections = this.sections.filter(section => childPrisms.some(prism =>\n          (prism.id === section.basePrismId) || prism.id === section.targetPrismId));\n      [...childPrisms, ...childSections].forEach(placeable => {\n        if (placeable === section) {\n          return;\n        }\n        placeable.translate(positionInversed);\n        placeable.rotate(rotation);\n        placeable.translate(section.position);\n      });\n    }\n    if (parts) {\n      this.applyTransform();\n    }\n  }\n\n  toArchive() {\n    return {\n      name: this.name,\n      prisms: this.prisms.map(prism => prism.toArchive()),\n      sections: this.sections.map(section => section.toArchive()),\n      lastPlaceableId: this.lastPlaceableId,\n      roll: this.roll,\n      pitch: this.pitch,\n      yaw: this.yaw,\n      showPose: this.showPose\n    };\n  }\n\n  fromArchive(archive, version) {\n    this.prisms = archive.prisms.map(prismArchive => {\n      const prism = new Prism();\n      prism.fromArchive(prismArchive);\n      return prism;\n    });\n    if (version >= 2) {\n      this.sections = archive.sections.map(sectionArchive => {\n        const section = new Section();\n        section.fromArchive(sectionArchive, version);\n        return section;\n      });\n      this.lastPlaceableId = archive.lastPlaceableId;\n    } else {\n      this.lastPlaceableId = archive.lastPrismId;\n    }\n    this.roll = archive.roll;\n    this.pitch = archive.pitch;\n    this.yaw = archive.yaw;\n    if (version >= 3) {\n      this.name = archive.name;\n      this.showPose = archive.showPose;\n    }\n  }\n\n  clone() {\n    const shape = new Shape();\n    shape.name = this.name;\n    for (const prism of this.prisms) {\n      shape.prisms.push(prism.clone());\n    }\n    for (const section of this.sections) {\n      shape.sections.push(section.clone());\n    }\n    shape.lastPlaceableId = this.lastPlaceableId;\n    shape.roll = this.roll;\n    shape.pitch = this.pitch;\n    shape.yaw = this.yaw;\n    shape.showPose = this.showPose;\n    vec3.copy(shape.aabb.min, this.aabb.min);\n    vec3.copy(shape.aabb.max, this.aabb.max);\n    vec3.copy(shape.aabb.center, this.aabb.center);\n    return shape;\n  }\n}\n\nexport default Shape;\n","import React, { Component } from 'react';\nimport { vec3, vec4, quat, mat3, mat4 } from 'gl-matrix';\nimport ShapeView from './ShapeView';\nimport './App.css';\nimport tinycolor from 'tinycolor2';\nimport { intersectSphere, rayToPointDistance } from './Collision';\nimport { AppMode } from './App';\nimport Prism from './Prism';\nimport Section, { SectionType } from './Section';\nimport { createTransform, multiplyTransforms } from './Transform';\nimport Shape from './Shape';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\n\nconst COLOR_MASK_COUNT = 8;\nconst POINTER_DRAG_THRESHOLD = 3;\nconst POINTER_DRAG_THRESHOLD_SQUARED = POINTER_DRAG_THRESHOLD * POINTER_DRAG_THRESHOLD;\nconst POINTER_DRAG_FACTOR = 0.01;\nconst ELEVATION_LIMIT = 0.48 * Math.PI;\nconst CAMERA_ANIMATION_TIME = 0.3;\nconst CAMERA_ANIMATION_FOLLOW_TIME = 0.25 * CAMERA_ANIMATION_TIME;\nconst DEFAULT_ELEVATION = -Math.PI / 10;\nconst DEFAULT_HEADING = -Math.PI / 40;\n\nconst CAMERA_FOCAL_LENGTH_MIN = 15;\nconst CAMERA_FOCAL_LENGTH_MAX = 50;\nconst CAMERA_SENSOR_HEIGHT = 32;\nconst CAMERA_NEAR = 1;\nconst CAMERA_FAR = 300;\nconst CAMERA_DISTANCE = 10;\nconst SHAPE_FIT_SCALE = 1.1;\nfunction fovYToFocalLength(fovY) {\n  return 0.5 * CAMERA_SENSOR_HEIGHT / Math.tan(0.5 * fovY * DEGREES_TO_RADIANS);\n}\nfunction focalLengthToFovY(fl) {\n  return 2 * Math.atan(0.5 * CAMERA_SENSOR_HEIGHT / fl) * RADIANS_TO_DEGREES;\n}\n\nconst FOG_COLOR = \"#e6e6e6ff\";\nconst FOG_DISTANCE = 30;\nconst GROUND_HALF_SIZE = 1000;\nconst GROUND_GRID_SIZE = 4;\n\nconst HIGHLIGHT_PRIMARY_COLOR = \"#ffff40\";\nconst HIGHLIGHT_ALTERNATE_COLOR = \"#b266ff\";\nconst HIGHLIGHT_OPAQUE_BLEND = 0.8;\nconst HIGHLIGHT_START_BLEND = 0.3;\nconst HIGHLIGHT_RANGE_BLEND = HIGHLIGHT_OPAQUE_BLEND - HIGHLIGHT_START_BLEND;\nconst HIGHLIGHT_ANIMATION_TIME = 2;\n\nconst KNOB_RADIUS = 0.4;\n\nconst SECTION_COLORS = new Map([\n  [SectionType.SEPARATOR, \"#4caf50\"],\n  [SectionType.ACTUATOR, \"#ff9800\"]\n]);\nconst INDICATION_COLOR = \"#90caf960\";\nconst CREATION_COLOR = \"#fff59d60\";\n\nconst GOAL_ARCHIVE = \"{\\\"version\\\":3,\\\"shape\\\":{\\\"name\\\":\\\"Goal\\\",\\\"prisms\\\":[{\\\"id\\\":1,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":0,\\\"1\\\":0.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":0,\\\"1\\\":0,\\\"2\\\":0,\\\"3\\\":1}},{\\\"id\\\":2,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1,\\\"1\\\":0.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":1,\\\"1\\\":0,\\\"2\\\":0,\\\"3\\\":6.123234262925839e-17}},{\\\"id\\\":3,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":2,\\\"1\\\":0.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":1.2246468525851679e-16,\\\"1\\\":0,\\\"2\\\":0,\\\"3\\\":-1}},{\\\"id\\\":4,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1,\\\"1\\\":1.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":1.2246468525851679e-16,\\\"1\\\":0,\\\"2\\\":0,\\\"3\\\":-1}},{\\\"id\\\":5,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":0.5,\\\"1\\\":2,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":1.7934537957764396e-17,\\\"1\\\":-1.2989341566884322e-16,\\\"2\\\":-0.7071067690849304,\\\"3\\\":0.7071067690849304}},{\\\"id\\\":6,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":1.5,\\\"1\\\":2,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":-1.911257582981016e-16,\\\"1\\\":4.329780632585522e-17,\\\"2\\\":0.7071067690849304,\\\"3\\\":0.7071067690849304}},{\\\"id\\\":7,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1.5,\\\"1\\\":3,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":0.7071067690849304,\\\"1\\\":0.7071067690849304,\\\"2\\\":-2.3657788664006152e-24,\\\"3\\\":2.344235679326793e-16}},{\\\"id\\\":8,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":0.5000000596046448,\\\"1\\\":3,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":2.7772137756725695e-16,\\\"1\\\":4.329780301713277e-17,\\\"2\\\":-0.7071067690849304,\\\"3\\\":-0.7071067690849304}},{\\\"id\\\":9,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":0.5000001192092896,\\\"1\\\":4,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":-0.7071067690849304,\\\"1\\\":-0.7071067690849304,\\\"2\\\":-8.659560603426554e-17,\\\"3\\\":-3.210191872018346e-16}},{\\\"id\\\":10,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":1.5,\\\"1\\\":4,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":2.7772137756725695e-16,\\\"1\\\":4.329780301713277e-17,\\\"2\\\":-0.7071067690849304,\\\"3\\\":-0.7071067690849304}},{\\\"id\\\":11,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1,\\\"1\\\":4.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":-2.702926603918203e-16,\\\"1\\\":6.12323624815931e-17,\\\"2\\\":1,\\\"3\\\":0}},{\\\"id\\\":12,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1,\\\"1\\\":5.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":-1.6550653361678656e-32,\\\"1\\\":1,\\\"2\\\":-1.9852334701272664e-23,\\\"3\\\":2.702926603918203e-16}}],\\\"sections\\\":[],\\\"lastPlaceableId\\\":12,\\\"roll\\\":0,\\\"pitch\\\":0,\\\"yaw\\\":0,\\\"showPose\\\":true}}\";\n\nconst iblUrl = \"res/environment_ibl.ktx\";\nconst prismMeshUrl = \"res/prism.filamesh\";\nconst prismMaterialUrl = \"res/prism.filamat\";\nconst ghostMaterialUrl = \"res/ghost.filamat\";\nconst highcolMaterialUrl = \"res/highcol.filamat\";\nconst knobMeshUrl = \"res/knob.filamesh\";\nconst groundMaterialUrl = \"res/ground.filamat\";\nconst groundTextureUrl = \"res/ground.png\";\nconst sectionMeshUrl = \"res/section.filamesh\";\n\nconst getPrismTextureUrl = ((maskIndex) => \"res/prism\" + maskIndex + \".png\");\nconst colorToFloat3 = ((color) => {\n  const rgb = tinycolor(color).toRgb();\n  return [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n});\nconst colorToFloat4 = ((color) => {\n  const rgb = tinycolor(color).toRgb();\n  return [rgb.r / 255, rgb.g / 255, rgb.b / 255, rgb.a];\n});\n\nclass Viewport extends Component {\n  constructor(props) {\n    super(props);\n\n    this.auxMat4 = mat4.create();\n    this.auxTransform = createTransform();\n  }\n\n  componentDidMount() {\n    let assets = [iblUrl, prismMeshUrl, prismMaterialUrl,\n        ghostMaterialUrl, highcolMaterialUrl, knobMeshUrl,\n        groundMaterialUrl, groundTextureUrl, sectionMeshUrl];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      assets.push(getPrismTextureUrl(i));\n    }\n    window.Filament.init(assets, () => {\n      this.init();\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const modeChanged = (prevProps.mode !== this.props.mode);\n    const shapeChanged = (prevProps.originalShape !== this.props.originalShape);\n    const trainingStateChanged = (prevProps.trainingState !== this.props.trainingState);\n    if (modeChanged || shapeChanged) {\n      this.refreshShapeView();\n    }\n    this.prepareGoalView();\n    if (trainingStateChanged) {\n      this.updateShapeView(this.props.trainingState.transforms);\n      this.updateGoalView(this.props.trainingState.goalPosition);\n    }\n  }\n\n  refreshShapeView() {\n    if (!this.engine) {\n      return;\n    }\n    if (this.shapeView) {\n      this.shapeView.destroy(this);\n    }\n    const showSections = (this.props.mode === AppMode.EDIT);\n    this.shapeView = new ShapeView(this.props.finalShape, showSections, this);\n    this.shapeView.addToScene(this);\n    this.activePlaceableView = null;\n    const activePlaceable = (this.props.mode === AppMode.EDIT\n        ? this.props.finalShape.findPlaceable(this.props.activePlaceableId) : null);\n    this.selectPlaceable(activePlaceable, true, false);\n  }\n\n  prepareGoalView() {\n    if (!this.engine) {\n      return;\n    }\n    if (!this.goalShape) {\n      const archive = JSON.parse(GOAL_ARCHIVE);\n      this.goalShape = new Shape();\n      this.goalShape.fromArchive(archive.shape, archive.version);\n      this.goalShape.applyTransform(true);\n    }\n    if (!this.goalView) {\n      if (this.props.mode !== AppMode.EDIT) {\n        this.goalView = new ShapeView(this.goalShape, false, this);\n      }\n    } else if (this.goalPosition) {\n      this.goalView.removeFromScene(this);\n    }\n    this.goalPosition = null;\n  }\n\n  init() {\n    this.elevation = DEFAULT_ELEVATION;\n    this.heading = DEFAULT_HEADING;\n    this.focalLengthMin = CAMERA_FOCAL_LENGTH_MIN;\n    this.focalLengthMax = CAMERA_FOCAL_LENGTH_MAX;\n    this.cameraZoom = 1;\n    this.targetZoom = this.cameraZoom;\n    this.lastZoom = this.cameraZoom;\n    this.focalPoint = vec3.create();\n    this.targetPosition = vec3.create();\n    this.lastPosition = vec3.create();\n    this.highlightColor = [0, 0, 0, 0];\n    this.animationTimer = 0;\n    this.highlightTimer = 0;\n\n    this.shapeView = null;\n    this.activePlaceableView = null;\n    this.availableJunctions = null;\n    this.originalAvailableJunctions = null;\n\n    this.goalPosition = null;\n    this.goalShape = null;\n    this.goalView = null;\n\n    this.pressing = false;\n    this.dragging = false;\n    this.pickedPlaceable = null;\n    this.pickedJunction = null;\n    this.activeJunctionPrism = null;\n    this.pointerX = 0;\n    this.pointerY = 0;\n\n    this.canvas = this.filament;\n    const engine = this.engine = window.Filament.Engine.create(this.canvas);\n    this.camera = engine.createCamera(window.Filament.EntityManager.get().create());\n    this.scene = engine.createScene();\n\n    const sunlight = window.Filament.EntityManager.get().create();\n    window.Filament.LightManager.Builder(window.Filament.LightManager$Type.SUN)\n      .color([0.98, 0.92, 0.89])\n      .intensity(70000.0)\n      .direction([0.6, -1.0, -0.8])\n      .sunAngularRadius(1.9)\n      .sunHaloSize(10.0)\n      .sunHaloFalloff(80.0)\n      .castShadows(true)\n      .build(engine, sunlight);\n    this.scene.addEntity(sunlight);\n\n    const indirectLight = engine.createIblFromKtx1(iblUrl);\n    indirectLight.setIntensity(40000);\n    this.scene.setIndirectLight(indirectLight);\n\n    this.prismMaterial = engine.createMaterial(prismMaterialUrl);\n    this.prismMesh = engine.loadFilamesh(prismMeshUrl);\n    this.ghostMaterial = engine.createMaterial(ghostMaterialUrl);\n    this.ghostRenderable = this.createRenderable(this.createGhostMaterial(), this.prismMesh);\n    this.highcolMaterial = engine.createMaterial(highcolMaterialUrl);\n    this.knobMesh = engine.loadFilamesh(knobMeshUrl);\n    this.knobRenderables = [];\n    this.sectionMesh = engine.loadFilamesh(sectionMeshUrl);\n    this.sectionRenderables = [];\n\n    this.prismTextures = [];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      this.prismTextures.push(engine.createTextureFromPng(getPrismTextureUrl(i)));\n    }\n    this.prismTextureSampler = new window.Filament.TextureSampler(\n        window.Filament.MinFilter.LINEAR_MIPMAP_LINEAR,\n        window.Filament.MagFilter.LINEAR,\n        window.Filament.WrapMode.CLAMP_TO_EDGE);\n\n    const ground = this.createGround(GROUND_HALF_SIZE, GROUND_GRID_SIZE);\n    this.scene.addEntity(ground);\n\n    this.refreshShapeView();\n\n    this.swapChain = engine.createSwapChain();\n    this.renderer = engine.createRenderer();\n    this.view = engine.createView();\n    this.view.setCamera(this.camera);\n    this.view.setScene(this.scene);\n    this.view.setFogOptions({ color: colorToFloat3(FOG_COLOR), distance: FOG_DISTANCE, enabled: true });\n    this.renderer.setClearOptions({ clearColor: colorToFloat4(FOG_COLOR), clear: true });\n\n    this.resize();\n    this.renderFrame = this.renderFrame.bind(this);\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n    window.requestAnimationFrame(this.renderFrame);\n    this.canvas.addEventListener(\"pointerdown\", (e) => this.handlePointerDown(e));\n    this.canvas.addEventListener(\"pointerup\", (e) => this.handlePointerUp(e));\n    this.canvas.addEventListener(\"pointermove\", (e) => this.handlePointerMove(e));\n  }\n\n  createGround(halfSize, gridSize) {\n    const vb = window.Filament.VertexBuffer.Builder()\n      .vertexCount(4)\n      .bufferCount(2)\n      .attribute(window.Filament.VertexAttribute.POSITION, 0,\n          window.Filament.VertexBuffer$AttributeType.FLOAT3, 0, 12)\n      .attribute(window.Filament.VertexAttribute.UV0, 1,\n          window.Filament.VertexBuffer$AttributeType.FLOAT2, 0, 8)\n      .build(this.engine);\n    vb.setBufferAt(this.engine, 0, new Float32Array([\n      -halfSize, 0, -halfSize,\n      -halfSize, 0, halfSize,\n      halfSize, 0, -halfSize,\n      halfSize, 0, halfSize\n    ]));\n    const reps = 2 * halfSize / gridSize;\n    vb.setBufferAt(this.engine, 1, new Float32Array([0, 0, 0, reps, reps, 0, reps, reps]));\n\n    const ib = window.Filament.IndexBuffer.Builder()\n      .indexCount(6)\n      .bufferType(window.Filament.IndexBuffer$IndexType.USHORT)\n      .build(this.engine);\n    ib.setBuffer(this.engine, new Uint16Array([0, 1, 2, 2, 1, 3]));\n\n    const material = this.engine.createMaterial(groundMaterialUrl);\n    const texture = this.engine.createTextureFromPng(groundTextureUrl);\n    const sampler = new window.Filament.TextureSampler(\n        window.Filament.MinFilter.LINEAR_MIPMAP_LINEAR,\n        window.Filament.MagFilter.LINEAR,\n        window.Filament.WrapMode.REPEAT);\n    const materialInstance = material.getDefaultInstance();\n    materialInstance.setTextureParameter(\"baseColor\", texture, sampler);\n\n    const entity = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox({ center: [0, 0, 0], halfExtent: [halfSize, 0, halfSize] })\n      .material(0, materialInstance)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES, vb, ib)\n      .castShadows(false)\n      .receiveShadows(true)\n      .build(this.engine, entity);\n    return entity;\n  }\n\n  createRenderable(material, mesh, castShadows = false, receiveShadows = false) {\n    const renderable = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox(this.getBoundingBox(mesh.renderable))\n      .material(0, material)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES,\n          mesh.vertexBuffer, mesh.indexBuffer)\n      .castShadows(castShadows)\n      .receiveShadows(receiveShadows)\n      .build(this.engine, renderable);\n    return renderable;\n  }\n\n  destroyRenderable(renderable) {\n    const material = this.getRenderableMaterial(renderable);\n    this.engine.destroyMaterialInstance(material);\n    this.engine.destroyEntity(renderable);\n    const renderableManager = this.engine.getRenderableManager();\n    renderableManager.destroy(renderable);\n  }\n\n  createGhostMaterial() {\n    const material = this.ghostMaterial.createInstance();\n    material.setColor4Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat4(INDICATION_COLOR));\n    return material;\n  }\n\n  createHighcolMaterial(color) {\n    const material = this.highcolMaterial.createInstance();\n    material.setColor3Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat3(color));\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, [0, 0, 0, 0]);\n    return material;\n  }\n\n  createPrismRenderable(prism) {\n    const validColorMask = (prism.colorMask >= 0) && (prism.colorMask < COLOR_MASK_COUNT)\n        ? prism.colorMask : 0;\n    const material = this.prismMaterial.createInstance();\n    material.setTextureParameter(\"colorMask\",\n        this.prismTextures[validColorMask], this.prismTextureSampler);\n    material.setColor3Parameter(\"backgroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(prism.backgroundColor));\n    material.setColor3Parameter(\"foregroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(prism.foregroundColor));\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, [0, 0, 0, 0]);\n    return this.createRenderable(material, this.prismMesh, true, true);\n  }\n\n  createGhostKnobRenderable() {\n    return this.createRenderable(this.createGhostMaterial(), this.knobMesh);\n  }\n\n  createGhostSectionRenderable() {\n    return this.createRenderable(this.createGhostMaterial(), this.sectionMesh);\n  }\n\n  createSectionRenderable(section) {\n    return this.createRenderable(this.createHighcolMaterial(SECTION_COLORS.get(section.type)),\n        this.sectionMesh);\n  }\n\n  getBoundingBox(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const boundingBox = renderableManager.getAxisAlignedBoundingBox(renderableInstance);\n    renderableInstance.delete();\n    return boundingBox;\n  }\n\n  setRenderableTransform(renderable, position, orientation) {\n    const transformManager = this.engine.getTransformManager();\n    const transformInstance = transformManager.getInstance(renderable);\n    const transform = mat4.fromRotationTranslation(this.auxMat4, orientation, position);\n    transformManager.setTransform(transformInstance, transform);\n    transformInstance.delete();\n  }\n\n  getRenderableMaterial(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const material = renderableManager.getMaterialInstanceAt(renderableInstance, 0);\n    renderableInstance.delete();\n    return material;\n  }\n\n  updateCamera() {\n    const eye = [this.focalPoint[0], this.focalPoint[1], this.focalPoint[2] + CAMERA_DISTANCE];\n    const up = [0, 1, 0];\n    vec3.rotateX(eye, eye, this.focalPoint, this.elevation);\n    vec3.rotateY(eye, eye, this.focalPoint, this.heading);\n    this.camera.lookAt(eye, this.focalPoint, up);\n\n    const focalLength = this.focalLengthMin * (1 - this.cameraZoom)\n        + this.focalLengthMax * this.cameraZoom;\n    const fovY = focalLengthToFovY(focalLength);\n    const aspect = this.canvas.width / this.canvas.height;\n    this.camera.setProjectionFov(fovY, aspect, CAMERA_NEAR, CAMERA_FAR,\n        window.Filament.Camera$Fov.VERTICAL);\n  }\n\n  updateFollowPosition(position) {\n    vec3.copy(this.lastPosition, this.focalPoint);\n    vec3.copy(this.targetPosition, position);\n    this.lastZoom = this.cameraZoom;\n    this.animationTimer = CAMERA_ANIMATION_FOLLOW_TIME;\n  }\n\n  updateShapeView(transforms) {\n    const baseLink = (this.props.rigidInfo.baseLinks.length > 0\n                      ? this.props.rigidInfo.baseLinks[0] : null);\n    for (let i = 0; i < transforms.length; i++) {\n      const partTransform = transforms[i];\n      const link = this.props.rigidInfo.links[i];\n      if (link === baseLink) {\n        this.updateFollowPosition(partTransform.position);\n      }\n      for (let j = 0; j < link.prisms.length; j++) {\n        const prismId = link.prisms[j].id;\n        const viewTransform = link.viewTransforms[j];\n        multiplyTransforms(this.auxTransform, partTransform, viewTransform);\n        const placeableView = this.shapeView.findPlaceableView(prismId);\n        this.setRenderableTransform(placeableView.renderable, this.auxTransform.position,\n                                    this.auxTransform.orientation);\n      }\n    }\n  }\n\n  updateGoalView(goalPosition) {\n    if (!this.goalPosition) {\n      this.goalView.addToScene(this);\n    }\n    if (!this.goalPosition || !vec3.equals(this.goalPosition, goalPosition)) {\n      this.goalView.placeableViews.forEach(placeableView => {\n        quat.copy(this.auxTransform.orientation, placeableView.placeable.worldOrientation);\n        vec3.add(this.auxTransform.position, placeableView.placeable.worldPosition, goalPosition);\n        this.setRenderableTransform(placeableView.renderable, this.auxTransform.position,\n                                    this.auxTransform.orientation);\n      });\n      this.goalPosition = goalPosition;\n    }\n  }\n\n  renderFrame(timestamp) {\n    if (this.lastTime === undefined) {\n      this.lastTime = timestamp;\n    }\n    const deltaTime = 1e-3 * (timestamp - this.lastTime);\n    this.lastTime = timestamp;\n\n    if (this.animationTimer < CAMERA_ANIMATION_TIME) {\n      this.animationTimer += deltaTime;\n      const t = Math.min(this.animationTimer / CAMERA_ANIMATION_TIME, 1);\n      const k = t * t * (3 - 2 * t);\n      vec3.lerp(this.focalPoint, this.lastPosition, this.targetPosition, k);\n      this.cameraZoom = this.lastZoom * (1 - k) + this.targetZoom * k;\n      this.updateCamera();\n    }\n\n    if (this.activePlaceableView) {\n      this.highlightTimer += deltaTime;\n      if (this.highlightTimer > HIGHLIGHT_ANIMATION_TIME) {\n        this.highlightTimer %= HIGHLIGHT_ANIMATION_TIME;\n      }\n      const t = 2 * Math.abs(this.highlightTimer / HIGHLIGHT_ANIMATION_TIME - 0.5);\n      const k = t * t * (3 - 2 * t);\n      const highlightIntensity = HIGHLIGHT_START_BLEND + k * HIGHLIGHT_RANGE_BLEND;\n      this.setHighlightIntensity(this.activePlaceableView, highlightIntensity);\n    }\n\n    this.renderer.render(this.swapChain, this.view);\n    window.requestAnimationFrame(this.renderFrame);\n  }\n\n  resize() {\n    const dpr = window.devicePixelRatio;\n    const width = this.canvas.width = 0.8 * window.innerWidth * dpr;\n    const height = this.canvas.height = window.innerHeight * dpr;\n    this.view.setViewport([0, 0, width, height]);\n    this.focalLengthMin = CAMERA_FOCAL_LENGTH_MIN;\n    this.focalLengthMax = CAMERA_FOCAL_LENGTH_MAX;\n    if (width < height) {\n      const aspect = width / height;\n      this.focalLengthMin *= aspect;\n      this.focalLengthMax *= aspect;\n    }\n\n    this.updateCamera();\n  }\n\n  isPrimaryPointer(e) {\n    return (e.pointerType !== \"touch\") || e.isPrimary;\n  }\n\n  handlePointerDown(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n\n    this.pickedPlaceable = null;\n    this.pickedJunction = null;\n    this.activeJunctionPrism = null;\n\n    if (this.props.mode === AppMode.EDIT) {\n      const ray = this.getCastingRay(e.clientX, e.clientY);\n      const placeableIntersection = this.props.finalShape.intersect(ray);\n      let junctionIntersection;\n      if (this.props.activePlaceableId) {\n        junctionIntersection = this.intersectJunctions(ray);\n      }\n      if (junctionIntersection && (!placeableIntersection\n          || (junctionIntersection.hitDistance < placeableIntersection.hitDistance))) {\n        this.pickedJunction = junctionIntersection.hitJunction;\n        if (this.pickedJunction.section) {\n          this.activatePrismSection(this.availableJunctions, this.pickedJunction);\n        } else {\n          this.activatePrismKnob(this.availableJunctions, this.pickedJunction);\n        }\n      } else {\n        this.pickedPlaceable = (placeableIntersection) ? placeableIntersection.hitPlaceable : null;\n      }\n    }\n\n    this.pressing = true;\n    this.dragging = false;\n    this.pointerX = e.clientX;\n    this.pointerY = e.clientY;\n  }\n\n  handlePointerUp(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n\n    if (this.props.mode === AppMode.EDIT) {\n      if (this.pickedJunction) {\n        if (this.pickedJunction.section || this.activeJunctionPrism) {\n          const originalPickedJunction = this.originalAvailableJunctions.find(\n            junction => junction.face === this.pickedJunction.face);\n          if (originalPickedJunction.section) {\n            this.addSection(originalPickedJunction.section);\n          } else {\n            const activeJunctionPrismIndex = this.pickedJunction.prisms.findIndex(prism => prism === this.activeJunctionPrism);\n            const originalActiveJunctionPrism = originalPickedJunction.prisms[activeJunctionPrismIndex];\n            this.addPrism(originalActiveJunctionPrism);\n          }\n        }\n      } else if (!this.dragging) {\n        this.selectPlaceable(this.pickedPlaceable, true, true);\n      }\n      this.hideGhostPrism();\n      if (this.availableJunctions) {\n        this.showPrismKnobs(this.availableJunctions);\n        this.showPrismSections(this.availableJunctions);\n      }\n    }\n\n    this.pressing = false;\n  }\n\n  handlePointerMove(e) {\n    if (!this.isPrimaryPointer(e) || !this.pressing) {\n      return;\n    }\n    const dx = e.clientX - this.pointerX;\n    const dy = e.clientY - this.pointerY;\n    if (this.dragging) {\n      if (this.pickedJunction && !this.pickedJunction.section) {\n        const ray = this.getCastingRay(e.clientX, e.clientY);\n        const nearestJunctionPrism = this.pickNearestJunctionPrism(ray, this.pickedJunction);\n        if (nearestJunctionPrism !== this.activeJunctionPrism) {\n          this.showGhostPrism(nearestJunctionPrism.worldPosition, nearestJunctionPrism.worldOrientation);\n          this.activeJunctionPrism = nearestJunctionPrism;\n        }\n      } else if (!this.pickedJunction) {\n        this.elevation = Math.min(Math.max(\n            this.elevation - dy * POINTER_DRAG_FACTOR, -ELEVATION_LIMIT), ELEVATION_LIMIT);\n        this.heading = (this.heading - dx * POINTER_DRAG_FACTOR) % (2 * Math.PI);\n        this.updateCamera();\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n      }\n    } else {\n      const dragDistanceSquared = dx * dx + dy * dy;\n      if (dragDistanceSquared >= POINTER_DRAG_THRESHOLD_SQUARED) {\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n        this.dragging = true;\n      }\n    }\n  }\n\n  computeAutoZoom(shape) {\n    let autoFovY = 0;\n    const point = vec3.create();\n    const viewRotation = mat3.fromMat4(mat3.create(), this.camera.getViewMatrix());\n    const invAspect = this.canvas.height / this.canvas.width;\n    for (const prism of shape.prisms) {\n      for (const vertex of prism.vertices) {\n        vec3.sub(point, vertex, shape.aabb.center);\n        vec3.transformMat3(point, point, viewRotation);\n        const widthFitFovY = 2 * Math.atan(SHAPE_FIT_SCALE * invAspect\n            * Math.abs(point[0]) / (CAMERA_DISTANCE - point[2])) * RADIANS_TO_DEGREES;\n        if (widthFitFovY > autoFovY) {\n          autoFovY = widthFitFovY;\n        }\n        const heightFitFovY = 2 * Math.atan(SHAPE_FIT_SCALE * Math.abs(point[1])\n            / (CAMERA_DISTANCE - point[2])) * RADIANS_TO_DEGREES;\n        if (heightFitFovY > autoFovY) {\n          autoFovY = heightFitFovY;\n        }\n      }\n    }\n    if (autoFovY > 0) {\n      const autoFocalLength = fovYToFocalLength(autoFovY);\n      const autoZoom = (autoFocalLength - this.focalLengthMin)\n          / (this.focalLengthMax - this.focalLengthMin);\n      return Math.min(Math.max(autoZoom, 0), 1);\n    } else {\n      return 1;\n    }\n  }\n\n  getCastingRay(clientX, clientY) {\n    const dpr = window.devicePixelRatio;\n    const x = (2 * clientX * dpr) / this.canvas.width - 1;\n    const y = 1 - (2 * clientY * dpr) / this.canvas.height;\n    const rayVec = vec4.fromValues(x, y, -1, 1);\n    vec4.transformMat4(rayVec, rayVec, window.Filament.Camera.inverseProjection(\n        this.camera.getProjectionMatrix()));\n    rayVec[2] = -1;\n    rayVec[3] = 0;\n    vec4.transformMat4(rayVec, rayVec, this.camera.getModelMatrix());\n    const direction = vec3.fromValues(rayVec[0], rayVec[1], rayVec[2]);\n    vec3.normalize(direction, direction);\n    return {\n      origin: this.camera.getPosition(),\n      direction: direction\n    };\n  }\n\n  intersectJunctions(ray) {\n    if (!this.availableJunctions) {\n      return;\n    }\n    let hitJunction;\n    let hitDistance;\n    for (let i = 0; i < this.availableJunctions.length; i++) {\n      const junction = this.availableJunctions[i];\n      let junctionHitDistance;\n      if (junction.section) {\n        junctionHitDistance = junction.section.intersect(ray);\n      } else {\n        junctionHitDistance = intersectSphere(ray, junction.pivot, KNOB_RADIUS);\n      }\n      if (junctionHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (junctionHitDistance < hitDistance)) {\n          hitJunction = junction;\n          hitDistance = junctionHitDistance;\n        }\n      }\n    }\n    if (!hitJunction) {\n      return;\n    }\n    return {\n      hitJunction: hitJunction,\n      hitDistance: hitDistance\n    };\n  }\n\n  pickNearestJunctionPrism(ray, junction) {\n    let junctionPrism = null;\n    let rayDistance;\n    for (let i = 0; i < junction.prisms.length; i++) {\n      const prism = junction.prisms[i];\n      const prismRayDistance = rayToPointDistance(ray, prism.worldPosition);\n      if ((rayDistance === undefined) || (prismRayDistance < rayDistance)) {\n        junctionPrism = prism;\n        rayDistance = prismRayDistance;\n      }\n    }\n    return junctionPrism;\n  }\n\n  selectPlaceable(placeable, animate, notify) {\n    if (this.activePlaceableView) {\n      this.setHighlightIntensity(this.activePlaceableView, 0);\n    }\n    if (placeable) {\n      this.activePlaceableView = this.shapeView.findPlaceableView(placeable.id);\n    } else {\n      this.activePlaceableView = null;\n    }\n    if (this.activePlaceableView) {\n      this.updateHighlightColor(placeable);\n    }\n    if ((placeable instanceof Prism) && this.activePlaceableView) {\n      const originalPlaceable = this.props.originalShape.findPlaceable(placeable.id);\n      this.availableJunctions = this.props.finalShape.getAvailableJunctions(placeable);\n      this.originalAvailableJunctions = this.props.originalShape.getAvailableJunctions(originalPlaceable);\n      this.showPrismKnobs(this.availableJunctions);\n      this.showPrismSections(this.availableJunctions);\n    } else {\n      this.availableJunctions = null;\n      this.originalAvailableJunctions = null;\n      this.hidePrismKnobs();\n      this.hidePrismSections();\n    }\n    if (animate) {\n      vec3.copy(this.lastPosition, this.targetPosition);\n      this.lastZoom = this.targetZoom;\n      if (this.activePlaceableView) {\n        vec3.copy(this.targetPosition, placeable.worldPosition);\n        this.targetZoom = 1;\n      } else {\n        vec3.copy(this.targetPosition, this.props.finalShape.aabb.center);\n        this.targetZoom = this.computeAutoZoom(this.props.finalShape);\n      }\n      this.animationTimer = 0;\n      this.highlightTimer = 0;\n    }\n    if (notify) {\n      this.props.onActivePlaceableChange(placeable ? placeable.id : 0);\n    }\n  }\n\n  addPrism(prism) {\n    const shape = this.props.originalShape.clone();\n    prism.id = ++shape.lastPlaceableId;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    this.props.onShapeChange(shape, prism.id);\n  }\n\n  addSection(section) {\n    const shape = this.props.originalShape.clone();\n    section.id = ++shape.lastPlaceableId;\n    shape.sections.push(section);\n    shape.applyTransform();\n    this.props.onShapeChange(shape, section.id);\n  }\n\n  updateHighlightColor(placeable) {\n    let placeableColor;\n    if (placeable instanceof Prism) {\n      placeableColor = placeable.backgroundColor;\n    } else if (placeable instanceof Section) {\n      placeableColor = SECTION_COLORS.get(placeable.type);\n    }\n    if (!placeableColor) {\n      return;\n    }\n    const primaryReadability = tinycolor.readability(placeableColor, HIGHLIGHT_PRIMARY_COLOR);\n    const alternateReadability = tinycolor.readability(placeableColor, HIGHLIGHT_ALTERNATE_COLOR);\n    const colorStr = (primaryReadability > alternateReadability)\n        ? HIGHLIGHT_PRIMARY_COLOR : HIGHLIGHT_ALTERNATE_COLOR;\n    const rgb = tinycolor(colorStr).toRgb();\n    this.highlightColor[0] = rgb.r / 255;\n    this.highlightColor[1] = rgb.g / 255;\n    this.highlightColor[2] = rgb.b / 255;\n  }\n\n  setHighlightIntensity(placeableView, intensity) {\n    const material = this.getRenderableMaterial(placeableView.renderable);\n    this.highlightColor[3] = intensity;\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, this.highlightColor);\n  }\n\n  setGhostColor(renderable, color) {\n    const material = this.getRenderableMaterial(renderable);\n    material.setColor4Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat4(color));\n  }\n\n  showGhostPrism(position, orientation) {\n    this.setRenderableTransform(this.ghostRenderable, position, orientation);\n    this.scene.addEntity(this.ghostRenderable);\n  }\n\n  hideGhostPrism() {\n    this.scene.remove(this.ghostRenderable);\n  }\n\n  showPrismKnobs(junctions) {\n    while (this.knobRenderables.length < junctions.length) {\n      this.knobRenderables.push(this.createGhostKnobRenderable());\n    }\n    for (let i = 0; i < junctions.length; i++) {\n      const junction = junctions[i];\n      const knobRenderable = this.knobRenderables[i];\n      this.setGhostColor(knobRenderable, INDICATION_COLOR);\n      this.setRenderableTransform(knobRenderable, junction.pivot, quat.create());\n      this.scene.addEntity(knobRenderable);\n    }\n    for (let i = junctions.length; i < this.knobRenderables.length; i++) {\n      this.scene.remove(this.knobRenderables[i])\n    }\n  }\n\n  activatePrismKnob(junctions, activeJunction) {\n    const junctionIndex = junctions.indexOf(activeJunction);\n    const knobRenderable = this.knobRenderables[junctionIndex];\n    this.setGhostColor(knobRenderable, CREATION_COLOR);\n    this.hidePrismKnobs();\n    this.scene.addEntity(knobRenderable);\n  }\n\n  hidePrismKnobs() {\n    this.knobRenderables.forEach(knobRenderable => this.scene.remove(knobRenderable));\n  }\n\n  showPrismSections(junctions) {\n    let index = 0;\n    for (const junction of junctions) {\n      if (!junction.section) {\n        continue;\n      }\n      if (this.sectionRenderables.length <= index) {\n        this.sectionRenderables.push(this.createGhostSectionRenderable());\n      }\n      const sectionRenderable = this.sectionRenderables[index];\n      this.setGhostColor(sectionRenderable, INDICATION_COLOR);\n      this.setRenderableTransform(sectionRenderable, junction.section.worldPosition,\n          junction.section.worldOrientation);\n      this.scene.addEntity(sectionRenderable);\n      index++;\n    }\n    for (let i = index; i < this.sectionRenderables.length; i++) {\n      this.scene.remove(this.sectionRenderables[i])\n    }\n  }\n\n  activatePrismSection(junctions, activeJunction) {\n    let index = -1;\n    for (const junction of junctions) {\n      if (!junction.section) {\n        continue;\n      }\n      index++;\n      if (junction === activeJunction) {\n        break;\n      }\n    }\n    const sectionRenderable = this.sectionRenderables[index];\n    this.setGhostColor(sectionRenderable, CREATION_COLOR);\n    this.hidePrismSections();\n    this.scene.addEntity(sectionRenderable);\n  }\n\n  hidePrismSections() {\n    this.sectionRenderables.forEach(sectionRenderable => this.scene.remove(sectionRenderable));\n  }\n\n  render() {\n    return <canvas className=\"Viewport\" ref={ref => (this.filament = ref)} />\n  }\n}\n\nexport default Viewport;\nexport { COLOR_MASK_COUNT };\n","import React, { Component } from 'react'\nimport reactCSS from 'reactcss'\nimport { SwatchesPicker } from 'react-color'\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false\n    };\n  }\n\n  handleToggleColorPicker() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleHideColorPicker() {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleColorChange(color) {\n    this.props.onChange(color.hex);\n    this.handleHideColorPicker();\n  };\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: this.props.color,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={() => this.handleToggleColorPicker()}>\n          <div style={styles.color} />\n        </div>\n        {\n          this.state.displayColorPicker\n          ?\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={() => this.handleHideColorPicker()} />\n            <SwatchesPicker color={this.props.color} width=\"220px\" height=\"220px\"\n              onChange={(color) => this.handleColorChange(color)} />\n          </div>\n          :\n          null\n        }\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { COLOR_MASK_COUNT } from './Viewport';\nimport ColorPicker from './ColorPicker';\nimport { AppMode } from './App';\nimport Prism from './Prism';\nimport Section, { SectionType } from './Section';\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      syncColors: true\n    }\n  }\n\n  modifyShape(prevShape, shapeModifier) {\n    const shape = prevShape.clone();\n    shapeModifier(shape);\n    shape.applyTransform();\n    this.props.onShapeChange(shape);\n  }\n\n  modifyPlaceable(prevShape, prevPlaceable, placeableModifier) {\n    this.modifyShape(prevShape, (shape) => {\n      const placeable = shape.findPlaceable(prevPlaceable.id);\n      placeableModifier(placeable);\n    });\n  }\n\n  handleNameChange(prevShape, name) {\n    this.modifyShape(prevShape, (shape) => shape.name = name);\n  }\n\n  handleRollChange(prevShape, roll) {\n    this.modifyShape(prevShape, (shape) => shape.roll = parseFloat(roll) || 0);\n  }\n\n  handlePitchChange(prevShape, pitch) {\n    this.modifyShape(prevShape, (shape) => shape.pitch = parseFloat(pitch) || 0);\n  }\n\n  handleYawChange(prevShape, yaw) {\n    this.modifyShape(prevShape, (shape) => shape.yaw = parseFloat(yaw) || 0);\n  }\n\n  handleShowPoseChange(prevShape, showPose) {\n    this.modifyShape(prevShape, (shape) => shape.showPose = showPose);\n  }\n\n  handleColorMaskChange(prevShape, prevPrism, colorMask) {\n    const prevColorMask = prevPrism.colorMask;\n    const nextColorMask = parseInt(colorMask) || 0;\n    this.modifyShape(prevShape, (shape) => {\n      for (const prism of shape.prisms) {\n        if ((prism.id === prevPrism.id) || \n            (this.state.syncColors && (prism.colorMask === prevColorMask))) {\n          prism.colorMask = nextColorMask;\n        }\n      }\n    });\n  }\n\n  handleBackgroundColorChange(prevShape, prevPrism, color) {\n    const prevBackgroundColor = prevPrism.backgroundColor;\n    this.modifyShape(prevShape, (shape) => {\n      for (const prism of shape.prisms) {\n        if ((prism.id === prevPrism.id) ||\n            (this.state.syncColors && (prism.backgroundColor === prevBackgroundColor))) {\n          prism.backgroundColor = color;\n        }\n        if (this.state.syncColors && (prism.foregroundColor === prevBackgroundColor)) {\n          prism.foregroundColor = color;\n        }\n      }\n    });\n  }\n\n  handleForegroundColorChange(prevShape, prevPrism, color) {\n    const prevForegroundColor = prevPrism.foregroundColor;\n    this.modifyShape(prevShape, (shape) => {\n      for (const prism of shape.prisms) {\n        if ((prism.id === prevPrism.id) ||\n            (this.state.syncColors && (prism.foregroundColor === prevForegroundColor))) {\n          prism.foregroundColor = color;\n        }\n        if (this.state.syncColors && (prism.backgroundColor === prevForegroundColor)) {\n          prism.backgroundColor = color;\n        }\n      }\n    });\n  }\n\n  handleSwapColors(prevShape, prevPrism) {\n    this.modifyPlaceable(prevShape, prevPrism, (prism) => {\n      prism.foregroundColor = prevPrism.backgroundColor;\n      prism.backgroundColor = prevPrism.foregroundColor;\n    });\n  }\n\n  handleDeletePrism(prevShape, prevPrism) {\n    this.modifyShape(prevShape, (shape) => {\n      shape.prisms = shape.prisms.filter(prism => prism.id !== prevPrism.id);\n      shape.sections = shape.sections.filter(section => (section.basePrismId !== prevPrism.id)\n          && (section.targetPrismId !== prevPrism.id));\n    });\n  }\n\n  handleSectionTypeChange(prevShape, prevSection, type) {\n    this.modifyPlaceable(prevShape, prevSection, (section) => {\n      section.type = parseInt(type);\n    });\n  }\n\n  handleSectionPropertyChange(prevShape, prevSection, name, value) {\n    this.modifyPlaceable(prevShape, prevSection, (section) => {\n      section.setPropertyValue(name, parseFloat(value));\n    });\n  }\n\n  handleActiveChange(prevShape, prevSection, active) {\n    this.modifyPlaceable(prevShape, prevSection, (section) => {\n      if (active) {\n        section.clearPropertyValue(\"power\");\n      } else {\n        section.setPropertyValue(\"power\", 0);\n      }\n    });\n  }\n\n  handleContinuousChange(prevShape, prevSection, continuous) {\n    this.modifyPlaceable(prevShape, prevSection, (section) => {\n      if (continuous) {\n        section.setPropertyValue(\"lowerAngle\", 1);\n        section.setPropertyValue(\"upperAngle\", -1);\n      } else {\n        section.clearPropertyValue(\"lowerAngle\");\n        section.clearPropertyValue(\"upperAngle\");\n      }\n    });\n  }\n\n  handleSwapSection(prevShape, prevSection) {\n    this.modifyPlaceable(prevShape, prevSection, (section) => {\n      section.swap();\n    });\n  }\n\n  handleDeleteSection(prevShape, prevSection) {\n    this.modifyShape(prevShape, (shape) => {\n      shape.sections = shape.sections.filter(section => section.id !== prevSection.id);\n    });\n  }\n\n  handleConfigChange(prevConfig, property, value) {\n    const config = JSON.parse(JSON.stringify(prevConfig));\n    if (property === \"hiddenLayerSizes\") {\n      value = value.split(\",\").map(Number);\n    } else {\n      value = parseFloat(value) || 0;\n    }\n    config[property] = value;\n    this.props.onConfigChange(config);\n  }\n\n  formatTime(time) {\n    return Math.floor(time / 60) + \":\" + (time % 60).toString().padStart(2, \"0\");\n  }\n\n  getPropertyLabel(name) {\n    return name\n      .split(/(?=[A-Z])/)\n      .map(s => s.charAt(0).toUpperCase() + s.slice(1))\n      .join(' ');\n  }\n\n  renderShapeParams(config, shape) {\n    return (\n      <div className=\"Group\">\n        <h3>Shape</h3>\n        <p>\n          <label htmlFor=\"name\">Name : </label>\n          <input type=\"text\" id=\"name\" name=\"name\" value={shape.name}\n            onChange={e => this.handleNameChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"roll\">Roll : </label>\n          <input type=\"number\" id=\"roll\" name=\"roll\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.roll}\n            onChange={e => this.handleRollChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"pitch\">Pitch : </label>\n          <input type=\"number\" id=\"pitch\" name=\"pitch\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.pitch}\n            onChange={e => this.handlePitchChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"yaw\">Yaw : </label>\n          <input type=\"number\" id=\"yaw\" name=\"yaw\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.yaw}\n            onChange={e => this.handleYawChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <input type=\"checkbox\" id=\"showPose\" name=\"showPose\" checked={shape.showPose}\n            onChange={e => this.handleShowPoseChange(shape, e.target.checked)} />\n          <label htmlFor=\"showPose\">Show pose</label>\n        </p>\n        <h3>File</h3>\n        <p>\n          <button id=\"reset\" name=\"reset\"\n            onClick={() => this.props.onReset()}>Reset</button>\n          <button id=\"showcaseShape\" name=\"showcaseShape\"\n            onClick={() => this.props.onShapeShowcase()}>Showcase</button>\n        </p>\n        <p>\n          <button id=\"saveArchive\" name=\"saveArchive\"\n            onClick={() => this.props.onArchiveSave()}>Save</button>\n          <button id=\"loadArchive\" name=\"loadArchive\"\n            onClick={() => this.props.onArchiveLoad()}>Load</button>\n        </p>\n        <h3>Training</h3>\n        <button id=\"startTraining\" name=\"startTraining\" disabled={this.props.mode !== AppMode.EDIT}\n          onClick={() => this.props.onTrainingStart()}>Start</button>\n        <button id=\"stopTraining\" name=\"stopTraining\"\n          disabled={(this.props.mode !== AppMode.TRAINING) && (this.props.mode !== AppMode.PLAY)}\n          onClick={() => this.props.onTrainingStop()}>Stop</button>\n        <button id=\"playTraining\" name=\"playTraining\" disabled={this.props.mode !== AppMode.EDIT}\n          onClick={() => this.props.onTrainingPlay()}>Play</button>\n        {!this.props.trainingActive && ((this.props.mode === AppMode.TRAINING) || (this.props.mode === AppMode.PLAY)) &&\n          <p>\n            <label>Starting...</label>\n          </p>\n        }\n        {this.props.trainingActive && (this.props.mode === AppMode.TRAINING) &&\n          <p>\n            <label>Progress : {this.props.trainingSteps} ~ {Math.floor(this.props.trainingSteps * 100 / this.props.config.totalSteps)}%</label>\n          </p>\n        }\n        {this.props.trainingActive && (this.props.mode === AppMode.TRAINING) &&\n          <p>\n            <label>Value : {Math.floor(this.props.trainingValue)}</label>\n          </p>\n        }\n        {this.props.trainingActive && (this.props.mode === AppMode.TRAINING) &&\n          <p>\n            <label>Losses : {this.props.trainingLosses.lossP.toFixed(2)} / {this.props.trainingLosses.lossV.toFixed(2)}</label>\n          </p>\n        }\n        {this.props.trainingActive && (this.props.mode === AppMode.TRAINING) &&\n          <p>\n            <label>Time : {this.formatTime(this.props.trainingTime)}</label>\n          </p>\n        }\n        {(this.props.mode !== AppMode.TRAINING) && (this.props.mode !== AppMode.PLAY) &&\n          Object.keys(config).map(property => {\n            const key = \"config_\" + property;\n            const value = config[property];\n            return <p key={key}>\n              <label htmlFor={property}>{this.getPropertyLabel(property)} : </label>\n              <input id={key} name={key} type={Array.isArray(value) ? \"text\" : \"number\"} value={value}\n                onChange={e => this.handleConfigChange(config, property, e.target.value)} />\n            </p>\n          }\n        )}\n      </div>\n    );\n  }\n\n  renderPrismParams(shape, prism) {\n    return (\n      <div className=\"Group\">\n        <h3>Prism</h3>\n        <p>\n          <label htmlFor=\"colorMask\">Mask : </label>\n          <input type=\"number\" id=\"colorMask\" name=\"colorMask\" min=\"0\" max={COLOR_MASK_COUNT - 1}\n            step=\"1\" value={prism.colorMask}\n            onChange={e => this.handleColorMaskChange(shape, prism, e.target.value)} />\n        </p>\n        <div>\n          <label htmlFor=\"backgroundColor\">Background : </label>\n          <ColorPicker id=\"backgroundColor\" name=\"backgroundColor\" color={prism.backgroundColor}\n            onChange={color => this.handleBackgroundColorChange(shape, prism, color)} />\n        </div>\n        <div>\n          <label htmlFor=\"foregroundColor\">Foreground : </label>\n          <ColorPicker id=\"foregroundColor\" name=\"foregroundColor\" color={prism.foregroundColor}\n            onChange={color => this.handleForegroundColorChange(shape, prism, color)} />\n        </div>\n        <p>\n          <input type=\"checkbox\" id=\"syncColors\" name=\"syncColors\" checked={this.state.syncColors}\n            onChange={e => this.setState({ syncColors: e.target.checked })} />\n          <label htmlFor=\"syncColors\">Sync Colors</label>\n        </p>\n        <p>\n          <button id=\"swapColors\" name=\"swapColors\"\n            onClick={() => this.handleSwapColors(shape, prism)}>Swap</button>\n        </p>\n        <p>\n          <button id=\"deletePrism\" name=\"deletePrism\" disabled={shape.prisms.length <= 1}\n            onClick={() => this.handleDeletePrism(shape, prism)}>Delete</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderSectionParams(shape, section) {\n    const lowerAngle = section.getPropertyValue(\"lowerAngle\");\n    const upperAngle = section.getPropertyValue(\"upperAngle\");\n    const power = section.getPropertyValue(\"power\");\n    const active = (power !== 0);\n    const continuous = (lowerAngle > upperAngle);\n    return (\n      <div className=\"Group\">\n        <h3>Section</h3>\n        <p>\n          <label htmlFor=\"sectionType\">Type : </label>\n          <select id=\"sectionType\" name=\"sectionType\" value={section.type}\n              onChange={e => this.handleSectionTypeChange(shape, section, e.target.value)}>\n            {Object.keys(SectionType).map(typeName => {\n              const type = SectionType[typeName];\n              return <option value={type} key={type}>\n                {typeName.charAt(0) + typeName.substring(1).toLowerCase()}\n              </option>\n            })}\n          </select>\n        </p>\n        {section.getProperties().map(property => {\n          const key = \"section_\" + property.name;\n          const disabled = (continuous && ((property.name === \"lowerAngle\") || (property.name === \"upperAngle\"))) ||\n                           (!active && (property.name === \"power\"));\n          return <p key={key}>\n            <label htmlFor={key}>{this.getPropertyLabel(property.name)} : </label>\n            <input id={key} name={key} disabled={disabled}\n              type=\"number\" min={property.min} max={property.max} value={property.value}\n              onChange={e => this.handleSectionPropertyChange(shape, section, property.name, e.target.value)} />\n          </p>\n        })}\n        <p>\n          <input type=\"checkbox\" id=\"active\" name=\"active\" checked={active}\n            onChange={e => this.handleActiveChange(shape, section, e.target.checked)} />\n          <label htmlFor=\"active\">Active</label>\n        </p>\n        <p>\n          <input type=\"checkbox\" id=\"continuous\" name=\"continuous\" checked={continuous}\n            onChange={e => this.handleContinuousChange(shape, section, e.target.checked)} />\n          <label htmlFor=\"continuous\">Continuous</label>\n        </p>\n        <p>\n          <button id=\"swapSection\" name=\"swapSection\"\n            onClick={() => this.handleSwapSection(shape, section)}>Swap</button>\n        </p>\n        <p>\n          <button id=\"deleteSection\" name=\"deleteSection\"\n            onClick={() => this.handleDeleteSection(shape, section)}>Delete</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderParams() {\n    const activePlaceable = this.props.shape.findPlaceable(this.props.activePlaceableId);\n    if (activePlaceable) {\n      if (activePlaceable instanceof Prism) {\n        return this.renderPrismParams(this.props.shape, activePlaceable);\n      } else if (activePlaceable instanceof Section) {\n        return this.renderSectionParams(this.props.shape, activePlaceable);\n      }\n    } else {\n      return this.renderShapeParams(this.props.config, this.props.shape);\n    }\n  }\n\n  renderHistory() {\n    return (\n      <div className=\"Group\">\n        <h3>History</h3>\n        <button id=\"undoHistory\" name=\"undoHistory\" disabled={this.props.historyIndex <= 0}\n            onClick={() => this.props.onHistoryChange(this.props.historyIndex - 1)}>Undo</button>\n        <button id=\"redoHistory\" name=\"redoHistory\" disabled={this.props.historyIndex >= this.props.historyEntries.length - 1}\n            onClick={() => this.props.onHistoryChange(this.props.historyIndex + 1)}>Redo</button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Toolbar\">\n        {this.renderHistory()}\n        {this.renderParams()}\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import Shape from \"./Shape\";\nimport Prism from \"./Prism\";\nimport { vec3, quat } from 'gl-matrix';\nimport { createTransform, rotatedTransform } from './Transform';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nclass ShapeFolder {\n  constructor() {\n    this.pieceCount = 0;\n    this.shape = new Shape();\n  }\n\n  static build(name, figures) {\n    const definition = figures.definitions.find(definition => definition.name === name);\n    if (!definition) {\n      return;\n    }\n    const skin = ShapeFolder.compileSkin(definition.skin, figures);\n    if (!skin) {\n      return;\n    }\n    const shapeFolder = new ShapeFolder();\n    for (let i = 0; i < definition.pieces; i++) {\n      const colors = skin.colors[i % skin.colors.length];\n      shapeFolder.addPrism(skin.mask, colors[0], colors[1]);\n    }\n    if (!shapeFolder.fold(definition.notation)) {\n      return;\n    }\n    if (!shapeFolder.applyRotations(definition.rotations)) {\n      return;\n    }\n    const shape = shapeFolder.shape;\n    shape.applyTransform();\n    shape.translate(vec3.negate(vec3.create(), shape.aabb.center));\n    shape.applyTransform();\n    return shape;\n  }\n\n  static compileSkin(name, figures) {\n    const startPos = (name.charAt(0) === \"~\" ? 1 : 0);\n    const delimPos = name.lastIndexOf(\":\");\n    const skinName = name.substring(startPos, (delimPos !== -1 ? delimPos : name.length));\n    const skinDefinition = figures.skins.definitions.find(definition => definition.name === skinName);\n    if (!skinDefinition) {\n      return;\n    }\n    const skinPattern = figures.skins.patterns.find(pattern => pattern.key === skinDefinition.pattern);\n    if (!skinPattern) {\n      return;\n    }\n\n    const mask = (delimPos === -1 ? skinDefinition.mask : parseInt(name.substring(delimPos + 1)));\n\n    const shapeColors = [];\n    for (const colorNumbers of skinPattern.value) {\n      const prismColors = [];\n      for (const colorNumber of colorNumbers) {\n        if ((colorNumber < 1) || (colorNumber > skinDefinition.colors.length)) {\n          return;\n        }\n        const colorName = skinDefinition.colors[colorNumber - 1];\n        const color = figures.skins.colors.find(color => color.key === colorName);\n        if (!color) {\n          return;\n        }\n        prismColors.push(color.value);\n      }\n      shapeColors.push(prismColors);\n    }\n    const revertColors = (startPos > 0);\n    if (revertColors) {\n      shapeColors.reverse();\n    }\n\n    return {\n      mask: mask,\n      colors: shapeColors\n    };\n  }\n\n  addPrism(colorMask, backgroundColor, foregroundColor) {\n    let prism;\n    if (this.shape.prisms.length > 0) {\n      const leftPrism = this.shape.prisms[this.shape.prisms.length - 1];\n      prism = leftPrism.getJunctions()[1].prisms[0]; // unturned prism of right junction\n    } else {\n      prism = new Prism();\n    }\n    prism.id = ++this.shape.lastPlaceableId;\n    prism.colorMask = colorMask;\n    prism.backgroundColor = backgroundColor;\n    prism.foregroundColor = foregroundColor;\n    this.shape.prisms.push(prism);\n    this.pieceCount++;\n  }\n\n  /**\n   * Fold the shape using a notation in the following format:\n   * 1. Number of the downward-facing prism (from the left): 1 to (pieceCount+1)/2\n   * 2. Left or right sloping side of the prism: L or R\n   * 3. Position of the twist towards you: 1, 2 or 3\n   * Example: 1R2-2R2-3L2-4L2-6L2-6R2-7R2-9L2-10L2-10R2\n   * @return true if no errors, otherwise false.\n   */\n  fold(notation) {\n    const tokens = notation.split(\"-\");\n    for (let token of tokens) {\n      let pos;\n      let left;\n      if ((pos = token.indexOf(\"L\")) !== -1) {\n        left = true;\n      } else if ((pos = token.indexOf(\"R\")) !== -1) {\n        left = false;\n      } else {\n        return false;\n      }\n      const downwardPrismNumberStr = token.substring(0, pos);\n      if (!downwardPrismNumberStr) {\n        return false;\n      }\n      const downwardPrismNumber = parseInt(downwardPrismNumberStr, 10);\n      const index = (downwardPrismNumber - 1) * 2;\n      if ((index < 0) || (index >= this.pieceCount)) {\n        return false;\n      }\n      const twistsStr = token.substring(pos + 1);\n      if (!twistsStr) {\n        return false;\n      }\n      const twists = parseInt(twistsStr, 10);\n      if (!twists) {\n        continue; // no twist\n      }\n      if ((twists < 1) || (twists > 3)) {\n        return false;\n      }\n\n      if (twists < 3) {\n        for (let i = 0; i < twists; i++) {\n          if (!this.twist(index, left, left)) {\n            return false;\n          }\n        }\n      } else {\n        if (!this.twist(index, left, !left)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Twist left or right adjacent prisms around a downward-facing prism\n   * 90 degrees counter-clockwise or clockwise.\n   * @param index prism index in range [0..pieceCount).\n   * @param left twist left (true) or right (false) adjacent prisms.\n   * @param ccw twist counter-clockwise (true) or clockwise (false).\n   * @return true if prism index is in range, otherwise false.\n   */\n  twist(index, left, ccw) {\n    if ((index < 0) || (index >= this.pieceCount)) {\n      return false;\n    }\n    const prism = this.shape.prisms[index];\n    const junctions = prism.getJunctions();\n    const junction = (left ? junctions[0] : junctions[1]);\n    const twistAngle = (ccw ? 1 : -1) * Math.PI / 2;\n    if (left) {\n      for (let i = index - 1; i >= 0; i--) {\n        this.twistPrism(i, junction.pivot, junction.normal, twistAngle);\n      }\n    } else {\n      for (let i = index + 1; i < this.pieceCount; i++) {\n        this.twistPrism(i, junction.pivot, junction.normal, twistAngle);\n      }\n    }\n    return true;\n  }\n\n  twistPrism(index, pivot, axis, angle) {\n    const prism = this.shape.prisms[index];\n    const prismTransform = createTransform(prism.position, prism.orientation);\n    const transform = rotatedTransform(prismTransform, pivot, axis, angle);\n    vec3.copy(prism.position, transform.position);\n    quat.copy(prism.orientation, transform.orientation);\n  }\n\n  applyRotations(rotations) {\n    if (rotations.length === 0) {\n      return true;\n    }\n    const shapeRotation = quat.create();\n    const rotation = quat.create();\n    const axis = vec3.create();\n    for (const aa of rotations) {\n      if (aa.length === 4) {\n        vec3.set(axis, aa[0], aa[2], -aa[1]);\n        vec3.normalize(axis, axis);\n        quat.setAxisAngle(rotation, axis, aa[3] * DEGREES_TO_RADIANS);\n        quat.multiply(shapeRotation, rotation, shapeRotation);\n      } else {\n        return false;\n      }\n    }\n    this.shape.rotate(shapeRotation);\n    return true;\n  }\n}\n\nexport default ShapeFolder;\n","\nfunction vectorToString(vector, precision) {\n  return vector[0].toFixed(precision) + \" \"\n      + vector[1].toFixed(precision) + \" \"\n      + vector[2].toFixed(precision);\n}\n\nfunction quaternionToString(quad, precision) {\n  return quad[0].toFixed(precision) + \" \"\n      + quad[1].toFixed(precision) + \" \"\n      + quad[2].toFixed(precision) + \" \"\n      + quad[3].toFixed(precision);\n}\n\nfunction transformToString(transform) {\n  return vectorToString(transform.position, 6) + \" \"\n      + quaternionToString(transform.orientation, 4);\n}\n\nclass Exporter {\n  constructor(config, rigidInfo) {\n    this.config = config;\n    this.rigidInfo = rigidInfo;\n  }\n\n  export(name) {\n    const lines = [];\n\n    lines.push(\"o \" + name);\n\n    lines.push(\"s \" + this.config.timeStep + \" \"\n               + this.config.frameSteps + \" \"\n               + this.config.environmentSteps + \" \"\n               + this.config.gravity + \" \"\n               + this.config.targetDistance + \" \"\n               + this.config.groundFriction + \" \"\n               + this.config.prismFriction + \" \"\n               + this.config.groundRestitution + \" \"\n               + this.config.prismRestitution);\n\n    lines.push(\"c \" + this.config.advanceReward + \" \"\n               + this.config.aliveReward + \" \"\n               + this.config.forwardReward + \" \"\n               + this.config.jointAtLimitCost + \" \"\n               + this.config.driveCost + \" \"\n               + this.config.stallTorqueCost);\n\n    for (const link of this.rigidInfo.links) {\n      lines.push(\"l \" + link.mass.toFixed(4) + \" \"\n          + vectorToString(link.inertia, 4) + \" \"\n          + transformToString(link.transform));\n      for (const localTransform of link.localTransforms) {\n        lines.push(\"p \" + transformToString(localTransform));\n      }\n    }\n\n    for (const joint of this.rigidInfo.joints) {\n      lines.push(\"j \" + joint.baseLink.index + \" \"\n          + joint.targetLink.index + \" \"\n          + joint.lowerAngle.toFixed(2) + \" \"\n          + joint.upperAngle.toFixed(2) + \" \"\n          + joint.power.toFixed(2) + \" \"\n          + transformToString(joint.transform));\n    }\n\n    for (const baseLink of this.rigidInfo.baseLinks) {\n      lines.push(\"b \" + baseLink.index);\n    }\n\n    return lines.join(\"\\n\");\n  }\n}\n\nexport default Exporter;\n","\nclass Config {\n  constructor() {\n    this.timeStep = 0.01;\n    this.frameSteps = 4;\n    this.environmentSteps = 1000;\n    this.gravity = -9.81;\n    this.targetDistance = 30;\n    this.groundFriction = 0.8;\n    this.prismFriction = 0.8;\n    this.groundRestitution = 0;\n    this.prismRestitution = 0\n\n    this.advanceReward = 1;\n    this.aliveReward = 0;\n    this.forwardReward = 0;\n    this.jointAtLimitCost = -10;\n    this.driveCost = 0;\n    this.stallTorqueCost = 0;\n\n    this.totalSteps = 1000000;\n    this.trainingStartSteps = 1000;\n    this.trainingInterval = 50;\n    this.checkpointSteps = 10000;\n\n    this.discount = 0.99;\n    this.batchSize = 100;\n    this.randomSteps = 10000;\n    this.replayBufferSize = 1000000;\n    this.learningRate = 3e-4;\n    this.interpolation = 0.995;\n    this.hiddenLayerSizes = [64, 64];\n  }\n}\n\nexport default Config;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/Worker.worker.494ed041.worker.js\");\n}\n","import { vec3, quat, mat3 } from 'gl-matrix';\nimport { createTransform, multiplyTransforms, inverseTransform } from './Transform';\nimport { PRISM_HEIGHT, PRISM_BASE, PRISM_SIDE, PRISM_MARGIN } from './Prism';\nimport { SectionType } from './Section';\nimport { diagonalizeMatrix } from './VecMath';\n\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\n\nconst PRISM_HALF_HEIGHT = 0.5 * PRISM_HEIGHT;\nconst PRISM_HALF_BASE = 0.5 * PRISM_BASE;\nconst PRISM_HALF_SIDE = 0.5 * PRISM_SIDE;\nconst PRISM_MARGIN_DIAG = PRISM_MARGIN * Math.cos(Math.PI / 4);\n\nconst PRISM_CG_H = 1 / 3 * PRISM_HEIGHT;\nconst PRISM_CG_DY = PRISM_HALF_HEIGHT - PRISM_CG_H;\nconst PRISM_MASS_OFFSET = createTransform(vec3.fromValues(0, PRISM_CG_DY, 0));\nconst PRISM_MASS_OFFSET_INVERSED = inverseTransform(createTransform(), PRISM_MASS_OFFSET);\n\nconst PRISM_COLLISION_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT + PRISM_CG_DY - 2 * PRISM_MARGIN_DIAG,\n      -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT + PRISM_CG_DY - 2 * PRISM_MARGIN_DIAG,\n      PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN)\n];\n\nconst PRISM_VOLUME = 0.5 * PRISM_BASE * PRISM_HEIGHT * PRISM_SIDE;\nconst PRISM_DENSITY = 1 / Math.sqrt(2);\nconst PRISM_MASS = PRISM_VOLUME * PRISM_DENSITY;\nconst PRISM_INERTIA_FACTOR = PRISM_MASS * PRISM_HEIGHT * PRISM_HEIGHT;\nconst PRISM_INERTIA_X = 2 / 9 * PRISM_INERTIA_FACTOR;\nconst PRISM_INERTIA_Y = 1 / 3 * PRISM_INERTIA_FACTOR;\nconst PRISM_INERTIA_Z = 2 / 9 * PRISM_INERTIA_FACTOR;\n\nclass RigidInfo {\n  constructor(shape, debug = false) {\n    this.debug = debug;\n    this.prismCollisionMargin = PRISM_MARGIN;\n    this.prismCollisionVertices = PRISM_COLLISION_VERTICES;\n\n    this.error = null;\n    this.links = [];\n    this.baseLinks = [];\n    this.joints = [];\n\n    const parts = shape.discoverParts();\n    if (shape.error) {\n      this.error = shape.error;\n      return;\n    }\n    for (let i = 0; i < parts.length; i++) {\n      if (this.debug) {\n        console.log(\"Link \" + (i + 1) + \"/\" + parts.length + \":\");\n      }\n      const link = this.createLink(parts[i]);\n      if (link) {\n        this.links.push(link);\n      }\n    }\n\n    for (const section of shape.sections) {\n      if (section.type === SectionType.ACTUATOR) {\n        const joint = this.createJoint(shape, parts, section);\n        if (joint) {\n          this.joints.push(joint);\n        }\n      }\n    }\n\n    const partChains = shape.discoverPartChains(parts);\n    if (shape.error) {\n      this.error = shape.error;\n      return;\n    }\n    this.baseLinks.push(...partChains.map(partChain =>\n      this.links[parts.findIndex(p => p === partChain[0])]));\n  }\n\n  createLink(part) {\n    if (part.length === 0) {\n      return;\n    }\n\n    const transforms = [];\n    const partOrigin = vec3.create();\n    for (const prism of part) {\n      const transform = multiplyTransforms(createTransform(),\n          createTransform(prism.worldPosition, prism.worldOrientation),\n          PRISM_MASS_OFFSET_INVERSED);\n      vec3.add(partOrigin, partOrigin, transform.position);\n      transforms.push(transform);\n    }\n    vec3.scale(partOrigin, partOrigin, 1 / part.length);\n\n    const tensor = mat3.fromValues(0, 0, 0, 0, 0, 0, 0, 0, 0);\n    const mat1 = mat3.create();\n    const mat2 = mat3.create();\n    for (const transform of transforms) {\n      const basis = mat3.fromQuat(mat1, transform.orientation);\n      const j = mat3.set(mat2,\n        basis[0] * PRISM_INERTIA_X, basis[3] * PRISM_INERTIA_Y, basis[6] * PRISM_INERTIA_Z,\n        basis[1] * PRISM_INERTIA_X, basis[4] * PRISM_INERTIA_Y, basis[7] * PRISM_INERTIA_Z,\n        basis[2] * PRISM_INERTIA_X, basis[5] * PRISM_INERTIA_Y, basis[8] * PRISM_INERTIA_Z\n      );\n      mat3.mul(j, basis, j);\n      mat3.add(tensor, tensor, j);\n\n      const prismOrigin = transform.position;\n      const px = prismOrigin[0] - partOrigin[0];\n      const py = prismOrigin[1] - partOrigin[1];\n      const pz = prismOrigin[2] - partOrigin[2];\n      const squaredDistance = px * px + py * py + pz * pz;\n      mat3.set(j,\n        squaredDistance - px * px, -px * py, -px * pz,\n        -py * px, squaredDistance - py * py, -py * pz,\n        -pz * px, -pz * py, squaredDistance - pz * pz\n      );\n      mat3.multiplyScalar(j, j, PRISM_MASS);\n      mat3.add(tensor, tensor, j);\n    }\n    const principalRotation = quat.fromMat3(quat.create(),\n        diagonalizeMatrix(tensor, 1e-5, 20));\n    const partTransform = createTransform(partOrigin, principalRotation);\n    const inertia = vec3.fromValues(tensor[0], tensor[4], tensor[8]);\n\n    const mass = part.length * PRISM_MASS;\n\n    const childTransform = inverseTransform(createTransform(), partTransform);\n    const localTransforms = [];\n    for (const transform of transforms) {\n      const localTransform = multiplyTransforms(createTransform(), childTransform, transform);\n      localTransforms.push(localTransform);\n    }\n    const viewTransforms = [];\n    for (const prism of part) {\n      const worldTransform = createTransform(prism.worldPosition, prism.worldOrientation);\n      const viewTransform = multiplyTransforms(createTransform(), childTransform, worldTransform);\n      viewTransforms.push(viewTransform);\n    }\n\n    if (this.debug) {\n      console.log(\"Mass: \" + mass);\n      console.log(\"Origin: {\" + partOrigin[0].toFixed(2) + \", \" + partOrigin[1].toFixed(2)\n          + \", \" + partOrigin[2].toFixed(2) + \"}\");\n      console.log(\"Inertia: {\" + inertia[0].toFixed(2) + \", \" + inertia[1].toFixed(2)\n          + \", \" + inertia[2].toFixed(2) + \"}\");\n      const principalAxis = vec3.create();\n      const principalAngle = quat.getAxisAngle(principalAxis, principalRotation);\n      console.log(\"Principal: axis={\" + principalAxis[0].toFixed(2) + \", \"\n          + principalAxis[1].toFixed(2) + \", \" + principalAxis[2].toFixed(2)\n          + \"} angle=\" + (principalAngle * RADIANS_TO_DEGREES).toFixed(0));\n    }\n\n    return {\n      index: this.links.length,\n      prisms: part,\n      mass: mass,\n      inertia: inertia,\n      transform: partTransform,\n      localTransforms: localTransforms,\n      viewTransforms: viewTransforms\n    };\n  }\n\n  createJoint(shape, parts, section) {\n    const basePrism = shape.findPlaceable(section.basePrismId);\n    const targetPrism = shape.findPlaceable(section.targetPrismId);\n    const basePartIndex = parts.findIndex(part => part.some(prism => prism === basePrism));\n    const targetPartIndex = parts.findIndex(part => part.some(prism => prism === targetPrism));\n    if (basePartIndex === -1) {\n      this.error = \"Base part not found\";\n      return;\n    }\n    if (targetPartIndex === -1) {\n      this.error = \"Target part not found\";\n      return;\n    }\n    if (basePartIndex === targetPartIndex) {\n      this.error = \"Actuator must connect different parts\";\n      return;\n    }\n\n    const baseLink = this.links[basePartIndex];\n    if (!baseLink) {\n      this.error = \"Base link not found\";\n      return;\n    }\n    const targetLink = this.links[targetPartIndex];\n    if (!targetLink) {\n      this.error = \"Target link not found\";\n      return;\n    }\n\n    const transform = createTransform(section.worldPosition, section.worldOrientation);\n    const lowerAngle = section.getPropertyValue(\"lowerAngle\");\n    const upperAngle = section.getPropertyValue(\"upperAngle\");\n    const power = section.getPropertyValue(\"power\");\n\n    return {\n      baseLink: baseLink,\n      targetLink: targetLink,\n      transform: transform,\n      lowerAngle: lowerAngle,\n      upperAngle: upperAngle,\n      power: power\n    };\n  }\n}\n\nexport default RigidInfo;\n","import { mat3 } from 'gl-matrix';\n\nfunction diagonalizeMatrix(mat, threshold, maxSteps) {\n  const rot = mat3.create();\n  for (let step = maxSteps; step > 0; step--) {\n    let p = 0;\n    let q = 1;\n    let r = 2;\n    let max = Math.abs(mat[3]);\n    let v = Math.abs(mat[6]);\n    if (v > max) {\n      q = 2;\n      r = 1;\n      max = v;\n    }\n    v = Math.abs(mat[7]);\n    if (v > max) {\n      p = 1;\n      q = 2;\n      r = 0;\n      max = v;\n    }\n\n    let t = threshold * (Math.abs(mat[0]) + Math.abs(mat[4]) + Math.abs(mat[8]));\n    if (max <= t) {\n      return rot;\n    }\n\n    const mpq = mat[p + q * 3];\n    const theta = (mat[q + q * 3] - mat[p + p * 3]) / (2 * mpq);\n    const theta2 = theta * theta;\n    let cos;\n    let sin;\n    t = (theta >= 0)\n        ? 1 / (theta + Math.sqrt(1 + theta2))\n        : 1 / (theta - Math.sqrt(1 + theta2));\n    cos = 1 / Math.sqrt(1 + t * t);\n    sin = cos * t;\n\n    mat[p + q * 3] = 0;\n    mat[q + p * 3] = 0;\n    mat[p + p * 3] -= t * mpq;\n    mat[q + q * 3] += t * mpq;\n    let mrp = mat[r + p * 3];\n    let mrq = mat[r + q * 3];\n    mat[r + p * 3] = mat[p + r * 3] = cos * mrp - sin * mrq;\n    mat[r + q * 3] = mat[q + r * 3] = cos * mrq + sin * mrp;\n\n    for (let i = 0; i < 3; i++) {\n      mrp = rot[i + p * 3];\n      mrq = rot[i + q * 3];\n      rot[i + p * 3] = cos * mrp - sin * mrq;\n      rot[i + q * 3] = cos * mrq + sin * mrp;\n    }\n  }\n  return rot;\n}\n\nexport { diagonalizeMatrix };\n","\nconst maxTime = 1000;\n\nclass Trainer {\n  constructor(training, config, shapeData, checkpointData, playing) {\n    this.training = training;\n    this.config = config;\n    this.shapeData = shapeData;\n    this.checkpointData = checkpointData;\n    this.playing = playing;\n\n    this.frameTime = Math.floor(config.timeStep * config.frameSteps * 1000 + 0.5);\n\n    this.config.hiddenLayerSizes = this.toNativeArray(this.config.hiddenLayerSizes);\n  }\n\n  run() {\n    this.training.create(this.config, this.shapeData);\n\n    if (this.checkpointData) {\n      this.training.load(this.checkpointData);\n      this.checkpointData = null;\n      console.log(\"Load checkpoint\");\n    }\n\n    const startTime = Date.now();\n    let lastTime = startTime;\n    let trainingTime = 0;\n    let stepNumber = 0;\n    let trainingNumber = 0;\n    let currentValue = 0;\n    let finalValue = 0;\n    let currentLosses = new ActorCriticLosses();\n    let finalLosses = new ActorCriticLosses();\n    while (true) {\n      if ((stepNumber < this.config.totalSteps) && !this.playing) {\n        if ((stepNumber < this.config.trainingStartSteps) ||\n            ((stepNumber % this.config.trainingInterval) !== 0) ||\n            (trainingNumber === this.config.trainingInterval)) {\n          const result = this.training.step();\n          currentValue += result.reward;\n          if (result.done) {\n            finalValue = currentValue;\n            currentValue = 0;\n          }\n          trainingNumber = 0;\n          stepNumber++;\n\n          if ((stepNumber % this.config.checkpointSteps) === 0) {\n            this.checkpointData = this.training.save();\n          }\n        } else {\n          const losses = this.training.train();\n          currentLosses.lossP += losses.lossP;\n          currentLosses.lossV += losses.lossV;\n          trainingNumber++;\n          if (trainingNumber === this.config.trainingInterval) {\n            finalLosses = new ActorCriticLosses(\n              currentLosses.lossP / this.config.trainingInterval,\n              currentLosses.lossV / this.config.trainingInterval\n            );\n            currentLosses = new ActorCriticLosses();\n          }\n        }\n\n        trainingTime = Math.floor((Date.now() - startTime) / 1000);\n      }\n\n      const currentTime = Date.now();\n      const elapsedTime = currentTime - lastTime;\n      if (elapsedTime >= this.frameTime) {\n        if (elapsedTime > maxTime) {\n          lastTime = currentTime;\n        } else {\n          lastTime += this.frameTime;\n        }\n        const nativeState = this.training.evaluate();\n        const state = this.fromNativeState(nativeState);\n        postMessage([stepNumber, finalValue, finalLosses, trainingTime, state, this.checkpointData]);\n        this.checkpointData = null;\n      }\n    }\n  }\n\n  toNativeArray(array) {\n    const nativeArray = new this.training.IntArray();\n    nativeArray.resize(array.length, 0);\n    for (let i = 0; i < array.length; i++) {\n      nativeArray.set(i, array[i]);\n    }\n    return nativeArray;\n  }\n\n  fromNativeState(nativeState) {\n    const state = {\n      goalPosition: [\n        nativeState.goalPosition.x,\n        nativeState.goalPosition.y,\n        nativeState.goalPosition.z\n      ],\n      transforms: []\n    };\n    for (let i = 0; i < nativeState.transforms.size(); i++) {\n      const transform = nativeState.transforms.get(i);\n      state.transforms.push({\n        position: [\n          transform.position.x,\n          transform.position.y,\n          transform.position.z\n        ],\n        orientation: [\n          transform.orientation.x,\n          transform.orientation.y,\n          transform.orientation.z,\n          transform.orientation.w\n        ]\n      });\n    }\n    return state;\n  }\n}\n\nclass ActorCriticLosses {\n  constructor(lossP = 0, lossV = 0) {\n    this.lossP = lossP;\n    this.lossV = lossV;\n  }\n}\n\nexport default Trainer;\nexport { ActorCriticLosses };\n","import './App.css';\nimport React, { Component } from 'react';\nimport Viewport from './Viewport';\nimport Toolbar from './Toolbar';\nimport Shape from './Shape';\nimport ShapeFolder from './ShapeFolder';\nimport Exporter from './Exporter';\nimport Config from './Config';\nimport Worker from \"./Worker.worker.js\";\nimport RigidInfo from './RigidInfo';\nimport { ActorCriticLosses } from './Trainer';\n\nconst ARCHIVE_VERSION = 4;\nconst ARCHIVE_EXTENSION = \".twy\";\nconst HISTORY_LENGTH_MAX = 30;\n\nconst AppMode = Object.freeze({\n  EDIT: 0,\n  TRAINING: 1,\n  PLAY: 2,\n  LOADING: 3\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const shape = Shape.createInitialShape();\n\n    this.state = {\n      mode: AppMode.EDIT,\n      shape: shape,\n      activePlaceableId: 0,\n      historyEntries: [],\n      historyIndex: -1,\n      config: new Config(),\n      trainingActive: false,\n      trainingSteps: 0,\n      trainingValue: 0,\n      trainingLosses: new ActorCriticLosses(),\n      trainingTime: 0,\n      trainingState: null\n    };\n    this.figures = null;\n    this.figureRandomIndices = null;\n    this.figureIndex = -1;\n    this.finalShape = shape;\n    this.rigidInfo = null;\n    this.shapeData = null;\n    this.checkpoint = null;\n    this.database = null;\n    this.worker = null;\n    this.playing = false;\n\n    this.addHistoryEntry(this.state, shape, this.finalShape, 0);\n  }\n\n  addHistoryEntry(state, shape, finalShape, activePlaceableId) {\n    let historyLength = state.historyIndex + 1;\n    const historyStart = (historyLength >= HISTORY_LENGTH_MAX ?\n        historyLength - HISTORY_LENGTH_MAX + 1 : 0);\n    historyLength = Math.min(historyLength, HISTORY_LENGTH_MAX - 1);\n    state.historyEntries = state.historyEntries.splice(historyStart, historyLength);\n    state.historyEntries.push({\n      shape: shape,\n      finalShape: finalShape,\n      activePlaceableId: activePlaceableId\n    });\n    state.historyIndex = state.historyEntries.length - 1;\n  }\n\n  showFigure(name) {\n    const shape = ShapeFolder.build(name, this.figures);\n    if (shape) {\n      this.handleShapeChange(shape, true);\n    }\n  }\n\n  handleShapeChange(shape, reset = false, activePlaceableId = undefined) {\n    if (!this.ensureEditMode()) {\n      return;\n    }\n\n    const nextState = {\n      shape: shape,\n      historyEntries: this.state.historyEntries,\n      historyIndex: this.state.historyIndex\n    };\n    if (reset || (this.state.activePlaceableId\n        && !shape.findPlaceable(this.state.activePlaceableId))) {\n      nextState.activePlaceableId = 0;\n    } else if (activePlaceableId) {\n      nextState.activePlaceableId = activePlaceableId;\n    }\n    if (shape.showPose) {\n      this.finalShape = shape.clone();\n      this.finalShape.applyInitialAngles();\n      if (this.finalShape.hasPrismIntersections()) {\n        console.log(\"Shape has intersections between prisms\");\n      }\n    } else {\n      this.finalShape = shape;\n    }\n    this.addHistoryEntry(nextState, shape, this.finalShape, nextState.activePlaceableId);\n    this.setState(nextState);\n  }\n\n  handleActivePlaceableChange(activePlaceableId) {\n    this.setState({ activePlaceableId: activePlaceableId });\n  }\n\n  handleHistoryChange(index) {\n    if (!this.ensureEditMode()) {\n      return;\n    }\n\n    if ((index < 0) || (index >= this.state.historyEntries.length)) {\n      return;\n    }\n    const historyEntry = this.state.historyEntries[index];\n    this.finalShape = historyEntry.finalShape;\n    this.setState({\n      shape: historyEntry.shape,\n      activePlaceableId: historyEntry.activePlaceableId,\n      historyIndex: index\n    });\n  }\n\n  handleReset() {\n    if (!this.ensureEditMode()) {\n      return;\n    }\n    this.handleShapeChange(Shape.createInitialShape(), true);\n    this.handleConfigChange(new Config());\n    this.checkpoint = null;\n  }\n\n  handleShapeShowcase() {\n    if (!this.figures) {\n      fetch(\"res/figures.rsf\")\n        .then(response => response.json())\n        .then(data => {\n          this.figures = data;\n          this.figureRandomIndices =\n            [...Array(this.figures.definitions.length).keys()]\n            .map(a => ({sort: Math.random(), value: a}))\n            .sort((a, b) => a.sort - b.sort)\n            .map(a => a.value);\n          this.figureIndex = -1;\n          this.handleShapeShowcase();\n        });\n    } else {\n      this.figureIndex = (this.figureIndex + 1) % this.figureRandomIndices.length;\n      const figureName = this.figures.definitions[this.figureRandomIndices[this.figureIndex]].name;\n      this.showFigure(figureName);\n    }\n  }\n\n  handleArchiveLoad() {\n    if (!this.ensureEditMode()) {\n      return;\n    }\n\n    this.uploadFile(ARCHIVE_EXTENSION, (content) => {\n      const archive = JSON.parse(content);\n      if (archive.version > ARCHIVE_VERSION) {\n        alert(\"Unsupported version: \" + archive.version);\n        return;\n      }\n      const shape = new Shape();\n      shape.fromArchive(archive.shape, archive.version);\n      shape.applyTransform();\n      if (shape) {\n        this.handleShapeChange(shape, true);\n      } else {\n        alert(\"Failed to load shape\");\n      }\n      if (archive.version >= 4) {\n        const config = archive.config;\n        if (config) {\n          this.handleConfigChange(config);\n        } else {\n          this.handleConfigChange(new Config());\n          alert(\"Failed to load config\");\n        }\n        this.checkpoint = archive.checkpoint;\n      }\n    });\n  }\n\n  handleArchiveSave() {\n    if (!this.state.shape.name) {\n      alert(\"Shape name must be given\");\n      return;\n    }\n    this.generateShapeData();\n    const content = JSON.stringify({\n      version: ARCHIVE_VERSION,\n      shape: this.state.shape.toArchive(),\n      shapeData: this.shapeData,\n      config: this.state.config,\n      checkpoint: this.checkpoint\n    });\n    this.downloadFile(this.state.shape.name + ARCHIVE_EXTENSION, content);\n  }\n\n  handleConfigChange(config) {\n    this.setState({ config: config });\n  }\n\n  handleAppModeChange(mode) {\n    const nextState = {\n      mode: mode\n    };\n    if (this.worker != null) {\n      this.worker.terminate();\n      this.worker = null;\n    }\n    if ((mode === AppMode.TRAINING) || (mode === AppMode.PLAY)) {\n      this.generateShapeData();\n      this.playing = (mode === AppMode.PLAY);\n\n      let activeJointCount = 0;\n      for (const joint of this.rigidInfo.joints) {\n        if (joint.power !== 0) {\n          activeJointCount++;\n        }\n      }\n      if ((activeJointCount > 0) && !this.rigidInfo.error) {\n        nextState.mode = AppMode.LOADING;\n        nextState.trainingActive = false;\n        nextState.trainingSteps = 0;\n        nextState.trainingValue = 0;\n        nextState.trainingLosses = new ActorCriticLosses();\n        nextState.trainingTime = 0;\n      } else {\n        nextState.mode = this.state.mode;\n        if (this.rigidInfo.error) {\n          alert(this.rigidInfo.error);\n        } else {\n          alert(\"No active actuator\");\n        }\n      }\n    } else if (mode === AppMode.LOADING) {\n      if (window.Worker) {\n        nextState.mode = (this.playing ? AppMode.PLAY : AppMode.TRAINING);\n      } else {\n        nextState.mode = AppMode.EDIT;\n        alert(\"No worker support\");\n      }\n    }\n    this.setState(nextState);\n\n    if (nextState.mode === AppMode.LOADING) {\n      this.loadCheckpoint(checkpoint => {\n        if (checkpoint) {\n          if (checkpoint.key !== this.checkpoint.key) {\n            console.log(\"Checkpoint keys must be equal\");\n          } else if (!this.checkpoint.data || !this.checkpoint.time ||\n                     (checkpoint.time > this.checkpoint.time)) {\n            this.checkpoint = checkpoint;\n            console.log(\"Use checkpoint from DB\");\n          }\n        }\n        this.handleAppModeChange(this.state.mode);\n      });\n    } else if ((nextState.mode === AppMode.TRAINING) || (nextState.mode === AppMode.PLAY)) {\n      this.worker = new Worker();\n      this.worker.onmessage = ((e) => this.handleWorkerMessage(e));\n      this.worker.postMessage([this.state.config, this.shapeData, this.checkpoint.data, this.playing]);\n    }\n  }\n\n  handleWorkerMessage(e) {\n    const [steps, value, losses, time, state, data] = e.data;\n    if (data) {\n      this.checkpoint.data = data;\n      this.checkpoint.time = Date.now();\n      this.saveCheckpoint(() => {\n        console.log(\"Save checkpoint at \" + steps + \"/\" + this.state.config.totalSteps);\n      });\n    }\n    const nextState = {\n      trainingState: state\n    };\n    if (!this.state.trainingActive ||\n        (this.state.trainingValue !== value) || (this.state.trainingTime !== time) ||\n        ((steps === this.state.config.totalSteps) && (nextState.trainingSteps !== steps))) {\n      if (!this.state.trainingActive) {\n        nextState.trainingActive = true;\n      }\n      nextState.trainingSteps = steps;\n      nextState.trainingValue = value;\n      nextState.trainingLosses = losses;\n      nextState.trainingTime = time;\n    }\n    this.setState(nextState);\n  }\n\n  generateShapeData() {\n    this.rigidInfo = new RigidInfo(this.finalShape);\n    const exporter = new Exporter(this.state.config, this.rigidInfo);\n    this.shapeData = exporter.export(this.finalShape.name);\n    const checkpoint = this.createCheckpoint(this.state.config, this.shapeData);\n    if (checkpoint.key !== this.checkpoint?.key) {\n      if (this.checkpoint?.data) {\n        console.log(\"Clear checkpoint data due to key change\");\n      }\n      this.checkpoint = checkpoint;\n    }\n  }\n\n  ensureEditMode() {\n    const editMode = (this.state.mode === AppMode.EDIT);\n    if (!editMode) {\n      alert(\"Stop training mode first\");\n    }\n    return editMode;\n  }\n\n  downloadFile(name, content) {\n    const element = document.createElement(\"a\");\n    const file = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n    element.href = URL.createObjectURL(file);\n    element.download = name;\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  uploadFile(extension, onload) {\n    const element = document.createElement(\"input\");\n    element.setAttribute(\"type\", \"file\");\n    element.setAttribute(\"accept\", extension);\n    element.addEventListener(\"change\", () => {\n      if (!element.files.length) {\n        return;\n      }\n      const file = element.files[0];\n      const reader = new FileReader();\n      reader.onload = ((e) => {\n        onload(e.target.result);\n      });\n      reader.readAsText(file);\n    });\n    element.click();\n  }\n\n  createCheckpoint(config, shapeData) {\n    return {\n      key: getStringHash(config.hiddenLayerSizes.toString() + \"\\n\" + shapeData),\n      data: null,\n      time: null\n    };\n  }\n\n  loadCheckpoint(ondone) {\n    if (this.database) {\n      const getRequest = this.database\n                         .transaction(\"checkpoint\", \"readonly\")\n                         .objectStore(\"checkpoint\")\n                         .get(this.checkpoint.key);\n      getRequest.onsuccess = (e) => {\n        ondone(getRequest.result);\n      };\n      getRequest.onerror = (e) => {\n        console.log(\"Failed to load checkpoint\");\n        ondone();\n      };\n    } else {\n      this.openDatabase(() => {\n        if (this.database) {\n          this.loadCheckpoint(ondone);\n        } else {\n          ondone();\n        }\n      });\n    }\n  }\n\n  saveCheckpoint(onsuccess) {\n    if (this.database) {\n      const putRequest = this.database\n                         .transaction(\"checkpoint\", \"readwrite\")\n                         .objectStore(\"checkpoint\")\n                         .put(this.checkpoint);\n      putRequest.onsuccess = (e) => onsuccess();\n      putRequest.onerror = (e) => {\n        console.log(\"Failed to save checkpoint\");\n      };\n    } else {\n      this.openDatabase(() => {\n        if (this.database) {\n          this.saveCheckpoint(onsuccess);\n        }\n      });\n    }\n  }\n\n  openDatabase(ondone) {\n    const openRequest = indexedDB.open(\"database\");\n    openRequest.onupgradeneeded = (e) => {\n      const database = e.target.result;\n      if (!database.objectStoreNames.contains(\"checkpoint\")) {\n        database.createObjectStore(\"checkpoint\", {keyPath: \"key\"});\n        console.log(\"Initialize DB\");\n      }\n    };\n    openRequest.onsuccess = (e) => {\n      this.database = openRequest.result;\n      ondone();\n    };\n    openRequest.onerror = (e) => {\n      console.log(\"Failed to open DB\");\n      ondone();\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Viewport mode={this.state.mode} originalShape={this.state.shape}\n          finalShape={this.finalShape} rigidInfo={this.rigidInfo}\n          activePlaceableId={this.state.activePlaceableId} trainingState={this.state.trainingState}\n          onShapeChange={(shape, activePlaceableId) => this.handleShapeChange(shape, false, activePlaceableId)}\n          onActivePlaceableChange={activePlaceableId => this.handleActivePlaceableChange(activePlaceableId)} />\n        <Toolbar mode={this.state.mode} shape={this.state.shape}\n          activePlaceableId={this.state.activePlaceableId}\n          historyEntries={this.state.historyEntries} historyIndex={this.state.historyIndex}\n          trainingActive={this.state.trainingActive} trainingSteps={this.state.trainingSteps}\n          trainingValue={this.state.trainingValue} trainingLosses={this.state.trainingLosses}\n          trainingTime={this.state.trainingTime} config={this.state.config}\n          onShapeChange={shape => this.handleShapeChange(shape)}\n          onHistoryChange={index => this.handleHistoryChange(index)}\n          onReset={() => this.handleReset()}\n          onShapeShowcase={() => this.handleShapeShowcase()}\n          onArchiveSave={() => this.handleArchiveSave()}\n          onArchiveLoad={() => this.handleArchiveLoad()}\n          onTrainingStart={() => this.handleAppModeChange(AppMode.TRAINING)}\n          onTrainingStop={() => this.handleAppModeChange(AppMode.EDIT)}\n          onTrainingPlay={() => this.handleAppModeChange(AppMode.PLAY)}\n          onConfigChange={config => this.handleConfigChange(config)} />\n      </div>\n    );\n  }\n}\n\nfunction getStringHash(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash &= hash; // Convert to 32bit integer\n  }\n  return hash.toString(36);\n}\n\nexport default App;\nexport { AppMode };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}