{"version":3,"sources":["PrismView.js","ShapeView.js","Collision.js","Viewport.js","ColorPicker.js","Toolbar.js","Transform.js","Prism.js","Shape.js","ShapeFolder.js","App.js","serviceWorker.js","index.js"],"names":["PrismView","prism","renderable","this","ShapeView","shape","viewport","prismViews","i","prisms","length","push","createPrismView","syncTransform","createPrismRenderable","colorMask","backgroundColor","foregroundColor","forEach","prismView","destroyRenderable","id","scene","addEntity","setRenderableTransform","worldPosition","worldOrientation","auxVec1","vec3","create","auxVec2","auxVec3","auxVec4","intersectTriangle","ray","p1","p2","p3","edge1","sub","edge2","pvec","cross","direction","det","dot","tvec","origin","u","qvec","v","intersectSphere","center","radius","rayorig","squaredRadius","squaredRayLength","squaredLength","a","b","d","sqrtD","Math","sqrt","t","projectVerticesOntoAxis","axis","vertices","dmin","dmax","overlapProjectionsOntoAxis","vertices1","vertices2","eps","rayToPointDistance","point","vector","projection","scale","distance","DEGREES_TO_RADIANS","PI","RADIANS_TO_DEGREES","ELEVATION_LIMIT","DEFAULT_ELEVATION","DEFAULT_HEADING","iblUrl","getPrismTextureUrl","maskIndex","colorToFloat3","color","rgb","tinycolor","toRgb","r","g","IDENTITY_QUAT","quat","auxMat4","mat4","Viewport","assets","window","Filament","init","prevProps","props","handleShapeChange","engine","shapeView","destroy","addToScene","activePrismView","selectPrism","activePrism","elevation","heading","availableJunctions","focalLengthMin","focalLengthMax","cameraZoom","targetZoom","lastZoom","focalPoint","targetPosition","lastPosition","highlightColor","animationTimer","highlightTimer","pressing","dragging","pickedPrism","pickedJunction","activeJunctionPrism","pointerX","pointerY","canvas","filament","Engine","camera","createCamera","EntityManager","get","createScene","indirectLight","createIblFromKtx","setIntensity","setIndirectLight","skybox","createSkyFromKtx","setSkybox","prismSourceMaterial","createMaterial","prismSourceMesh","loadFilamesh","prismBoundingBox","getBoundingBox","ghostMaterial","ghostRenderable","buildPrismRenderable","getDefaultInstance","knobSourceMaterial","knobSourceMesh","knobBoundingBox","knobRenderables","prismTextures","createTextureFromPng","prismTextureSampler","TextureSampler","MinFilter","LINEAR_MIPMAP_LINEAR","MagFilter","LINEAR","WrapMode","CLAMP_TO_EDGE","swapChain","createSwapChain","renderer","createRenderer","view","createView","setCamera","setScene","resize","renderFrame","bind","addEventListener","requestAnimationFrame","e","handlePointerDown","handlePointerUp","handlePointerMove","material","RenderableManager","Builder","boundingBox","geometry","RenderableManager$PrimitiveType","TRIANGLES","vertexBuffer","indexBuffer","build","validColorMask","prismMaterial","createInstance","setTextureParameter","setColor3Parameter","RgbType","sRGB","setColor4Parameter","RgbaType","setFloatParameter","getRenderableMaterial","destroyMaterialInstance","destroyEntity","getRenderableManager","renderableManager","renderableInstance","getInstance","getAxisAlignedBoundingBox","delete","position","orientation","transformManager","getTransformManager","transformInstance","transform","fromRotationTranslation","setTransform","getMaterialInstanceAt","eye","rotateX","rotateY","lookAt","fl","focalLength","fovY","atan","aspect","width","height","setProjectionFov","Camera$Fov","VERTICAL","timestamp","undefined","lastTime","deltaTime","min","k","lerp","updateCamera","abs","highlightIntensity","HIGHLIGHT_OPAQUE_BLEND","setHighlightIntensity","render","dpr","devicePixelRatio","innerWidth","innerHeight","setViewport","pointerType","isPrimary","isPrimaryPointer","junctionIntersection","getCastingRay","clientX","clientY","prismIntersection","intersect","intersectJunctions","hitDistance","hitJunction","activatePrismKnob","hitPrism","addPrism","hideGhostPrism","showPrismKnobs","dx","dy","nearestJunctionPrism","pickNearestJunctionPrism","showGhostPrism","max","POINTER_DRAG_THRESHOLD","autoFovY","viewRotation","mat3","fromMat4","getViewMatrix","invAspect","vertex","aabb","transformMat3","widthFitFovY","heightFitFovY","autoZoom","tan","x","y","rayVec","vec4","fromValues","transformMat4","Camera","inverseProjection","getProjectionMatrix","getModelMatrix","normalize","getPosition","junction","junctionHitDistance","pivot","rayDistance","junctionPrism","prismRayDistance","animate","notify","findPrismView","updateHighlightColor","getAvailableJunctions","hidePrismKnobs","copy","computeAutoZoom","onActivePrismChange","clone","lastPrismId","applyTransform","onShapeChange","colorStr","readability","intensity","remove","junctions","createKnobRenderable","knobRenderable","activeJunction","junctionIndex","indexOf","className","ref","Component","ColorPicker","state","displayColorPicker","setState","onChange","hex","handleHideColorPicker","styles","reactCSS","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","style","onClick","handleToggleColorPicker","handleColorChange","Toolbar","prevShape","shapeModifier","prevPrism","prismModifier","modifyShape","findPrism","roll","parseFloat","pitch","yaw","modifyPrism","parseInt","filter","htmlFor","type","name","step","value","handleRollChange","target","handlePitchChange","handleYawChange","onShapeReset","onShapeShowcase","onShapeImport","onShapeExport","COLOR_MASK_COUNT","handleColorMaskChange","handleBackgroundColorChange","handleForegroundColorChange","handleSwapColors","disabled","handleDeletePrism","renderPrismParams","renderShapeParams","historyIndex","onHistoryChange","historyEntries","renderHistory","renderParams","createTransform","rotatedTransform","angle","rotation","setAxisAngle","transformQuat","add","mul","multiplyTransforms","transform1","transform2","PRISM_SIDE","PRISM_HALF_SIDE","PRISM_VERTICES","PRISM_TRIANGLE_INDICES","PRISM_POLYGON_NORMALS","map","indices","p0","normal","PRISM_LEFT_SLOPE_PIVOT_POINT","PRISM_RIGHT_SLOPE_PIVOT_POINT","PRISM_LEFT_SLOPE_NORMAL","rotateZ","PRISM_RIGHT_SLOPE_NORMAL","PRISM_LEFT_TRANSFORM","fromEuler","PRISM_RIGHT_TRANSFORM","PRISM_JUNCTIONS","swapColors","transforms","Prism","polygonNormals","shapeOrientation","multiply","triangleHitDistance","intersectTriangles","polygonNormals1","polygonNormals2","every","polygonNormal1","polygonNormal2","junctionPrisms","j","junctionTransform","archive","Shape","getOrientation","zero","translation","prismHitDistance","getJunctions","shapePrism","collides","toArchive","prismArchive","fromArchive","ShapeFolder","pieceCount","notation","tokens","split","token","pos","downwardPrismNumberStr","substring","index","twistsStr","twists","twist","ccw","twistAngle","twistPrism","rotations","shapeRotation","aa","set","rotate","figures","definition","definitions","find","skin","compileSkin","shapeFolder","pieces","colors","mask","fold","applyRotations","translate","negate","startPos","charAt","delimPos","lastIndexOf","skinName","skinDefinition","skins","skinPattern","patterns","pattern","key","shapeColors","colorNumbers","prismColors","colorNumber","colorName","reverse","App","createInitialShape","figureRandomIndices","figureIndex","addHistoryEntry","historyLength","historyStart","HISTORY_LENGTH_MAX","splice","reset","nextState","historyEntry","figureName","showFigure","fetch","then","response","json","data","Array","keys","sort","random","handleShapeShowcase","element","document","createElement","setAttribute","files","file","reader","FileReader","onload","archiveToShape","result","readAsText","click","prompt","content","shapeToArchive","Blob","href","URL","createObjectURL","download","body","appendChild","handleActivePrismChange","handleHistoryChange","handleShapeReset","handleShapeImport","handleShapeExport","JSON","stringify","version","text","parse","alert","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2c716421.chunk.js","sourcesContent":["class PrismView {\n  constructor(prism, renderable) {\n    this.prism = prism;\n    this.renderable = renderable;\n  }\n}\n\nexport default PrismView;\n","import PrismView from './PrismView';\n\nclass ShapeView {\n  constructor(shape, viewport) {\n    this.shape = shape;\n\n    this.prismViews = [];\n    for (let i = 0; i < this.shape.prisms.length; i++) {\n      this.prismViews.push(this.createPrismView(this.shape.prisms[i], viewport));\n    }\n\n    this.syncTransform(viewport);\n  }\n\n  createPrismView(prism, viewport) {\n    const renderable = viewport.createPrismRenderable(prism.colorMask,\n        prism.backgroundColor, prism.foregroundColor);\n    return new PrismView(prism, renderable);\n  }\n\n  destroy(viewport) {\n    this.prismViews.forEach(prismView => viewport.destroyRenderable(prismView.renderable));\n    this.prismViews = null;\n  }\n\n  findPrismView(id) {\n    for (let i = 0; i < this.prismViews.length; i++) {\n      const prismView = this.prismViews[i];\n      if (prismView.prism.id === id) {\n        return prismView;\n      }\n    }\n    return null;\n  }\n\n  addToScene(viewport) {\n    this.prismViews.forEach((prismView) => viewport.scene.addEntity(prismView.renderable));\n  }\n\n  syncTransform(viewport) {\n    for (let i = 0; i < this.prismViews.length; i++) {\n      const prismView = this.prismViews[i];\n      const prism = prismView.prism;\n      viewport.setRenderableTransform(prismView.renderable, prism.worldPosition,\n          prism.worldOrientation);\n    }\n  }\n}\n\nexport default ShapeView;\n","import { vec3 } from 'gl-matrix';\n\nconst auxVec1 = vec3.create();\nconst auxVec2 = vec3.create();\nconst auxVec3 = vec3.create();\nconst auxVec4 = vec3.create();\n\nfunction intersectTriangles(ray, vertices, indices) {\n  let hitDistance;\n  for (let i = 0; i < indices.length; i += 3) {\n    const triangleHitDistance = intersectTriangle(ray,\n        vertices[indices[i]], vertices[indices[i + 1]], vertices[indices[i + 2]]);\n    if (triangleHitDistance !== undefined) {\n      if ((hitDistance === undefined) || (triangleHitDistance < hitDistance)) {\n        hitDistance = triangleHitDistance;\n      }\n    }\n  }\n  return hitDistance;\n}\n\nfunction intersectTriangle(ray, p1, p2, p3) {\n  const edge1 = vec3.sub(auxVec1, p2, p1);\n  const edge2 = vec3.sub(auxVec2, p3, p1);\n  const pvec = vec3.cross(auxVec3, ray.direction, edge2);\n  const det = vec3.dot(edge1, pvec);\n  if (det < 1e-6) {\n    return;\n  }\n  const tvec = vec3.sub(auxVec4, ray.origin, p1);\n  const u = vec3.dot(tvec, pvec);\n  if ((u < 0) || (u > det)) {\n    return;\n  }\n  const qvec = vec3.cross(auxVec4, tvec, edge1);\n  const v = vec3.dot(ray.direction, qvec);\n  if ((v < 0) || (u + v > det)) {\n    return;\n  }\n  return vec3.dot(edge2, qvec) / det;\n}\n\nfunction intersectSphere(ray, center, radius) {\n  const rayorig = vec3.sub(auxVec1, ray.origin, center);\n  const squaredRadius = radius * radius;\n  const squaredRayLength = vec3.squaredLength(rayorig);\n\n  if (squaredRayLength <= squaredRadius) {\n    return 0; // inside hit\n  }\n\n  const a = vec3.dot(ray.direction, ray.direction);\n  const b = 2 * vec3.dot(rayorig, ray.direction);\n  const c = squaredRayLength - squaredRadius;\n  const d = b * b - (4 * a * c);\n  if (d >= 0) {\n    const sqrtD = Math.sqrt(d);\n    let t = (-b - sqrtD) / (2 * a);\n    if (t < 0) {\n      t = (-b + sqrtD) / (2 * a);\n    }\n    return t; // nearest surface hit\n  }\n}\n\nfunction projectVerticesOntoAxis(axis, vertices) {\n  let dmin = 0;\n  let dmax = 0;\n  for (let i = 0; i < vertices.length; i++) {\n    const d = vec3.dot(axis, vertices[i]);\n    if (i === 0) {\n      dmin = d;\n      dmax = d;\n    } else {\n      if (d < dmin) {\n        dmin = d;\n      }\n      if (d > dmax) {\n        dmax = d;\n      }\n    }\n  }\n  return {\n    dmin: dmin,\n    dmax: dmax\n  };\n}\n\nfunction overlapProjectionsOntoAxis(axis, vertices1, vertices2, eps = 1e-3) {\n  if ((vertices1.length === 0) || (vertices2.length === 0)) {\n    return false;\n  }\n  let p1 = projectVerticesOntoAxis(axis, vertices1);\n  let p2 = projectVerticesOntoAxis(axis, vertices2);\n  return (p1.dmin + eps < p2.dmax) && (p2.dmin + eps < p1.dmax);\n}\n\nfunction collideConvexHulls(vertices1, polygonNormals1, vertices2, polygonNormals2) {\n  return polygonNormals1.every(polygonNormal1 =>\n          overlapProjectionsOntoAxis(polygonNormal1, vertices1, vertices2))\n      && polygonNormals2.every(polygonNormal2 =>\n          overlapProjectionsOntoAxis(polygonNormal2, vertices1, vertices2));\n}\n\nfunction rayToPointDistance(ray, point) {\n  const vector = vec3.sub(auxVec1, point, ray.origin);\n  const projection = vec3.scale(auxVec2, ray.direction, vec3.dot(vector, ray.direction));\n  return vec3.distance(vector, projection);\n}\n\nexport { intersectTriangles, intersectSphere, collideConvexHulls, rayToPointDistance };\n","import React, { Component } from 'react';\nimport { vec3, vec4, quat, mat3, mat4 } from 'gl-matrix';\nimport ShapeView from './ShapeView';\nimport './App.css';\nimport tinycolor from 'tinycolor2';\nimport { intersectSphere, rayToPointDistance } from './Collision';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\n\nconst COLOR_MASK_COUNT = 8;\nconst POINTER_DRAG_THRESHOLD = 3;\nconst POINTER_DRAG_THRESHOLD_SQUARED = POINTER_DRAG_THRESHOLD * POINTER_DRAG_THRESHOLD;\nconst POINTER_DRAG_FACTOR = 0.01;\nconst ELEVATION_LIMIT = 0.48 * Math.PI;\nconst CAMERA_ANIMATION_TIME = 0.3;\nconst DEFAULT_ELEVATION = -Math.PI / 10;\nconst DEFAULT_HEADING = -Math.PI / 40;\n\nconst CAMERA_FOCAL_LENGTH_MIN = 15;\nconst CAMERA_FOCAL_LENGTH_MAX = 50;\nconst CAMERA_SENSOR_HEIGHT = 32;\nconst CAMERA_NEAR = 1;\nconst CAMERA_FAR = 300;\nconst CAMERA_DISTANCE = 10;\nconst SHAPE_FIT_SCALE = 1.1;\nfunction fovYToFocalLength(fovY) {\n  return 0.5 * CAMERA_SENSOR_HEIGHT / Math.tan(0.5 * fovY * DEGREES_TO_RADIANS);\n}\nfunction focalLengthToFovY(fl) {\n  return 2 * Math.atan(0.5 * CAMERA_SENSOR_HEIGHT / fl) * RADIANS_TO_DEGREES;\n}\n\nconst HIGHLIGHT_PRIMARY_COLOR = \"#ffff40\";\nconst HIGHLIGHT_ALTERNATE_COLOR = \"#b266ff\";\nconst HIGHLIGHT_OPAQUE_BLEND = 0.8;\nconst HIGHLIGHT_START_BLEND = 0.3;\nconst HIGHLIGHT_RANGE_BLEND = HIGHLIGHT_OPAQUE_BLEND - HIGHLIGHT_START_BLEND;\nconst HIGHLIGHT_ANIMATION_TIME = 2;\n\nconst KNOB_RADIUS = 0.4;\nconst KNOB_IDLE_ALPHA = 0.3;\nconst KNOB_ACTIVE_ALPHA = 1.0;\n\nconst iblUrl = \"res/environment_ibl.ktx\";\nconst skyboxUrl = \"res/environment_skybox.ktx\";\nconst prismMeshUrl = \"res/prism.filamesh\";\nconst prismMaterialUrl = \"res/prism.filamat\";\nconst ghostMaterialUrl = \"res/ghost.filamat\";\nconst knobMeshUrl = \"res/knob.filamesh\";\nconst knobMaterialUrl = \"res/knob.filamat\";\nconst getPrismTextureUrl = ((maskIndex) => \"res/prism\" + maskIndex + \".png\");\nconst colorToFloat3 = ((color) => {\n  const rgb = tinycolor(color).toRgb();\n  return [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n});\n\nconst IDENTITY_QUAT = quat.create();\nconst auxMat4 = mat4.create();\n\nclass Viewport extends Component {\n  componentDidMount() {\n    let assets = [iblUrl, skyboxUrl, prismMeshUrl, prismMaterialUrl,\n        ghostMaterialUrl, knobMeshUrl, knobMaterialUrl];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      assets.push(getPrismTextureUrl(i));\n    }\n    window.Filament.init(assets, () => {\n      this.init();\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.shape !== this.props.shape) {\n      this.handleShapeChange();\n    }\n  }\n\n  handleShapeChange() {\n    if (!this.engine) {\n      return;\n    }\n    if (this.shapeView) {\n      this.shapeView.destroy(this);\n    }\n    this.shapeView = new ShapeView(this.props.shape, this);\n    this.shapeView.addToScene(this);\n    this.activePrismView = null;\n    this.selectPrism(this.props.activePrism, true, false);\n  }\n\n  init() {\n    this.elevation = DEFAULT_ELEVATION;\n    this.heading = DEFAULT_HEADING;\n    this.activePrismView = null;\n    this.availableJunctions = null;\n    this.focalLengthMin = CAMERA_FOCAL_LENGTH_MIN;\n    this.focalLengthMax = CAMERA_FOCAL_LENGTH_MAX;\n    this.cameraZoom = 1;\n    this.targetZoom = this.cameraZoom;\n    this.lastZoom = this.cameraZoom;\n    this.focalPoint = vec3.create();\n    this.targetPosition = vec3.create();\n    this.lastPosition = vec3.create();\n    this.highlightColor = [0, 0, 0, 0];\n    this.animationTimer = 0;\n    this.highlightTimer = 0;\n\n    this.pressing = false;\n    this.dragging = false;\n    this.pickedPrism = null;\n    this.pickedJunction = null;\n    this.activeJunctionPrism = null;\n    this.pointerX = 0;\n    this.pointerY = 0;\n\n    this.canvas = this.filament;\n    const engine = this.engine = window.Filament.Engine.create(this.canvas);\n    this.camera = engine.createCamera(window.Filament.EntityManager.get().create());\n    this.scene = engine.createScene();\n\n    const indirectLight = engine.createIblFromKtx(iblUrl);\n    indirectLight.setIntensity(50000);\n    this.scene.setIndirectLight(indirectLight);\n\n    const skybox = engine.createSkyFromKtx(skyboxUrl);\n    this.scene.setSkybox(skybox);\n\n    this.prismSourceMaterial = engine.createMaterial(prismMaterialUrl);\n    this.prismSourceMesh = engine.loadFilamesh(prismMeshUrl);\n    this.prismBoundingBox = this.getBoundingBox(this.prismSourceMesh.renderable);\n\n    const ghostMaterial = engine.createMaterial(ghostMaterialUrl);\n    this.ghostRenderable = this.buildPrismRenderable(ghostMaterial.getDefaultInstance());\n\n    this.knobSourceMaterial = engine.createMaterial(knobMaterialUrl);\n    this.knobSourceMesh = engine.loadFilamesh(knobMeshUrl);\n    this.knobBoundingBox = this.getBoundingBox(this.knobSourceMesh.renderable);\n    this.knobRenderables = [];\n\n    this.prismTextures = [];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      this.prismTextures.push(engine.createTextureFromPng(getPrismTextureUrl(i)));\n    }\n    this.prismTextureSampler = new window.Filament.TextureSampler(\n        window.Filament.MinFilter.LINEAR_MIPMAP_LINEAR,\n        window.Filament.MagFilter.LINEAR,\n        window.Filament.WrapMode.CLAMP_TO_EDGE);\n\n    this.handleShapeChange();\n\n    this.swapChain = engine.createSwapChain();\n    this.renderer = engine.createRenderer();\n    this.view = engine.createView();\n    this.view.setCamera(this.camera);\n    this.view.setScene(this.scene);\n\n    this.resize();\n    this.renderFrame = this.renderFrame.bind(this);\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n    window.requestAnimationFrame(this.renderFrame);\n    this.canvas.addEventListener(\"pointerdown\", (e) => this.handlePointerDown(e));\n    this.canvas.addEventListener(\"pointerup\", (e) => this.handlePointerUp(e));\n    this.canvas.addEventListener(\"pointermove\", (e) => this.handlePointerMove(e));\n  }\n\n  buildPrismRenderable(material) {\n    const renderable = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox(this.prismBoundingBox)\n      .material(0, material)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES,\n          this.prismSourceMesh.vertexBuffer, this.prismSourceMesh.indexBuffer)\n      .build(this.engine, renderable);\n    return renderable;\n  }\n\n  createPrismRenderable(colorMask, backgroundColor, foregroundColor) {\n    const validColorMask = (colorMask >= 0) && (colorMask < COLOR_MASK_COUNT)\n        ? colorMask : 0;\n    const prismMaterial = this.prismSourceMaterial.createInstance();\n    prismMaterial.setTextureParameter(\"colorMask\",\n        this.prismTextures[validColorMask], this.prismTextureSampler);\n    prismMaterial.setColor3Parameter(\"backgroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(backgroundColor));\n    prismMaterial.setColor3Parameter(\"foregroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(foregroundColor));\n    prismMaterial.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, [0, 0, 0, 0]);\n    return this.buildPrismRenderable(prismMaterial);\n  }\n\n  createKnobRenderable() {\n    const material = this.knobSourceMaterial.createInstance();\n    material.setFloatParameter(\"alpha\", 0);\n\n    const renderable = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox(this.knobBoundingBox)\n      .material(0, material)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES,\n          this.knobSourceMesh.vertexBuffer, this.knobSourceMesh.indexBuffer)\n      .build(this.engine, renderable);\n    return renderable;\n  }\n\n  destroyRenderable(renderable) {\n    const material = this.getRenderableMaterial(renderable);\n    this.engine.destroyMaterialInstance(material);\n    this.engine.destroyEntity(renderable);\n    const renderableManager = this.engine.getRenderableManager();\n    renderableManager.destroy(renderable);\n  }\n\n  getBoundingBox(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const boundingBox = renderableManager.getAxisAlignedBoundingBox(renderableInstance);\n    renderableInstance.delete();\n    return boundingBox;\n  }\n\n  setRenderableTransform(renderable, position, orientation) {\n    const transformManager = this.engine.getTransformManager();\n    const transformInstance = transformManager.getInstance(renderable);\n    const transform = mat4.fromRotationTranslation(auxMat4, orientation, position);\n    transformManager.setTransform(transformInstance, transform);\n    transformInstance.delete();\n  }\n\n  getRenderableMaterial(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const material = renderableManager.getMaterialInstanceAt(renderableInstance, 0);\n    renderableInstance.delete();\n    return material;\n  }\n\n  updateCamera() {\n    const eye = [this.focalPoint[0], this.focalPoint[1], this.focalPoint[2] + CAMERA_DISTANCE];\n    const up = [0, 1, 0];\n    vec3.rotateX(eye, eye, this.focalPoint, this.elevation);\n    vec3.rotateY(eye, eye, this.focalPoint, this.heading);\n    this.camera.lookAt(eye, this.focalPoint, up);\n\n    const focalLength = this.focalLengthMin * (1 - this.cameraZoom)\n        + this.focalLengthMax * this.cameraZoom;\n    const fovY = focalLengthToFovY(focalLength);\n    const aspect = this.canvas.width / this.canvas.height;\n    this.camera.setProjectionFov(fovY, aspect, CAMERA_NEAR, CAMERA_FAR,\n        window.Filament.Camera$Fov.VERTICAL);\n  }\n\n  renderFrame(timestamp) {\n    if (this.lastTime === undefined) {\n      this.lastTime = timestamp;\n    }\n    const deltaTime = 1e-3 * (timestamp - this.lastTime);\n    this.lastTime = timestamp;\n\n    if (this.animationTimer < CAMERA_ANIMATION_TIME) {\n      this.animationTimer += deltaTime;\n      const t = Math.min(this.animationTimer / CAMERA_ANIMATION_TIME, 1);\n      const k = t * t * (3 - 2 * t);\n      vec3.lerp(this.focalPoint, this.lastPosition, this.targetPosition, k);\n      this.cameraZoom = this.lastZoom * (1 - k) + this.targetZoom * k;\n      this.updateCamera();\n    }\n\n    if (this.activePrismView) {\n      this.highlightTimer += deltaTime;\n      if (this.highlightTimer > HIGHLIGHT_ANIMATION_TIME) {\n        this.highlightTimer %= HIGHLIGHT_ANIMATION_TIME;\n      }\n      const t = 2 * Math.abs(this.highlightTimer / HIGHLIGHT_ANIMATION_TIME - 0.5);\n      const k = t * t * (3 - 2 * t);\n      const highlightIntensity = HIGHLIGHT_START_BLEND + k * HIGHLIGHT_RANGE_BLEND;\n      this.setHighlightIntensity(this.activePrismView, highlightIntensity);\n    }\n\n    this.renderer.render(this.swapChain, this.view);\n    window.requestAnimationFrame(this.renderFrame);\n  }\n\n  resize() {\n    const dpr = window.devicePixelRatio;\n    const width = this.canvas.width = 0.8 * window.innerWidth * dpr;\n    const height = this.canvas.height = window.innerHeight * dpr;\n    this.view.setViewport([0, 0, width, height]);\n    this.focalLengthMin = CAMERA_FOCAL_LENGTH_MIN;\n    this.focalLengthMax = CAMERA_FOCAL_LENGTH_MAX;\n    if (width < height) {\n      const aspect = width / height;\n      this.focalLengthMin *= aspect;\n      this.focalLengthMax *= aspect;\n    }\n\n    this.updateCamera();\n  }\n\n  isPrimaryPointer(e) {\n    return (e.pointerType !== \"touch\") || e.isPrimary;\n  }\n\n  handlePointerDown(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n\n    const ray = this.getCastingRay(e.clientX, e.clientY);\n    const prismIntersection = this.shapeView.shape.intersect(ray);\n    let junctionIntersection;\n    if (this.props.activePrism) {\n      junctionIntersection = this.intersectJunctions(ray);\n    }\n    if (junctionIntersection && (!prismIntersection\n        || (junctionIntersection.hitDistance < prismIntersection.hitDistance))) {\n      this.pickedPrism = null;\n      this.pickedJunction = junctionIntersection.hitJunction;\n      this.activatePrismKnob(this.availableJunctions, this.pickedJunction);\n    } else {\n      this.pickedPrism = (prismIntersection) ? prismIntersection.hitPrism : null;\n      this.pickedJunction = null;\n    }\n    this.activeJunctionPrism = null;\n\n    this.pressing = true;\n    this.dragging = false;\n    this.pointerX = e.clientX;\n    this.pointerY = e.clientY;\n  }\n\n  handlePointerUp(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n    if (this.activeJunctionPrism) {\n      this.addPrism(this.activeJunctionPrism);\n    } else if (!this.dragging && !this.pickedJunction) {\n      this.selectPrism(this.pickedPrism, true, true);\n    }\n    this.pressing = false;\n    this.hideGhostPrism();\n    if (this.availableJunctions) {\n      this.showPrismKnobs(this.availableJunctions);\n    }\n  }\n\n  handlePointerMove(e) {\n    if (!this.isPrimaryPointer(e) || !this.pressing) {\n      return;\n    }\n    const dx = e.clientX - this.pointerX;\n    const dy = e.clientY - this.pointerY;\n    if (this.dragging) {\n      if (this.pickedJunction) {\n        const ray = this.getCastingRay(e.clientX, e.clientY);\n        const nearestJunctionPrism = this.pickNearestJunctionPrism(ray, this.pickedJunction);\n        if (nearestJunctionPrism !== this.activeJunctionPrism) {\n          this.showGhostPrism(nearestJunctionPrism.worldPosition, nearestJunctionPrism.worldOrientation);\n          this.activeJunctionPrism = nearestJunctionPrism;\n        }\n      } else {\n        this.elevation = Math.min(Math.max(\n            this.elevation - dy * POINTER_DRAG_FACTOR, -ELEVATION_LIMIT), ELEVATION_LIMIT);\n        this.heading = (this.heading - dx * POINTER_DRAG_FACTOR) % (2 * Math.PI);\n        this.updateCamera();\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n      }\n    } else {\n      const dragDistanceSquared = dx * dx + dy * dy;\n      if (dragDistanceSquared >= POINTER_DRAG_THRESHOLD_SQUARED) {\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n        this.dragging = true;\n      }\n    }\n  }\n\n  computeAutoZoom(shape) {\n    let autoFovY = 0;\n    const point = vec3.create();\n    const viewRotation = mat3.fromMat4(mat3.create(), this.camera.getViewMatrix());\n    const invAspect = this.canvas.height / this.canvas.width;\n    for (const prism of shape.prisms) {\n      for (const vertex of prism.vertices) {\n        vec3.sub(point, vertex, shape.aabb.center);\n        vec3.transformMat3(point, point, viewRotation);\n        const widthFitFovY = 2 * Math.atan(SHAPE_FIT_SCALE * invAspect\n            * Math.abs(point[0]) / (CAMERA_DISTANCE - point[2])) * RADIANS_TO_DEGREES;\n        if (widthFitFovY > autoFovY) {\n          autoFovY = widthFitFovY;\n        }\n        const heightFitFovY = 2 * Math.atan(SHAPE_FIT_SCALE * Math.abs(point[1])\n            / (CAMERA_DISTANCE - point[2])) * RADIANS_TO_DEGREES;\n        if (heightFitFovY > autoFovY) {\n          autoFovY = heightFitFovY;\n        }\n      }\n    }\n    if (autoFovY > 0) {\n      const autoFocalLength = fovYToFocalLength(autoFovY);\n      const autoZoom = (autoFocalLength - this.focalLengthMin)\n          / (this.focalLengthMax - this.focalLengthMin);\n      return Math.min(Math.max(autoZoom, 0), 1);\n    } else {\n      return 1;\n    }\n  }\n\n  getCastingRay(clientX, clientY) {\n    const dpr = window.devicePixelRatio;\n    const x = (2 * clientX * dpr) / this.canvas.width - 1;\n    const y = 1 - (2 * clientY * dpr) / this.canvas.height;\n    const rayVec = vec4.fromValues(x, y, -1, 1);\n    vec4.transformMat4(rayVec, rayVec, window.Filament.Camera.inverseProjection(\n        this.camera.getProjectionMatrix()));\n    rayVec[2] = -1;\n    rayVec[3] = 0;\n    vec4.transformMat4(rayVec, rayVec, this.camera.getModelMatrix());\n    const direction = vec3.fromValues(rayVec[0], rayVec[1], rayVec[2]);\n    vec3.normalize(direction, direction);\n    return {\n      origin: this.camera.getPosition(),\n      direction: direction\n    };\n  }\n\n  intersectJunctions(ray) {\n    if (!this.availableJunctions) {\n      return;\n    }\n    let hitJunction;\n    let hitDistance;\n    for (let i = 0; i < this.availableJunctions.length; i++) {\n      const junction = this.availableJunctions[i];\n      const junctionHitDistance = intersectSphere(ray, junction.pivot, KNOB_RADIUS);\n      if (junctionHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (junctionHitDistance < hitDistance)) {\n          hitJunction = junction;\n          hitDistance = junctionHitDistance;\n        }\n      }\n    }\n    if (!hitJunction) {\n      return;\n    }\n    return {\n      hitJunction: hitJunction,\n      hitDistance: hitDistance\n    };\n  }\n\n  pickNearestJunctionPrism(ray, junction) {\n    let junctionPrism = null;\n    let rayDistance;\n    for (let i = 0; i < junction.prisms.length; i++) {\n      const prism = junction.prisms[i];\n      const prismRayDistance = rayToPointDistance(ray, prism.worldPosition);\n      if ((rayDistance === undefined) || (prismRayDistance < rayDistance)) {\n        junctionPrism = prism;\n        rayDistance = prismRayDistance;\n      }\n    }\n    return junctionPrism;\n  }\n\n  selectPrism(prism, animate, notify) {\n    if (this.activePrismView) {\n      this.setHighlightIntensity(this.activePrismView, 0);\n    }\n    if (prism) {\n      this.activePrismView = this.shapeView.findPrismView(prism.id);\n    } else {\n      this.activePrismView = null;\n    }\n    if (this.activePrismView) {\n      this.updateHighlightColor(prism);\n      this.availableJunctions = this.shapeView.shape.getAvailableJunctions(prism);\n      this.showPrismKnobs(this.availableJunctions);\n    } else {\n      this.availableJunctions = null;\n      this.hidePrismKnobs();\n    }\n    if (animate) {\n      vec3.copy(this.lastPosition, this.targetPosition);\n      this.lastZoom = this.targetZoom;\n      if (this.activePrismView) {\n        vec3.copy(this.targetPosition, prism.worldPosition);\n        this.targetZoom = 1;\n      } else {\n        vec3.copy(this.targetPosition, this.shapeView.shape.aabb.center);\n        this.targetZoom = this.computeAutoZoom(this.shapeView.shape);\n      }\n      this.animationTimer = 0;\n      this.highlightTimer = 0;\n    }\n    if (notify) {\n      this.props.onActivePrismChange(prism);\n    }\n  }\n\n  addPrism(prism) {\n    const shape = this.shapeView.shape.clone();\n    prism.id = ++shape.lastPrismId;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    this.selectPrism(prism, false, true);\n    this.props.onShapeChange(shape);\n  }\n\n  updateHighlightColor(prism) {\n    const primaryReadability = tinycolor.readability(prism.backgroundColor, HIGHLIGHT_PRIMARY_COLOR);\n    const alternateReadability = tinycolor.readability(prism.backgroundColor, HIGHLIGHT_ALTERNATE_COLOR);\n    const colorStr = (primaryReadability > alternateReadability)\n        ? HIGHLIGHT_PRIMARY_COLOR : HIGHLIGHT_ALTERNATE_COLOR;\n    const rgb = tinycolor(colorStr).toRgb();\n    this.highlightColor[0] = rgb.r / 255;\n    this.highlightColor[1] = rgb.g / 255;\n    this.highlightColor[2] = rgb.b / 255;\n  }\n\n  setHighlightIntensity(prismView, intensity) {\n    const prismMaterial = this.getRenderableMaterial(prismView.renderable);\n    this.highlightColor[3] = intensity;\n    prismMaterial.setColor4Parameter(\"highlightColor\", window.Filament.RgbaType.sRGB, this.highlightColor);\n  }\n\n  showGhostPrism(position, orientation) {\n    this.setRenderableTransform(this.ghostRenderable, position, orientation);\n    this.scene.addEntity(this.ghostRenderable);\n  }\n\n  hideGhostPrism() {\n    this.scene.remove(this.ghostRenderable);\n  }\n\n  showPrismKnobs(junctions) {\n    while (this.knobRenderables.length < junctions.length) {\n      this.knobRenderables.push(this.createKnobRenderable());\n    }\n    for (let i = 0; i < junctions.length; i++) {\n      const junction = junctions[i];\n      const knobRenderable = this.knobRenderables[i];\n      const knobMaterial = this.getRenderableMaterial(knobRenderable);\n      knobMaterial.setFloatParameter(\"alpha\", KNOB_IDLE_ALPHA);\n      this.setRenderableTransform(knobRenderable, junction.pivot, IDENTITY_QUAT);\n      this.scene.addEntity(knobRenderable);\n    }\n    for (let i = junctions.length; i < this.knobRenderables.length; i++) {\n      const knobRenderable = this.knobRenderables[i];\n      this.scene.remove(knobRenderable)\n    }\n  }\n\n  activatePrismKnob(junctions, activeJunction) {\n    const junctionIndex = junctions.indexOf(activeJunction);\n    const knobRenderable = this.knobRenderables[junctionIndex];\n    const knobMaterial = this.getRenderableMaterial(knobRenderable);\n    knobMaterial.setFloatParameter(\"alpha\", KNOB_ACTIVE_ALPHA);\n    this.hidePrismKnobs();\n    this.scene.addEntity(knobRenderable);\n  }\n\n  hidePrismKnobs() {\n    this.knobRenderables.forEach(knobRenderable => this.scene.remove(knobRenderable));\n  }\n\n  render() {\n    return <canvas className=\"Viewport\" ref={ref => (this.filament = ref)} />\n  }\n}\n\nexport default Viewport;\nexport { COLOR_MASK_COUNT };\n","import React, { Component } from 'react'\nimport reactCSS from 'reactcss'\nimport { SwatchesPicker } from 'react-color'\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false\n    };\n  }\n\n  handleToggleColorPicker() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleHideColorPicker() {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleColorChange(color) {\n    this.props.onChange(color.hex);\n    this.handleHideColorPicker();\n  };\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: this.props.color,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={() => this.handleToggleColorPicker()}>\n          <div style={styles.color} />\n        </div>\n        {\n          this.state.displayColorPicker\n          ?\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={() => this.handleHideColorPicker()} />\n            <SwatchesPicker color={this.props.color} width=\"220px\" height=\"220px\"\n              onChange={(color) => this.handleColorChange(color)} />\n          </div>\n          :\n          null\n        }\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { COLOR_MASK_COUNT } from './Viewport';\nimport ColorPicker from './ColorPicker';\n\nclass Toolbar extends Component {\n  modifyShape(prevShape, shapeModifier) {\n    const shape = prevShape.clone();\n    shapeModifier(shape);\n    shape.applyTransform();\n    this.props.onShapeChange(shape);\n  }\n\n  modifyPrism(prevShape, prevPrism, prismModifier) {\n    this.modifyShape(prevShape, (shape) => {\n      const prism = shape.findPrism(prevPrism.id);\n      prismModifier(prism);\n    });\n  }\n\n  handleRollChange(prevShape, roll) {\n    this.modifyShape(prevShape, (shape) => shape.roll = parseFloat(roll) || 0);\n  }\n\n  handlePitchChange(prevShape, pitch) {\n    this.modifyShape(prevShape, (shape) => shape.pitch = parseFloat(pitch) || 0);\n  }\n\n  handleYawChange(prevShape, yaw) {\n    this.modifyShape(prevShape, (shape) => shape.yaw = parseFloat(yaw) || 0);\n  }\n\n  handleColorMaskChange(prevShape, prevPrism, colorMask) {\n    this.modifyPrism(prevShape, prevPrism,\n        (prism) => prism.colorMask = parseInt(colorMask) || 0);\n  }\n\n  handleBackgroundColorChange(prevShape, prevPrism, color) {\n    this.modifyPrism(prevShape, prevPrism,\n        (prism) => prism.backgroundColor = color);\n  }\n\n  handleForegroundColorChange(prevShape, prevPrism, color) {\n    this.modifyPrism(prevShape, prevPrism,\n        (prism) => prism.foregroundColor = color);\n  }\n\n  handleSwapColors(prevShape, prevPrism) {\n    this.modifyPrism(prevShape, prevPrism, (prism) => {\n      prism.foregroundColor = prevPrism.backgroundColor;\n      prism.backgroundColor = prevPrism.foregroundColor;\n    });\n  }\n\n  handleDeletePrism(prevShape, prevPrism) {\n    this.modifyShape(prevShape, (shape) => {\n      shape.prisms = shape.prisms.filter(prism => prism.id !== prevPrism.id);\n    });\n  }\n\n  renderShapeParams(shape) {\n    return (\n      <div className=\"Group\">\n        <h3>Shape</h3>\n        <p>\n          <label htmlFor=\"roll\">Roll : </label>\n          <input type=\"number\" id=\"roll\" name=\"roll\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.roll}\n            onChange={e => this.handleRollChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"pitch\">Pitch : </label>\n          <input type=\"number\" id=\"pitch\" name=\"pitch\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.pitch}\n            onChange={e => this.handlePitchChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"yaw\">Yaw : </label>\n          <input type=\"number\" id=\"yaw\" name=\"yaw\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.yaw}\n            onChange={e => this.handleYawChange(shape, e.target.value)} />\n        </p>\n        <h3>File</h3>\n        <p>\n          <button id=\"resetShape\" name=\"resetShape\"\n            onClick={() => this.props.onShapeReset()}>Reset</button>\n          <button id=\"showcaseShape\" name=\"showcaseShape\"\n            onClick={() => this.props.onShapeShowcase()}>Showcase</button>\n        </p>\n        <p>\n          <button id=\"importShape\" name=\"importShape\"\n            onClick={() => this.props.onShapeImport()}>Import</button>\n          <button id=\"exportShape\" name=\"exportShape\"\n            onClick={() => this.props.onShapeExport(shape)}>Export</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderPrismParams(shape, prism) {\n    return (\n      <div className=\"Group\">\n        <h3>Prism</h3>\n        <p>\n          <label htmlFor=\"colorMask\">Mask : </label>\n          <input type=\"number\" id=\"colorMask\" name=\"colorMask\" min=\"0\" max={COLOR_MASK_COUNT - 1}\n            step=\"1\" value={prism.colorMask}\n            onChange={e => this.handleColorMaskChange(shape, prism, e.target.value)} />\n        </p>\n        <div>\n          <label htmlFor=\"backgroundColor\">Background : </label>\n          <ColorPicker id=\"backgroundColor\" name=\"backgroundColor\" color={prism.backgroundColor}\n            onChange={color => this.handleBackgroundColorChange(shape, prism, color)} />\n        </div>\n        <div>\n          <label htmlFor=\"foregroundColor\">Foreground : </label>\n          <ColorPicker id=\"foregroundColor\" name=\"foregroundColor\" color={prism.foregroundColor}\n            onChange={color => this.handleForegroundColorChange(shape, prism, color)} />\n        </div>\n        <p>\n          <button id=\"swapColors\" name=\"swapColors\"\n            onClick={() => this.handleSwapColors(shape, prism)}>Swap</button>\n        </p>\n        <p>\n          <button id=\"deletePrism\" name=\"deletePrism\" disabled={shape.prisms.length <= 1}\n            onClick={() => this.handleDeletePrism(shape, prism)}>Delete</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderParams() {\n    if (this.props.activePrism) {\n      return this.renderPrismParams(this.props.shape, this.props.activePrism);\n    } else {\n      return this.renderShapeParams(this.props.shape);\n    }\n  }\n\n  renderHistory() {\n    return (\n      <div className=\"Group\">\n        <h3>History</h3>\n        <button id=\"undoHistory\" name=\"undoHistory\" disabled={this.props.historyIndex <= 0}\n            onClick={() => this.props.onHistoryChange(this.props.historyIndex - 1)}>Undo</button>\n        <button id=\"redoHistory\" name=\"redoHistory\" disabled={this.props.historyIndex >= this.props.historyEntries.length - 1}\n            onClick={() => this.props.onHistoryChange(this.props.historyIndex + 1)}>Redo</button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Toolbar\">\n        {this.renderHistory()}\n        {this.renderParams()}\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import { vec3, quat } from 'gl-matrix';\n\nfunction createTransform(position, orientation) {\n  return {\n    position: position,\n    orientation: orientation\n  };\n}\n\nfunction rotatedTransform(transform, pivot, axis, angle) {\n  const rotation = quat.setAxisAngle(quat.create(), axis, angle);\n  const position = vec3.sub(vec3.create(), transform.position, pivot);\n  vec3.transformQuat(position, position, rotation);\n  vec3.add(position, position, pivot);\n  const orientation = quat.mul(rotation, rotation, transform.orientation);\n  quat.normalize(orientation, orientation);\n  return createTransform(position, orientation);\n}\n\nfunction multiplyTransforms(transform1, transform2) {\n  const position = vec3.transformQuat(vec3.create(), transform2.position, transform1.orientation);\n  vec3.add(position, position, transform1.position);\n  const orientation = quat.mul(quat.create(), transform1.orientation, transform2.orientation);\n  quat.normalize(orientation, orientation);\n  return createTransform(position, orientation);\n}\n\nexport { createTransform, rotatedTransform, multiplyTransforms };\n","import { vec3, quat } from 'gl-matrix';\nimport { intersectTriangles, collideConvexHulls } from './Collision';\nimport { createTransform, rotatedTransform, multiplyTransforms } from './Transform';\n\nconst PRISM_HEIGHT = 1.0;\nconst PRISM_HALF_HEIGHT = 0.5 * PRISM_HEIGHT;\nconst PRISM_BASE = 2.0 * PRISM_HEIGHT;\nconst PRISM_HALF_BASE = 0.5 * PRISM_BASE;\nconst PRISM_SIDE = Math.sqrt(PRISM_BASE);\nconst PRISM_HALF_SIDE = 0.5 * PRISM_SIDE;\nconst PRISM_DISTANCE = 0.5 * PRISM_BASE;\nconst PRISM_HALF_DISTANCE = 0.5 * PRISM_DISTANCE;\n\n// Prism geometry\n//     2\n//     /\\\n//    /| \\\n//   / |  \\\n// 0/  /\\  \\4\n//  | /3 \\ |\n//  |/    \\|\n//  /______\\\n// 1        5\nconst PRISM_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE)\n];\nconst PRISM_POLYGON_INDICES = [\n  [ 0, 1, 2, 3 ], // left slope\n  [ 2, 3, 5, 4 ], // right slope\n  [ 1, 0, 4, 5 ], // bottom\n  [ 0, 2, 4 ], // back\n  [ 5, 3, 1 ] // front\n];\nconst PRISM_TRIANGLE_INDICES = [\n  0, 1, 2,  2, 1, 3, // left slope\n  2, 3, 4,  4, 3, 5, // right slope\n  4, 5, 0,  0, 5, 1, // bottom\n  0, 2, 4, // back\n  5, 3, 1 // front\n];\nconst PRISM_POLYGON_NORMALS = PRISM_POLYGON_INDICES.map(indices => {\n  const p0 = PRISM_VERTICES[indices[0]];\n  const p1 = PRISM_VERTICES[indices[1]];\n  const p2 = PRISM_VERTICES[indices[2]];\n  const normal = vec3.sub(vec3.create(), p1, p0);\n  vec3.cross(normal, normal, vec3.sub(vec3.create(), p2, p0));\n  return vec3.normalize(normal, normal);\n});\n\nconst PRISM_LEFT_SLOPE_PIVOT_POINT = vec3.fromValues(-PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_RIGHT_SLOPE_PIVOT_POINT = vec3.fromValues(PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_SIDE_PIVOT_Y = -PRISM_HALF_HEIGHT / 6;\nconst PRISM_LEFT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), 0.25 * Math.PI);\nconst PRISM_RIGHT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), -0.25 * Math.PI);\nconst PRISM_LEFT_TRANSFORM = createTransform(vec3.fromValues(-PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), -180, 0, 0));\nconst PRISM_RIGHT_TRANSFORM = createTransform(vec3.fromValues(PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), 180, 0, 0));\nconst PRISM_JUNCTIONS = [\n  {\n    swapColors: true,\n    pivot: PRISM_LEFT_SLOPE_PIVOT_POINT,\n    normal: PRISM_LEFT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_LEFT_TRANSFORM, // left 0\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, 0.5 * Math.PI), // left 1\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, Math.PI), // left 2\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, -0.5 * Math.PI) // left 3\n    ]\n  },\n  {\n    swapColors: true,\n    pivot: PRISM_RIGHT_SLOPE_PIVOT_POINT,\n    normal: PRISM_RIGHT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_RIGHT_TRANSFORM, // right 0\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, -0.5 * Math.PI), // right 1\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, Math.PI), // right 2\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, 0.5 * Math.PI) // right 3\n    ]\n  },\n  {\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, 1),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, PRISM_SIDE), quat.create()) // front\n    ]\n  },\n  {\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, -PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, -1),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, -PRISM_SIDE), quat.create()) // back\n    ]\n  },\n  {\n    swapColors: false,\n    pivot: vec3.fromValues(0, -PRISM_HALF_HEIGHT, 0),\n    normal: vec3.fromValues(0, -1, 0),\n    transforms: [\n      createTransform(vec3.fromValues(0, -PRISM_HEIGHT, 0),\n          quat.fromEuler(quat.create(), 180, 0, 0)) // bottom\n    ]\n  }\n];\n\nclass Prism {\n  constructor() {\n    this.id = 0;\n    this.colorMask = 0;\n    this.backgroundColor = \"#000\";\n    this.foregroundColor = \"#fff\";\n    this.position = vec3.create();\n    this.orientation = quat.create();\n    this.worldPosition = vec3.create();\n    this.worldOrientation = quat.create();\n    this.vertices = PRISM_VERTICES.map(vertex => vec3.clone(vertex));\n    this.polygonNormals = PRISM_POLYGON_NORMALS.map(normal => vec3.clone(normal));\n  }\n\n  applyTransform(shapeOrientation) {\n    vec3.transformQuat(this.worldPosition, this.position, shapeOrientation);\n    quat.multiply(this.worldOrientation, shapeOrientation, this.orientation);\n    for (let i = 0; i < this.vertices.length; i++) {\n      const vertex = this.vertices[i];\n      vec3.transformQuat(vertex, PRISM_VERTICES[i], this.worldOrientation);\n      vec3.add(vertex, vertex, this.worldPosition);\n    }\n    for (let i = 0; i < this.polygonNormals.length; i++) {\n      vec3.transformQuat(this.polygonNormals[i], PRISM_POLYGON_NORMALS[i], this.worldOrientation);\n    }\n  }\n\n  intersect(ray) {\n    return intersectTriangles(ray, this.vertices, PRISM_TRIANGLE_INDICES);\n  }\n\n  collides(prism) {\n    return collideConvexHulls(this.vertices, this.polygonNormals,\n        prism.vertices, prism.polygonNormals);\n  }\n\n  getJunctions() {\n    const junctions = [];\n    const transform = createTransform(this.position, this.orientation);\n    for (let i = 0; i < PRISM_JUNCTIONS.length; i++) {\n      const junction = PRISM_JUNCTIONS[i];\n      const junctionPrisms = [];\n      for (let j = 0; j < junction.transforms.length; j++) {\n        const junctionTransform = multiplyTransforms(transform, junction.transforms[j]);\n        const prism = new Prism();\n        prism.colorMask = this.colorMask;\n        prism.backgroundColor = (junction.swapColors) ? this.foregroundColor : this.backgroundColor;\n        prism.foregroundColor = (junction.swapColors) ? this.backgroundColor : this.foregroundColor;\n        vec3.copy(prism.position, junctionTransform.position);\n        quat.copy(prism.orientation, junctionTransform.orientation);\n        junctionPrisms.push(prism);\n      }\n      const pivot = vec3.transformQuat(vec3.create(), junction.pivot, this.orientation);\n      vec3.add(pivot, pivot, this.position);\n      const normal = vec3.transformQuat(vec3.create(), junction.normal, this.orientation);\n      junctions.push({\n        pivot: pivot,\n        normal: normal,\n        prisms: junctionPrisms\n      });\n    }\n    return junctions;\n  }\n\n  toArchive() {\n    return {\n      id: this.id,\n      colorMask: this.colorMask,\n      backgroundColor: this.backgroundColor,\n      foregroundColor: this.foregroundColor,\n      position: this.position,\n      orientation: this.orientation\n    };\n  }\n\n  fromArchive(archive) {\n    this.id = archive.id;\n    this.colorMask = archive.colorMask;\n    this.backgroundColor = archive.backgroundColor;\n    this.foregroundColor = archive.foregroundColor;\n    vec3.copy(this.position, archive.position);\n    quat.copy(this.orientation, archive.orientation);\n  }\n\n  clone() {\n    const prism = new Prism();\n    prism.id = this.id;\n    prism.colorMask = this.colorMask;\n    prism.backgroundColor = this.backgroundColor;\n    prism.foregroundColor = this.foregroundColor;\n    vec3.copy(prism.position, this.position);\n    quat.copy(prism.orientation, this.orientation);\n    vec3.copy(prism.worldPosition, this.worldPosition);\n    quat.copy(prism.worldOrientation, this.worldOrientation);\n    return prism;\n  }\n}\n\nexport default Prism;\n","import { quat, vec3 } from 'gl-matrix';\nimport Prism from './Prism';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst DEFAULT_BACKGROUND_COLOR = \"#1976d2\";\nconst DEFAULT_FOREGROUND_COLOR = \"#d9d9d9\";\n\nclass Shape {\n  constructor() {\n    this.prisms = [];\n    this.lastPrismId = 0;\n    this.roll = 0;\n    this.pitch = 0;\n    this.yaw = 0;\n    this.aabb = {\n      min: vec3.create(),\n      max: vec3.create(),\n      center: vec3.create()\n    };\n  }\n\n  static createInitialShape() {\n    const shape = new Shape();\n    const prism = new Prism();\n    prism.id = ++shape.lastPrismId;\n    prism.backgroundColor = DEFAULT_BACKGROUND_COLOR;\n    prism.foregroundColor = DEFAULT_FOREGROUND_COLOR;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    return shape;\n  }\n\n  getOrientation() {\n    const orientation = quat.create();\n    quat.rotateY(orientation, orientation, this.yaw * DEGREES_TO_RADIANS);\n    quat.rotateX(orientation, orientation, this.roll * DEGREES_TO_RADIANS);\n    quat.rotateZ(orientation, orientation, this.pitch * DEGREES_TO_RADIANS);\n    return orientation;\n  }\n\n  applyTransform() {\n    const orientation = this.getOrientation();\n    vec3.zero(this.aabb.min);\n    vec3.zero(this.aabb.max);\n    for (let i = 0; i < this.prisms.length; i++) {\n      const prism = this.prisms[i];\n      prism.applyTransform(orientation);\n\n      // Compute axis aligned bounding box\n      for (let j = 0; j < prism.vertices.length; j++) {\n        const vertex = prism.vertices[j];\n        if ((i === 0) && (j === 0)) {\n          vec3.copy(this.aabb.min, vertex);\n          vec3.copy(this.aabb.max, vertex);\n        } else {\n          vec3.min(this.aabb.min, this.aabb.min, vertex);\n          vec3.max(this.aabb.max, this.aabb.max, vertex);\n        }\n      }\n    }\n    vec3.add(this.aabb.center, this.aabb.min, this.aabb.max);\n    vec3.scale(this.aabb.center, this.aabb.center, 0.5);\n  }\n\n  translate(translation) {\n    this.prisms.forEach(prism => vec3.add(prism.position, prism.position, translation));\n  }\n\n  rotate(rotation) {\n    this.prisms.forEach(prism => {\n      vec3.transformQuat(prism.position, prism.position, rotation);\n      quat.multiply(prism.orientation, rotation, prism.orientation);\n    });\n  }\n\n  findPrism(id) {\n    for (let i = 0; i < this.prisms.length; i++) {\n      const prism = this.prisms[i];\n      if (prism.id === id) {\n        return prism;\n      }\n    }\n    return null;\n  }\n\n  intersect(ray) {\n    let hitPrism;\n    let hitDistance;\n    for (let i = 0; i < this.prisms.length; i++) {\n      const prism = this.prisms[i];\n      const prismHitDistance = prism.intersect(ray);\n      if (prismHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (prismHitDistance < hitDistance)) {\n          hitPrism = prism;\n          hitDistance = prismHitDistance;\n        }\n      }\n    }\n    if (!hitPrism) {\n      return;\n    }\n    return {\n      hitPrism: hitPrism,\n      hitDistance: hitDistance\n    };\n  }\n\n  getAvailableJunctions(prism) {\n    const orientation = this.getOrientation();\n    let junctions = prism.getJunctions();\n    junctions.forEach(junction => {\n      vec3.transformQuat(junction.pivot, junction.pivot, orientation);\n      vec3.transformQuat(junction.normal, junction.normal, orientation);\n      junction.prisms.forEach(junctionPrism => junctionPrism.applyTransform(orientation));\n      junction.prisms = junction.prisms.filter(junctionPrism => this.prisms.every(shapePrism =>\n          (shapePrism === prism) || !shapePrism.collides(junctionPrism)));\n    });\n    return junctions.filter(junction => junction.prisms.length > 0);\n  }\n\n  toArchive() {\n    return {\n      prisms: this.prisms.map(prism => prism.toArchive()),\n      lastPrismId: this.lastPrismId,\n      roll: this.roll,\n      pitch: this.pitch,\n      yaw: this.yaw\n    };\n  }\n\n  fromArchive(archive) {\n    this.prisms = archive.prisms.map(prismArchive => {\n      const prism = new Prism();\n      prism.fromArchive(prismArchive);\n      return prism;\n    });\n    this.lastPrismId = archive.lastPrismId;\n    this.roll = archive.roll;\n    this.pitch = archive.pitch;\n    this.yaw = archive.yaw;\n  }\n\n  clone() {\n    const shape = new Shape();\n    for (let i = 0; i < this.prisms.length; i++) {\n      shape.prisms.push(this.prisms[i].clone());\n    }\n    shape.lastPrismId = this.lastPrismId;\n    shape.roll = this.roll;\n    shape.pitch = this.pitch;\n    shape.yaw = this.yaw;\n    vec3.copy(shape.aabb.min, this.aabb.min);\n    vec3.copy(shape.aabb.max, this.aabb.max);\n    vec3.copy(shape.aabb.center, this.aabb.center);\n    return shape;\n  }\n}\n\nexport default Shape;\n","import Shape from \"./Shape\";\nimport Prism from \"./Prism\";\nimport { vec3, quat } from 'gl-matrix';\nimport { createTransform, rotatedTransform } from './Transform';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nclass ShapeFolder {\n  constructor() {\n    this.pieceCount = 0;\n    this.shape = new Shape();\n  }\n\n  static build(name, figures) {\n    const definition = figures.definitions.find(definition => definition.name === name);\n    if (!definition) {\n      return;\n    }\n    const skin = ShapeFolder.compileSkin(definition.skin, figures);\n    if (!skin) {\n      return;\n    }\n    const shapeFolder = new ShapeFolder();\n    for (let i = 0; i < definition.pieces; i++) {\n      const colors = skin.colors[i % skin.colors.length];\n      shapeFolder.addPrism(skin.mask, colors[0], colors[1]);\n    }\n    if (!shapeFolder.fold(definition.notation)) {\n      return;\n    }\n    if (!shapeFolder.applyRotations(definition.rotations)) {\n      return;\n    }\n    const shape = shapeFolder.shape;\n    shape.applyTransform();\n    shape.translate(vec3.negate(vec3.create(), shape.aabb.center));\n    shape.applyTransform();\n    return shape;\n  }\n\n  static compileSkin(name, figures) {\n    const startPos = (name.charAt(0) === \"~\" ? 1 : 0);\n    const delimPos = name.lastIndexOf(\":\");\n    const skinName = name.substring(startPos, (delimPos !== -1 ? delimPos : name.length));\n    const skinDefinition = figures.skins.definitions.find(definition => definition.name === skinName);\n    if (!skinDefinition) {\n      return;\n    }\n    const skinPattern = figures.skins.patterns.find(pattern => pattern.key === skinDefinition.pattern);\n    if (!skinPattern) {\n      return;\n    }\n\n    const mask = (delimPos === -1 ? skinDefinition.mask : parseInt(name.substring(delimPos + 1)));\n\n    const shapeColors = [];\n    for (const colorNumbers of skinPattern.value) {\n      const prismColors = [];\n      for (const colorNumber of colorNumbers) {\n        if ((colorNumber < 1) || (colorNumber > skinDefinition.colors.length)) {\n          return;\n        }\n        const colorName = skinDefinition.colors[colorNumber - 1];\n        const color = figures.skins.colors.find(color => color.key === colorName);\n        if (!color) {\n          return;\n        }\n        prismColors.push(color.value);\n      }\n      shapeColors.push(prismColors);\n    }\n    const revertColors = (startPos > 0);\n    if (revertColors) {\n      shapeColors.reverse();\n    }\n\n    return {\n      mask: mask,\n      colors: shapeColors\n    };\n  }\n\n  addPrism(colorMask, backgroundColor, foregroundColor) {\n    let prism;\n    if (this.shape.prisms.length > 0) {\n      const leftPrism = this.shape.prisms[this.shape.prisms.length - 1];\n      prism = leftPrism.getJunctions()[1].prisms[0]; // unturned prism of right junction\n    } else {\n      prism = new Prism();\n    }\n    prism.id = ++this.shape.lastPrismId;\n    prism.colorMask = colorMask;\n    prism.backgroundColor = backgroundColor;\n    prism.foregroundColor = foregroundColor;\n    this.shape.prisms.push(prism);\n    this.pieceCount++;\n  }\n\n  /**\n   * Fold the shape using a notation in the following format:\n   * 1. Number of the downward-facing prism (from the left): 1 to (pieceCount+1)/2\n   * 2. Left or right sloping side of the prism: L or R\n   * 3. Position of the twist towards you: 1, 2 or 3\n   * Example: 1R2-2R2-3L2-4L2-6L2-6R2-7R2-9L2-10L2-10R2\n   * @return true if no errors, otherwise false.\n   */\n  fold(notation) {\n    const tokens = notation.split(\"-\");\n    for (let token of tokens) {\n      let pos;\n      let left;\n      if ((pos = token.indexOf(\"L\")) !== -1) {\n        left = true;\n      } else if ((pos = token.indexOf(\"R\")) !== -1) {\n        left = false;\n      } else {\n        return false;\n      }\n      const downwardPrismNumberStr = token.substring(0, pos);\n      if (!downwardPrismNumberStr) {\n        return false;\n      }\n      const downwardPrismNumber = parseInt(downwardPrismNumberStr, 10);\n      const index = (downwardPrismNumber - 1) * 2;\n      if ((index < 0) || (index >= this.pieceCount)) {\n        return false;\n      }\n      const twistsStr = token.substring(pos + 1);\n      if (!twistsStr) {\n        return false;\n      }\n      const twists = parseInt(twistsStr, 10);\n      if (!twists) {\n        continue; // no twist\n      }\n      if ((twists < 1) || (twists > 3)) {\n        return false;\n      }\n\n      if (twists < 3) {\n        for (let i = 0; i < twists; i++) {\n          if (!this.twist(index, left, left)) {\n            return false;\n          }\n        }\n      } else {\n        if (!this.twist(index, left, !left)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Twist left or right adjacent prisms around a downward-facing prism\n   * 90 degrees counter-clockwise or clockwise.\n   * @param index prism index in range [0..pieceCount).\n   * @param left twist left (true) or right (false) adjacent prisms.\n   * @param ccw twist counter-clockwise (true) or clockwise (false).\n   * @return true if prism index is in range, otherwise false.\n   */\n  twist(index, left, ccw) {\n    if ((index < 0) || (index >= this.pieceCount)) {\n      return false;\n    }\n    const prism = this.shape.prisms[index];\n    const junctions = prism.getJunctions();\n    const junction = (left ? junctions[0] : junctions[1]);\n    const twistAngle = (ccw ? 1 : -1) * Math.PI / 2;\n    if (left) {\n      for (let i = index - 1; i >= 0; i--) {\n        this.twistPrism(i, junction.pivot, junction.normal, twistAngle);\n      }\n    } else {\n      for (let i = index + 1; i < this.pieceCount; i++) {\n        this.twistPrism(i, junction.pivot, junction.normal, twistAngle);\n      }\n    }\n    return true;\n  }\n\n  twistPrism(index, pivot, axis, angle) {\n    const prism = this.shape.prisms[index];\n    const prismTransform = createTransform(prism.position, prism.orientation);\n    const transform = rotatedTransform(prismTransform, pivot, axis, angle);\n    vec3.copy(prism.position, transform.position);\n    quat.copy(prism.orientation, transform.orientation);\n  }\n\n  applyRotations(rotations) {\n    if (rotations.length === 0) {\n      return true;\n    }\n    const shapeRotation = quat.create();\n    const rotation = quat.create();\n    const axis = vec3.create();\n    for (const aa of rotations) {\n      if (aa.length === 4) {\n        vec3.set(axis, aa[0], aa[2], -aa[1]);\n        vec3.normalize(axis, axis);\n        quat.setAxisAngle(rotation, axis, aa[3] * DEGREES_TO_RADIANS);\n        quat.multiply(shapeRotation, rotation, shapeRotation);\n      } else {\n        return false;\n      }\n    }\n    this.shape.rotate(shapeRotation);\n    return true;\n  }\n}\n\nexport default ShapeFolder;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Viewport from './Viewport';\nimport Toolbar from './Toolbar';\nimport Shape from './Shape';\nimport ShapeFolder from './ShapeFolder';\n\nconst ARCHIVE_VERSION = 1;\nconst ARCHIVE_EXTENSION = \".twy\";\nconst HISTORY_LENGTH_MAX = 30;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const shape = Shape.createInitialShape();\n\n    this.state = {\n      shape: shape,\n      activePrism: null,\n      historyEntries: [],\n      historyIndex: -1\n    };\n    this.figures = null;\n    this.figureRandomIndices = null;\n    this.figureIndex = -1;\n\n    this.addHistoryEntry(this.state, shape);\n  }\n\n  addHistoryEntry(state, shape) {\n    let historyLength = state.historyIndex + 1;\n    const historyStart = (historyLength >= HISTORY_LENGTH_MAX ?\n        historyLength - HISTORY_LENGTH_MAX + 1 : 0);\n    historyLength = Math.min(historyLength, HISTORY_LENGTH_MAX - 1);\n    state.historyEntries = state.historyEntries.splice(historyStart, historyLength);\n    state.historyEntries.push({\n      shape: shape,\n      activePrism: this.state.activePrism\n    });\n    state.historyIndex = state.historyEntries.length - 1;\n  }\n\n  showFigure(name) {\n    const shape = ShapeFolder.build(name, this.figures);\n    if (shape) {\n      this.handleShapeChange(shape, true);\n    }\n  }\n\n  static shapeToArchive(shape) {\n    return JSON.stringify({\n      version: ARCHIVE_VERSION,\n      shape: shape.toArchive()\n    });\n  }\n\n  static archiveToShape(text) {\n    const archive = JSON.parse(text);\n    if (archive.version !== 1) {\n      alert(\"Unsupported version: \" + archive.version);\n      return;\n    }\n    const shape = new Shape();\n    shape.fromArchive(archive.shape);\n    shape.applyTransform();\n    return shape;\n  }\n\n  handleShapeChange(shape, reset = false) {\n    const nextState = {\n      shape: shape,\n      historyEntries: this.state.historyEntries,\n      historyIndex: this.state.historyIndex\n    };\n    if (reset) {\n      nextState.activePrism = null;\n    } else if (this.state.activePrism) {\n      nextState.activePrism = shape.findPrism(this.state.activePrism.id);\n    }\n    this.addHistoryEntry(nextState, shape);\n    this.setState(nextState);\n  }\n\n  handleActivePrismChange(activePrism) {\n    this.setState({ activePrism: activePrism });\n  }\n\n  handleHistoryChange(index) {\n    if ((index < 0) || (index >= this.state.historyEntries.length)) {\n      return;\n    }\n    const historyEntry = this.state.historyEntries[index];\n    const nextState = {\n      shape: historyEntry.shape,\n      activePrism: historyEntry.activePrism,\n      historyIndex: index\n    };\n    this.setState(nextState);\n  }\n\n  handleShapeReset() {\n    this.handleShapeChange(Shape.createInitialShape(), true);\n  }\n\n  handleShapeShowcase() {\n    if (!this.figures) {\n      fetch(\"res/figures.rsf\")\n        .then(response => response.json())\n        .then(data => {\n          this.figures = data;\n          this.figureRandomIndices =\n            [...Array(this.figures.definitions.length).keys()]\n            .map(a => ({sort: Math.random(), value: a}))\n            .sort((a, b) => a.sort - b.sort)\n            .map(a => a.value);\n          this.figureIndex = -1;\n          this.handleShapeShowcase();\n        });\n    } else {\n      this.figureIndex = (this.figureIndex + 1) % this.figureRandomIndices.length;\n      const figureName = this.figures.definitions[this.figureRandomIndices[this.figureIndex]].name;\n      this.showFigure(figureName);\n    }\n  }\n\n  handleShapeImport() {\n    const element = document.createElement(\"input\");\n    element.setAttribute(\"type\", \"file\");\n    element.setAttribute(\"accept\", ARCHIVE_EXTENSION);\n    element.addEventListener(\"change\", () => {\n      if (!element.files.length) {\n        return;\n      }\n      const file = element.files[0];\n      const reader = new FileReader();\n      reader.onload = ((e) => {\n        const shape = App.archiveToShape(e.target.result);\n        if (shape) {\n          this.handleShapeChange(shape, true);\n        }\n      });\n      reader.readAsText(file);\n    });\n    element.click();\n  }\n\n  handleShapeExport(shape) {\n    const name = prompt(\"Enter shape name: \");\n    if (!name) {\n      return;\n    }\n    const element = document.createElement(\"a\");\n    const content = App.shapeToArchive(shape);\n    const file = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n    element.href = URL.createObjectURL(file);\n    element.download = name + ARCHIVE_EXTENSION;\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Viewport shape={this.state.shape} activePrism={this.state.activePrism}\n          onShapeChange={(shape) => this.handleShapeChange(shape)}\n          onActivePrismChange={(activePrism) => this.handleActivePrismChange(activePrism)} />\n        <Toolbar shape={this.state.shape} activePrism={this.state.activePrism}\n          historyEntries={this.state.historyEntries} historyIndex={this.state.historyIndex}\n          onShapeChange={(shape) => this.handleShapeChange(shape)}\n          onHistoryChange={(index) => this.handleHistoryChange(index)}\n          onShapeReset={() => this.handleShapeReset()}\n          onShapeShowcase={() => this.handleShapeShowcase()}\n          onShapeImport={() => this.handleShapeImport()}\n          onShapeExport={(shape) => this.handleShapeExport(shape)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}