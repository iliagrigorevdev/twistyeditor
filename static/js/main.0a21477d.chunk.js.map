{"version":3,"sources":["PlaceableView.js","ShapeView.js","Collision.js","Transform.js","Placeable.js","Prism.js","Simulation.js","Viewport.js","ColorPicker.js","Section.js","Toolbar.js","Shape.js","ShapeFolder.js","App.js","serviceWorker.js","index.js"],"names":["PlaceableView","placeable","renderable","this","ShapeView","shape","showSections","viewport","placeableViews","Map","prisms","prism","set","id","createPrismView","sections","section","createSectionView","syncTransform","createPrismRenderable","colorMask","backgroundColor","foregroundColor","createSectionRenderable","forEach","placeableView","destroyRenderable","get","scene","addEntity","setRenderableTransform","worldPosition","worldOrientation","auxVec1","vec3","create","auxVec2","auxVec3","auxVec4","intersectTriangle","ray","p1","p2","p3","edge1","sub","edge2","pvec","cross","direction","det","dot","tvec","origin","u","qvec","v","intersectSphere","center","radius","rayorig","squaredRadius","squaredRayLength","squaredLength","a","b","d","sqrtD","Math","sqrt","t","projectVerticesOntoAxis","axis","vertices","dmin","dmax","i","length","overlapProjectionsOntoAxis","vertices1","vertices2","eps","rayToPointDistance","point","vector","projection","scale","distance","createTransform","position","orientation","quat","rotatedTransform","transform","pivot","angle","rotation","setAxisAngle","transformQuat","add","mul","normalize","multiplyTransforms","out","t1","t2","inverseTransform","invert","negate","Placeable","parentOrientation","multiply","translation","copy","JunctionFace","Object","freeze","LEFT","RIGHT","FRONT","BACK","BOTTOM","PRISM_SIDE","PRISM_HALF_SIDE","PRISM_VERTICES","fromValues","PRISM_TRIANGLE_INDICES","PRISM_POLYGON_NORMALS","map","indices","p0","normal","PRISM_LEFT_SLOPE_PIVOT_POINT","PRISM_RIGHT_SLOPE_PIVOT_POINT","PRISM_LEFT_SLOPE_NORMAL","rotateZ","PI","PRISM_RIGHT_SLOPE_NORMAL","PRISM_LEFT_TRANSFORM","fromEuler","PRISM_RIGHT_TRANSFORM","PRISM_JUNCTIONS","face","swapColors","tangent","transforms","coincideVertices","v1","v2","squaredDistance","coincideTriangleVertices","i11","i12","i13","i21","i22","i23","coincideRectangleVertices","i14","i24","coincideSquareVertices","Prism","vertex","clone","polygonNormals","hitDistance","triangleHitDistance","undefined","intersectTriangles","polygonNormals1","polygonNormals2","every","polygonNormal1","polygonNormal2","junctions","junction","junctionPrisms","j","junctionTransform","push","faceName","coincidingFace","coincideFace","baseFace","targetFace","archive","RADIANS_TO_DEGREES","PRISM_MARGIN_DIAG","cos","PRISM_COLLISION_VERTICES","PRISM_MASS","PRISM_INERTIA_FACTOR","PRISM_INERTIA_X","PRISM_INERTIA_Y","PRISM_INERTIA_Z","convertVector","Ammo","btVector3","convertTransform","btTransform","quaternion","btQuaternion","convertQuaternion","Simulation","then","init","addGroundBody","addShapeBody","shapeParts","prismIds","prismWorldTransforms","prismLocalTransforms","partBtTransform","partTransform","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","dynamicsWorld","btDiscreteDynamicsWorld","setGravity","prismCollisionShape","btConvexHullShape","setMargin","addPoint","recalcLocalAabb","prismMassOffset","prismMassOffsetInversed","collisionShape","mass","inertia","friction","restitution","group","mask","motionState","btDefaultMotionState","constructionInfo","btRigidBodyConstructionInfo","set_m_friction","set_m_restitution","rigidBody","btRigidBody","setActivationState","addRigidBody","groundShape","btStaticPlaneShape","parts","discoverParts","console","log","addShapePartBody","part","partOrigin","tensor","mat3","mat1","mat2","basis","fromQuat","prismOrigin","px","py","pz","multiplyScalar","principalRotation","fromMat3","mat","threshold","maxSteps","rot","step","p","q","r","max","abs","sin","mpq","theta","theta2","mrp","mrq","diagonalizeMatrix","childTransform","btCompoundShape","prismTransform","addChildShape","GROUP_GROUND","worldTransform","localTransform","partBody","prismCount","toFixed","principalAxis","principalAngle","getAxisAngle","prismOffset","shapePart","getMotionState","getWorldTransform","partPosition","getOrigin","partOrientation","getRotation","x","y","z","w","deltaTime","stepSimulation","updatePrismTransforms","DEGREES_TO_RADIANS","ELEVATION_LIMIT","DEFAULT_ELEVATION","DEFAULT_HEADING","iblUrl","getPrismTextureUrl","maskIndex","colorToFloat3","color","rgb","tinycolor","toRgb","g","colorToFloat4","Viewport","props","auxMat4","mat4","assets","window","Filament","prevProps","mode","handleModeChange","handleShapeChange","refreshShapeView","AppMode","SIMULATION","simulation","EDIT","engine","shapeView","destroy","addToScene","activePlaceableView","activePlaceable","findPlaceable","activePlaceableId","selectPlaceable","elevation","heading","availableJunctions","focalLengthMin","focalLengthMax","cameraZoom","targetZoom","lastZoom","focalPoint","targetPosition","lastPosition","highlightColor","animationTimer","highlightTimer","pressing","dragging","pickedPlaceable","pickedJunction","activeJunctionPrism","pointerX","pointerY","canvas","filament","Engine","camera","createCamera","EntityManager","createScene","indirectLight","createIblFromKtx","setIntensity","setIndirectLight","prismMaterial","createMaterial","prismMesh","loadFilamesh","ghostMaterial","ghostRenderable","createRenderable","createGhostMaterial","highcolMaterial","knobMesh","knobRenderables","sectionMesh","sectionRenderables","prismTextures","createTextureFromPng","prismTextureSampler","TextureSampler","MinFilter","LINEAR_MIPMAP_LINEAR","MagFilter","LINEAR","WrapMode","CLAMP_TO_EDGE","ground","createGround","swapChain","createSwapChain","renderer","createRenderer","view","createView","setCamera","setScene","setClearOptions","clearColor","clear","resize","renderFrame","bind","addEventListener","requestAnimationFrame","e","handlePointerDown","handlePointerUp","handlePointerMove","halfSize","gridSize","vb","VertexBuffer","Builder","vertexCount","bufferCount","attribute","VertexAttribute","POSITION","VertexBuffer$AttributeType","FLOAT3","UV0","FLOAT2","build","setBufferAt","Float32Array","reps","ib","IndexBuffer","indexCount","bufferType","IndexBuffer$IndexType","USHORT","setBuffer","Uint16Array","material","texture","sampler","REPEAT","materialInstance","getDefaultInstance","setTextureParameter","entity","RenderableManager","boundingBox","halfExtent","geometry","RenderableManager$PrimitiveType","TRIANGLES","mesh","getBoundingBox","vertexBuffer","indexBuffer","getRenderableMaterial","destroyMaterialInstance","destroyEntity","getRenderableManager","createInstance","setColor4Parameter","RgbaType","sRGB","setColor3Parameter","validColorMask","RgbType","ghost","createHighcolMaterial","renderableManager","renderableInstance","getInstance","getAxisAlignedBoundingBox","delete","transformManager","getTransformManager","transformInstance","fromRotationTranslation","setTransform","getMaterialInstanceAt","eye","rotateX","rotateY","lookAt","fl","focalLength","fovY","atan","aspect","width","height","setProjectionFov","Camera$Fov","VERTICAL","timestamp","lastTime","min","k","lerp","updateCamera","highlightIntensity","HIGHLIGHT_OPAQUE_BLEND","setHighlightIntensity","findPlaceableView","render","dpr","devicePixelRatio","innerWidth","innerHeight","setViewport","pointerType","isPrimary","isPrimaryPointer","junctionIntersection","getCastingRay","clientX","clientY","placeableIntersection","intersect","intersectJunctions","hitJunction","activatePrismSection","activatePrismKnob","hitPlaceable","addSection","addPrism","hideGhostPrism","showPrismKnobs","showPrismSections","dx","dy","nearestJunctionPrism","pickNearestJunctionPrism","showGhostPrism","POINTER_DRAG_THRESHOLD","autoFovY","viewRotation","fromMat4","getViewMatrix","invAspect","aabb","transformMat3","widthFitFovY","heightFitFovY","autoZoom","tan","rayVec","vec4","transformMat4","Camera","inverseProjection","getProjectionMatrix","getModelMatrix","getPosition","junctionHitDistance","rayDistance","junctionPrism","prismRayDistance","animate","notify","updateHighlightColor","getAvailableJunctions","hidePrismKnobs","hidePrismSections","computeAutoZoom","onActivePlaceableChange","lastPlaceableId","applyTransform","onShapeChange","placeableColor","colorStr","readability","intensity","remove","createKnobRenderable","knobRenderable","setGhostColor","activeJunction","junctionIndex","indexOf","index","sectionRenderable","className","ref","Component","ColorPicker","state","displayColorPicker","setState","onChange","hex","handleHideColorPicker","styles","reactCSS","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","style","onClick","handleToggleColorPicker","handleColorChange","Section","basePrismId","targetPrismId","cylinder","A","dp","B","D","cp1","cp2","cd1","cd2","d1","d2","intersectCylinder","centered","cylinderPosition","createCylinder","Toolbar","prevShape","shapeModifier","prevPrism","prismModifier","modifyShape","roll","parseFloat","pitch","yaw","modifyPrism","parseInt","filter","prevSection","htmlFor","type","name","value","handleRollChange","target","handlePitchChange","handleYawChange","onShapeReset","onShapeShowcase","onShapeImport","onShapeExport","disabled","onSimulationStart","onSimulationStop","COLOR_MASK_COUNT","handleColorMaskChange","handleBackgroundColorChange","handleForegroundColorChange","handleSwapColors","handleDeletePrism","handleDeleteSection","renderPrismParams","renderSectionParams","renderShapeParams","historyIndex","onHistoryChange","historyEntries","renderHistory","renderParams","Shape","getOrientation","zero","inverseOrientation","translate","rotate","prismHitDistance","sectionHitDistance","getJunctions","shapePrism","collides","some","binormal","suitableParts","partPrism","coincidence","coincide","suitablePart","concat","apply","includes","toArchive","version","prismArchive","fromArchive","lastPrismId","sectionArchive","ShapeFolder","pieceCount","notation","tokens","split","token","pos","downwardPrismNumberStr","substring","twistsStr","twists","twist","ccw","twistAngle","twistPrism","rotations","shapeRotation","aa","figures","definition","definitions","find","skin","compileSkin","shapeFolder","pieces","colors","fold","applyRotations","startPos","charAt","delimPos","lastIndexOf","skinName","skinDefinition","skins","skinPattern","patterns","pattern","key","shapeColors","colorNumbers","prismColors","colorNumber","colorName","reverse","App","createInitialShape","figureRandomIndices","figureIndex","addHistoryEntry","historyLength","historyStart","HISTORY_LENGTH_MAX","splice","reset","nextState","historyEntry","figureName","showFigure","fetch","response","json","data","Array","keys","sort","random","handleShapeShowcase","element","document","createElement","setAttribute","files","file","reader","FileReader","onload","archiveToShape","result","readAsText","click","prompt","content","shapeToArchive","Blob","href","URL","createObjectURL","download","body","appendChild","handleActivePlaceableChange","handleHistoryChange","handleShapeReset","handleShapeImport","handleShapeExport","handleSimulationStart","handleSimulationStop","JSON","stringify","text","parse","alert","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0a21477d.chunk.js","sourcesContent":["class PlaceableView {\n  constructor(placeable, renderable) {\n    this.placeable = placeable;\n    this.renderable = renderable;\n  }\n}\n\nexport default PlaceableView;\n","import PlaceableView from './PlaceableView';\n\nclass ShapeView {\n  constructor(shape, showSections, viewport) {\n    this.shape = shape;\n\n    this.placeableViews = new Map();\n    for (const prism of this.shape.prisms) {\n      this.placeableViews.set(prism.id, this.createPrismView(prism, viewport));\n    }\n    if (showSections) {\n      for (const section of this.shape.sections) {\n        this.placeableViews.set(section.id, this.createSectionView(section, viewport));\n      }\n    }\n\n    this.syncTransform(viewport);\n  }\n\n  createPrismView(prism, viewport) {\n    const renderable = viewport.createPrismRenderable(prism.colorMask,\n        prism.backgroundColor, prism.foregroundColor);\n    return new PlaceableView(prism, renderable);\n  }\n\n  createSectionView(section, viewport) {\n    const renderable = viewport.createSectionRenderable();\n    return new PlaceableView(section, renderable);\n  }\n\n  destroy(viewport) {\n    this.placeableViews.forEach(placeableView => viewport.destroyRenderable(placeableView.renderable));\n    this.placeableViews = null;\n  }\n\n  findPlaceableView(id) {\n    return this.placeableViews.get(id);\n  }\n\n  addToScene(viewport) {\n    this.placeableViews.forEach(placeableView => viewport.scene.addEntity(placeableView.renderable));\n  }\n\n  syncTransform(viewport) {\n    this.placeableViews.forEach(placeableView =>\n        viewport.setRenderableTransform(placeableView.renderable, placeableView.placeable.worldPosition,\n            placeableView.placeable.worldOrientation));\n  }\n}\n\nexport default ShapeView;\n","import { vec3 } from 'gl-matrix';\n\nconst auxVec1 = vec3.create();\nconst auxVec2 = vec3.create();\nconst auxVec3 = vec3.create();\nconst auxVec4 = vec3.create();\n\nfunction intersectTriangles(ray, vertices, indices) {\n  let hitDistance;\n  for (let i = 0; i < indices.length; i += 3) {\n    const triangleHitDistance = intersectTriangle(ray,\n        vertices[indices[i]], vertices[indices[i + 1]], vertices[indices[i + 2]]);\n    if (triangleHitDistance !== undefined) {\n      if ((hitDistance === undefined) || (triangleHitDistance < hitDistance)) {\n        hitDistance = triangleHitDistance;\n      }\n    }\n  }\n  return hitDistance;\n}\n\nfunction intersectTriangle(ray, p1, p2, p3) {\n  const edge1 = vec3.sub(auxVec1, p2, p1);\n  const edge2 = vec3.sub(auxVec2, p3, p1);\n  const pvec = vec3.cross(auxVec3, ray.direction, edge2);\n  const det = vec3.dot(edge1, pvec);\n  if (det < 1e-6) {\n    return;\n  }\n  const tvec = vec3.sub(auxVec4, ray.origin, p1);\n  const u = vec3.dot(tvec, pvec);\n  if ((u < 0) || (u > det)) {\n    return;\n  }\n  const qvec = vec3.cross(auxVec4, tvec, edge1);\n  const v = vec3.dot(ray.direction, qvec);\n  if ((v < 0) || (u + v > det)) {\n    return;\n  }\n  return vec3.dot(edge2, qvec) / det;\n}\n\nfunction intersectSphere(ray, center, radius) {\n  const rayorig = vec3.sub(auxVec1, ray.origin, center);\n  const squaredRadius = radius * radius;\n  const squaredRayLength = vec3.squaredLength(rayorig);\n\n  if (squaredRayLength <= squaredRadius) {\n    return 0; // inside hit\n  }\n\n  const a = vec3.dot(ray.direction, ray.direction);\n  const b = 2 * vec3.dot(rayorig, ray.direction);\n  const c = squaredRayLength - squaredRadius;\n  const d = b * b - (4 * a * c);\n  if (d >= 0) {\n    const sqrtD = Math.sqrt(d);\n    let t = (-b - sqrtD) / (2 * a);\n    if (t < 0) {\n      t = (-b + sqrtD) / (2 * a);\n    }\n    return t; // nearest surface hit\n  }\n}\n\n// Cylinder geometry\n//  .-----.\n// '._____.'\n// |       |\n// |   ^ N | H\n// |.--|--.|\n// '._____.' R\n//     P\nfunction createCylinder(position, normal, radius, height, centered = false) {\n  const cylinderPosition = vec3.create();\n  if (centered) {\n    vec3.scale(cylinderPosition, normal, -0.5 * height);\n    vec3.add(cylinderPosition, cylinderPosition, position);\n  } else {\n    vec3.copy(cylinderPosition, position);\n  }\n  return {\n    position: cylinderPosition,\n    normal: vec3.clone(normal),\n    radius: radius,\n    height: height\n  };\n}\n\nfunction intersectCylinder(ray, cylinder) {\n  const a = vec3.sub(auxVec1, ray.direction, vec3.scale(auxVec1, cylinder.normal,\n      vec3.dot(ray.direction, cylinder.normal)));\n  const A = vec3.dot(a, a);\n  if (A < 1e-12) {\n    return;\n  }\n  const dp = vec3.sub(auxVec2, ray.origin, cylinder.position);\n  const b = vec3.sub(auxVec3, dp, vec3.scale(auxVec3, cylinder.normal, vec3.dot(dp, cylinder.normal)));\n  const B = 2 * vec3.dot(a, b);\n  const C = vec3.dot(b, b) - cylinder.radius * cylinder.radius;\n\n  const d = B * B - 4 * A * C;\n  if (d < 0) {\n    return;\n  }\n  const D = Math.sqrt(d);\n  const k = 1 / (2 * A);\n  const t1 = k * (-B - D);\n  const t2 = k * (-B + D);\n  if ((t1 < 0) && (t2 < 0)) {\n    return;\n  }\n\n  const cp1 = cylinder.position;\n  const cp2 = vec3.add(auxVec1, vec3.scale(auxVec1, cylinder.normal, cylinder.height), cylinder.position);\n  const cd1 = vec3.dot(cylinder.normal, cp1);\n  const cd2 = vec3.dot(cylinder.normal, cp2);\n  if (t1 >= 0) {\n    const p1 = vec3.add(auxVec1, vec3.scale(auxVec1, ray.direction, t1), ray.origin);\n    const d1 = vec3.dot(cylinder.normal, p1);\n    if ((cd1 - d1) * (cd2 - d1) < 0) {\n      return t1;\n    }\n  }\n  if (t2 >= 0) {\n    const p2 = vec3.add(auxVec1, vec3.scale(auxVec1, ray.direction, t2), ray.origin);\n    const d2 = vec3.dot(cylinder.normal, p2);\n    if ((cd1 - d2) * (cd2 - d2) < 0) {\n      return t2;\n    }\n  }\n}\n\nfunction projectVerticesOntoAxis(axis, vertices) {\n  let dmin = 0;\n  let dmax = 0;\n  for (let i = 0; i < vertices.length; i++) {\n    const d = vec3.dot(axis, vertices[i]);\n    if (i === 0) {\n      dmin = d;\n      dmax = d;\n    } else {\n      if (d < dmin) {\n        dmin = d;\n      }\n      if (d > dmax) {\n        dmax = d;\n      }\n    }\n  }\n  return {\n    dmin: dmin,\n    dmax: dmax\n  };\n}\n\nfunction overlapProjectionsOntoAxis(axis, vertices1, vertices2, eps = 1e-3) {\n  if ((vertices1.length === 0) || (vertices2.length === 0)) {\n    return false;\n  }\n  let p1 = projectVerticesOntoAxis(axis, vertices1);\n  let p2 = projectVerticesOntoAxis(axis, vertices2);\n  return (p1.dmin + eps < p2.dmax) && (p2.dmin + eps < p1.dmax);\n}\n\nfunction collideConvexHulls(vertices1, polygonNormals1, vertices2, polygonNormals2) {\n  return polygonNormals1.every(polygonNormal1 =>\n          overlapProjectionsOntoAxis(polygonNormal1, vertices1, vertices2))\n      && polygonNormals2.every(polygonNormal2 =>\n          overlapProjectionsOntoAxis(polygonNormal2, vertices1, vertices2));\n}\n\nfunction rayToPointDistance(ray, point) {\n  const vector = vec3.sub(auxVec1, point, ray.origin);\n  const projection = vec3.scale(auxVec2, ray.direction, vec3.dot(vector, ray.direction));\n  return vec3.distance(vector, projection);\n}\n\nexport { intersectTriangles, intersectSphere, createCylinder, intersectCylinder,\n    collideConvexHulls, rayToPointDistance };\n","import { vec3, quat } from 'gl-matrix';\n\nfunction createTransform(position = vec3.create(), orientation = quat.create()) {\n  return {\n    position: position,\n    orientation: orientation\n  };\n}\n\nfunction rotatedTransform(transform, pivot, axis, angle) {\n  const rotation = quat.setAxisAngle(quat.create(), axis, angle);\n  const position = vec3.sub(vec3.create(), transform.position, pivot);\n  vec3.transformQuat(position, position, rotation);\n  vec3.add(position, position, pivot);\n  const orientation = quat.mul(rotation, rotation, transform.orientation);\n  quat.normalize(orientation, orientation);\n  return createTransform(position, orientation);\n}\n\nfunction multiplyTransforms(out, t1, t2) {\n  vec3.transformQuat(out.position, t2.position, t1.orientation);\n  vec3.add(out.position, out.position, t1.position);\n  quat.mul(out.orientation, t1.orientation, t2.orientation);\n  quat.normalize(out.orientation, out.orientation);\n  return out;\n}\n\nfunction inverseTransform(out, t) {\n  quat.invert(out.orientation, t.orientation);\n  vec3.negate(out.position, t.position);\n  vec3.transformQuat(out.position, out.position, out.orientation);\n  return out;\n}\n\nexport { createTransform, rotatedTransform, multiplyTransforms, inverseTransform };\n","import { vec3, quat } from 'gl-matrix';\n\nclass Placeable {\n  constructor() {\n    this.id = 0;\n    this.position = vec3.create();\n    this.orientation = quat.create();\n    this.worldPosition = vec3.create();\n    this.worldOrientation = quat.create();\n  }\n\n  applyTransform(parentOrientation) {\n    vec3.transformQuat(this.worldPosition, this.position, parentOrientation);\n    quat.multiply(this.worldOrientation, parentOrientation, this.orientation);\n  }\n\n  translate(translation) {\n    vec3.add(this.position, this.position, translation);\n  }\n\n  rotate(rotation) {\n    vec3.transformQuat(this.position, this.position, rotation);\n    quat.multiply(this.orientation, rotation, this.orientation);\n  }\n\n  copy(placeable) {\n    this.id = placeable.id;\n    vec3.copy(this.position, placeable.position);\n    quat.copy(this.orientation, placeable.orientation);\n    vec3.copy(this.worldPosition, placeable.worldPosition);\n    quat.copy(this.worldOrientation, placeable.worldOrientation);\n  }\n}\n\nexport default Placeable;\n","import { vec3, quat } from 'gl-matrix';\nimport { intersectTriangles, collideConvexHulls } from './Collision';\nimport { createTransform, rotatedTransform, multiplyTransforms } from './Transform';\nimport Placeable from './Placeable';\n\nconst JunctionFace = Object.freeze({\n  LEFT: 0,\n  RIGHT: 1,\n  FRONT: 2,\n  BACK: 3,\n  BOTTOM: 4\n});\n\nconst PRISM_HEIGHT = 1.0;\nconst PRISM_HALF_HEIGHT = 0.5 * PRISM_HEIGHT;\nconst PRISM_BASE = 2.0 * PRISM_HEIGHT;\nconst PRISM_HALF_BASE = 0.5 * PRISM_BASE;\nconst PRISM_SIDE = Math.sqrt(PRISM_BASE);\nconst PRISM_HALF_SIDE = 0.5 * PRISM_SIDE;\nconst PRISM_DISTANCE = 0.5 * PRISM_BASE;\nconst PRISM_HALF_DISTANCE = 0.5 * PRISM_DISTANCE;\n\n// Prism geometry\n//     2\n//     /\\\n//    /| \\\n//   / |  \\\n// 0/  /\\  \\4\n//  | /3 \\ |\n//  |/    \\|\n//  /______\\\n// 1        5\nconst PRISM_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE)\n];\nconst PRISM_POLYGON_INDICES = [\n  [ 0, 1, 2, 3 ], // left slope\n  [ 2, 3, 5, 4 ], // right slope\n  [ 1, 0, 4, 5 ], // bottom\n  [ 0, 2, 4 ], // back\n  [ 5, 3, 1 ] // front\n];\nconst PRISM_TRIANGLE_INDICES = [\n  0, 1, 2,  2, 1, 3, // left slope\n  2, 3, 4,  4, 3, 5, // right slope\n  4, 5, 0,  0, 5, 1, // bottom\n  0, 2, 4, // back\n  5, 3, 1 // front\n];\nconst PRISM_POLYGON_NORMALS = PRISM_POLYGON_INDICES.map(indices => {\n  const p0 = PRISM_VERTICES[indices[0]];\n  const p1 = PRISM_VERTICES[indices[1]];\n  const p2 = PRISM_VERTICES[indices[2]];\n  const normal = vec3.sub(vec3.create(), p1, p0);\n  vec3.cross(normal, normal, vec3.sub(vec3.create(), p2, p0));\n  return vec3.normalize(normal, normal);\n});\n\nconst PRISM_LEFT_SLOPE_PIVOT_POINT = vec3.fromValues(-PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_RIGHT_SLOPE_PIVOT_POINT = vec3.fromValues(PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_SIDE_PIVOT_Y = -PRISM_HALF_HEIGHT / 6;\nconst PRISM_LEFT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), 0.25 * Math.PI);\nconst PRISM_RIGHT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), -0.25 * Math.PI);\nconst PRISM_LEFT_TRANSFORM = createTransform(vec3.fromValues(-PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), -180, 0, 0));\nconst PRISM_RIGHT_TRANSFORM = createTransform(vec3.fromValues(PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), 180, 0, 0));\nconst PRISM_JUNCTIONS = [\n  {\n    face: JunctionFace.LEFT,\n    swapColors: true,\n    pivot: PRISM_LEFT_SLOPE_PIVOT_POINT,\n    normal: PRISM_LEFT_SLOPE_NORMAL,\n    tangent: PRISM_RIGHT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_LEFT_TRANSFORM,\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, 0.5 * Math.PI),\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, Math.PI),\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, -0.5 * Math.PI)\n    ]\n  },\n  {\n    face: JunctionFace.RIGHT,\n    swapColors: true,\n    pivot: PRISM_RIGHT_SLOPE_PIVOT_POINT,\n    normal: PRISM_RIGHT_SLOPE_NORMAL,\n    tangent: PRISM_LEFT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_RIGHT_TRANSFORM,\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, -0.5 * Math.PI),\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, Math.PI),\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, 0.5 * Math.PI)\n    ]\n  },\n  {\n    face: JunctionFace.FRONT,\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, 1),\n    tangent: vec3.fromValues(0, 1, 0),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, PRISM_SIDE))\n    ]\n  },\n  {\n    face: JunctionFace.BACK,\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, -PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, -1),\n    tangent: vec3.fromValues(0, 1, 0),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, -PRISM_SIDE))\n    ]\n  },\n  {\n    face: JunctionFace.BOTTOM,\n    swapColors: false,\n    pivot: vec3.fromValues(0, -PRISM_HALF_HEIGHT, 0),\n    normal: vec3.fromValues(0, -1, 0),\n    tangent: vec3.fromValues(0, 0, -1),\n    transforms: [\n      createTransform(vec3.fromValues(0, -PRISM_HEIGHT, 0),\n          quat.fromEuler(quat.create(), 180, 0, 0))\n    ]\n  }\n];\n\nconst COINCIDING_VERTICES_SQUARED_DISTANCE_MAX = 1e-3;\nfunction coincideVertices(v1, v2) {\n  return vec3.squaredDistance(v1, v2) < COINCIDING_VERTICES_SQUARED_DISTANCE_MAX;\n}\nfunction coincideTriangleVertices(vertices1, vertices2, i11, i12, i13, i21, i22, i23) {\n  return coincideVertices(vertices1[i11], vertices2[i21])\n      && coincideVertices(vertices1[i12], vertices2[i22])\n      && coincideVertices(vertices1[i13], vertices2[i23]);\n}\nfunction coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24) {\n  return coincideVertices(vertices1[i11], vertices2[i21])\n      && coincideVertices(vertices1[i12], vertices2[i22])\n      && coincideVertices(vertices1[i13], vertices2[i23])\n      && coincideVertices(vertices1[i14], vertices2[i24]);\n}\nfunction coincideSquareVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24) {\n  return coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i22, i23, i24, i21)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i23, i24, i21, i22)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i24, i21, i22, i23);\n}\n\nclass Prism extends Placeable {\n  constructor() {\n    super();\n    this.colorMask = 0;\n    this.backgroundColor = \"#000\";\n    this.foregroundColor = \"#fff\";\n    this.vertices = PRISM_VERTICES.map(vertex => vec3.clone(vertex));\n    this.polygonNormals = PRISM_POLYGON_NORMALS.map(normal => vec3.clone(normal));\n  }\n\n  applyTransform(parentOrientation) {\n    super.applyTransform(parentOrientation);\n    for (let i = 0; i < this.vertices.length; i++) {\n      const vertex = this.vertices[i];\n      vec3.transformQuat(vertex, PRISM_VERTICES[i], this.worldOrientation);\n      vec3.add(vertex, vertex, this.worldPosition);\n    }\n    for (let i = 0; i < this.polygonNormals.length; i++) {\n      vec3.transformQuat(this.polygonNormals[i], PRISM_POLYGON_NORMALS[i], this.worldOrientation);\n    }\n  }\n\n  intersect(ray) {\n    return intersectTriangles(ray, this.vertices, PRISM_TRIANGLE_INDICES);\n  }\n\n  collides(prism) {\n    return collideConvexHulls(this.vertices, this.polygonNormals,\n        prism.vertices, prism.polygonNormals);\n  }\n\n  getJunctions() {\n    const junctions = [];\n    const transform = createTransform(this.position, this.orientation);\n    for (let i = 0; i < PRISM_JUNCTIONS.length; i++) {\n      const junction = PRISM_JUNCTIONS[i];\n      const junctionPrisms = [];\n      for (let j = 0; j < junction.transforms.length; j++) {\n        const junctionTransform = multiplyTransforms(createTransform(),\n            transform, junction.transforms[j]);\n        const prism = new Prism();\n        prism.colorMask = this.colorMask;\n        prism.backgroundColor = (junction.swapColors) ? this.foregroundColor : this.backgroundColor;\n        prism.foregroundColor = (junction.swapColors) ? this.backgroundColor : this.foregroundColor;\n        vec3.copy(prism.position, junctionTransform.position);\n        quat.copy(prism.orientation, junctionTransform.orientation);\n        junctionPrisms.push(prism);\n      }\n      const pivot = vec3.transformQuat(vec3.create(), junction.pivot, this.orientation);\n      vec3.add(pivot, pivot, this.position);\n      const normal = vec3.transformQuat(vec3.create(), junction.normal, this.orientation);\n      const tangent = vec3.transformQuat(vec3.create(), junction.tangent, this.orientation);\n      junctions.push({\n        face: junction.face,\n        pivot: pivot,\n        normal: normal,\n        tangent: tangent,\n        prisms: junctionPrisms\n      });\n    }\n    return junctions;\n  }\n\n  coincideFace(prism, face) {\n    switch (face) {\n      case JunctionFace.LEFT:\n        if (coincideSquareVertices(this.vertices, prism.vertices, 0, 1, 3, 2, 4, 5, 3, 2)) {\n          return JunctionFace.RIGHT;\n        }\n        if (coincideSquareVertices(this.vertices, prism.vertices, 0, 1, 3, 2, 1, 0, 2, 3)) {\n          return JunctionFace.LEFT;\n        }\n        break;\n      case JunctionFace.RIGHT:\n        if (coincideSquareVertices(this.vertices, prism.vertices, 2, 3, 5, 4, 2, 3, 1, 0)) {\n          return JunctionFace.LEFT;\n        }\n        if (coincideSquareVertices(this.vertices, prism.vertices, 2, 3, 5, 4, 3, 2, 4, 5)) {\n          return JunctionFace.RIGHT;\n        }\n        break;\n      case JunctionFace.FRONT:\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 1, 3, 5, 0, 2, 4)) {\n          return JunctionFace.BACK;\n        }\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 1, 3, 5, 5, 3, 1)) {\n          return JunctionFace.FRONT;\n        }\n        break;\n      case JunctionFace.BACK:\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 0, 2, 4, 1, 3, 5)) {\n          return JunctionFace.FRONT;\n        }\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 0, 2, 4, 4, 2, 0)) {\n          return JunctionFace.BACK;\n        }\n        break;\n      case JunctionFace.BOTTOM:\n        if (coincideRectangleVertices(this.vertices, prism.vertices, 0, 1, 5, 4, 4, 5, 1, 0)\n            || coincideRectangleVertices(this.vertices, prism.vertices, 0, 1, 5, 4, 1, 0, 4, 5)) {\n          return JunctionFace.BOTTOM;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  coincide(prism) {\n    for (const faceName in JunctionFace) {\n      const face = JunctionFace[faceName];\n      const coincidingFace = this.coincideFace(prism, face);\n      if (coincidingFace !== undefined) {\n        return {\n          baseFace: face,\n          targetFace: coincidingFace\n        }\n      }\n    }\n  }\n\n  toArchive() {\n    return {\n      id: this.id,\n      colorMask: this.colorMask,\n      backgroundColor: this.backgroundColor,\n      foregroundColor: this.foregroundColor,\n      position: this.position,\n      orientation: this.orientation\n    };\n  }\n\n  fromArchive(archive) {\n    this.id = archive.id;\n    this.colorMask = archive.colorMask;\n    this.backgroundColor = archive.backgroundColor;\n    this.foregroundColor = archive.foregroundColor;\n    vec3.copy(this.position, archive.position);\n    quat.copy(this.orientation, archive.orientation);\n  }\n\n  clone() {\n    const prism = new Prism();\n    prism.copy(this);\n    prism.colorMask = this.colorMask;\n    prism.backgroundColor = this.backgroundColor;\n    prism.foregroundColor = this.foregroundColor;\n    return prism;\n  }\n}\n\nexport default Prism;\nexport { PRISM_HEIGHT, PRISM_BASE, PRISM_SIDE };\nexport { JunctionFace };\n","import Ammo from 'ammo.js';\nimport { vec3, quat, mat3 } from 'gl-matrix';\nimport { createTransform, multiplyTransforms, inverseTransform } from './Transform';\nimport { PRISM_HEIGHT, PRISM_BASE, PRISM_SIDE } from './Prism';\n\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\n\nconst MAX_SUB_STEPS = 10;\nconst FIXED_TIME_STEP = 1 / 60;\n\nconst GRAVITY = 9.81;\n\nconst PRISM_HALF_HEIGHT = 0.5 * PRISM_HEIGHT;\nconst PRISM_HALF_BASE = 0.5 * PRISM_BASE;\nconst PRISM_HALF_SIDE = 0.5 * PRISM_SIDE;\n\nconst PRISM_CG_H = 1 / 3 * PRISM_HEIGHT;\nconst PRISM_CG_DY = PRISM_HALF_HEIGHT - PRISM_CG_H;\nconst PRISM_MARGIN = 0.04;\nconst PRISM_MARGIN_DIAG = PRISM_MARGIN * Math.cos(Math.PI / 4);\n\nconst PRISM_COLLISION_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT + PRISM_CG_DY - 2 * PRISM_MARGIN_DIAG,\n      -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT + PRISM_CG_DY - 2 * PRISM_MARGIN_DIAG,\n      PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN)\n];\n\nconst PRISM_VOLUME = 0.5 * PRISM_BASE * PRISM_HEIGHT * PRISM_SIDE;\nconst PRISM_DENSITY = 1 / Math.sqrt(2);\nconst PRISM_MASS = PRISM_VOLUME * PRISM_DENSITY;\nconst PRISM_INERTIA_FACTOR = PRISM_MASS * PRISM_HEIGHT * PRISM_HEIGHT;\nconst PRISM_INERTIA_X = 2 / 9 * PRISM_INERTIA_FACTOR;\nconst PRISM_INERTIA_Y = 1 / 3 * PRISM_INERTIA_FACTOR;\nconst PRISM_INERTIA_Z = 2 / 9 * PRISM_INERTIA_FACTOR;\n\nconst FRICTION_GROUND = 0.5;\nconst FRICTION_PRISM = 0.5;\nconst RESTITUTION_GROUND = 0.5;\nconst RESTITUTION_PRISM = 0.5;\nconst GROUP_GROUND = 0x01;\nconst GROUP_PRISM = 0x02;\nconst MASK_GROUND = GROUP_PRISM;\nconst MASK_PRISM = GROUP_GROUND | GROUP_PRISM;\n\nclass Simulation {\n  constructor(shape) {\n    this.shape = shape;\n\n    Ammo().then((Ammo) => {\n      this.init(Ammo);\n\n      this.addGroundBody(Ammo);\n      this.addShapeBody(Ammo, shape);\n    });\n  }\n\n  init(Ammo) {\n    this.shapeParts = [];\n    this.prismIds = [];\n    this.prismWorldTransforms = [];\n    this.prismLocalTransforms = [];\n    this.partBtTransform = new Ammo.btTransform();\n    this.partTransform = createTransform();\n\n    this.collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\n    this.dispatcher = new Ammo.btCollisionDispatcher(this.collisionConfiguration);\n    this.overlappingPairCache = new Ammo.btDbvtBroadphase();\n    this.solver = new Ammo.btSequentialImpulseConstraintSolver();\n    this.dynamicsWorld = new Ammo.btDiscreteDynamicsWorld(this.dispatcher,\n        this.overlappingPairCache, this.solver, this.collisionConfiguration);\n\n    this.dynamicsWorld.setGravity(new Ammo.btVector3(0, -GRAVITY, 0));\n\n    this.prismCollisionShape = new Ammo.btConvexHullShape();\n    this.prismCollisionShape.setMargin(PRISM_MARGIN);\n    for (const vertex of PRISM_COLLISION_VERTICES) {\n      this.prismCollisionShape.addPoint(convertVector(Ammo, vertex), false);\n    }\n    this.prismCollisionShape.recalcLocalAabb();\n\n    const prismMassOffset = createTransform(vec3.fromValues(0, PRISM_CG_DY, 0));\n    this.prismMassOffsetInversed = inverseTransform(createTransform(), prismMassOffset);\n  }\n\n  addRigidBody(Ammo, collisionShape, mass, inertia, transform,\n      friction, restitution, group, mask) {\n    const motionState = new Ammo.btDefaultMotionState(convertTransform(Ammo, transform));\n    const constructionInfo = new Ammo.btRigidBodyConstructionInfo(mass,\n        motionState, collisionShape, convertVector(Ammo, inertia));\n    constructionInfo.set_m_friction(friction);\n    constructionInfo.set_m_restitution(restitution);\n    const rigidBody = new Ammo.btRigidBody(constructionInfo);\n    rigidBody.setActivationState(4); // disable deactivation\n    this.dynamicsWorld.addRigidBody(rigidBody, group, mask);\n    return rigidBody;\n  }\n\n  addGroundBody(Ammo) {\n    const groundShape = new Ammo.btStaticPlaneShape(new Ammo.btVector3(0, 1, 0), 0);\n\n    this.addRigidBody(Ammo, groundShape, 0, vec3.create(), createTransform(),\n        FRICTION_GROUND, RESTITUTION_GROUND, GROUP_GROUND, MASK_GROUND);\n  }\n\n  addShapeBody(Ammo, shape) {\n    const parts = shape.discoverParts();\n    for (let i = 0; i < parts.length; i++) {\n      console.log(\"Part \" + (i + 1) + \"/\" + parts.length + \":\");\n      this.addShapePartBody(Ammo, parts[i]);\n    }\n  }\n\n  addShapePartBody(Ammo, part) {\n    if (part.length === 0) {\n      return;\n    }\n\n    const transforms = [];\n    const partOrigin = vec3.create();\n    for (const prism of part) {\n      const transform = multiplyTransforms(createTransform(),\n          createTransform(prism.worldPosition, prism.worldOrientation),\n          this.prismMassOffsetInversed);\n      vec3.add(partOrigin, partOrigin, transform.position);\n      transforms.push(transform);\n    }\n    vec3.scale(partOrigin, partOrigin, 1 / part.length);\n\n    const tensor = mat3.fromValues(0, 0, 0, 0, 0, 0, 0, 0, 0);\n    const mat1 = mat3.create();\n    const mat2 = mat3.create();\n    for (const transform of transforms) {\n      const basis = mat3.fromQuat(mat1, transform.orientation);\n      const j = mat3.set(mat2,\n        basis[0] * PRISM_INERTIA_X, basis[3] * PRISM_INERTIA_Y, basis[6] * PRISM_INERTIA_Z,\n        basis[1] * PRISM_INERTIA_X, basis[4] * PRISM_INERTIA_Y, basis[7] * PRISM_INERTIA_Z,\n        basis[2] * PRISM_INERTIA_X, basis[5] * PRISM_INERTIA_Y, basis[8] * PRISM_INERTIA_Z\n      );\n      mat3.mul(j, basis, j);\n      mat3.add(tensor, tensor, j);\n\n      const prismOrigin = transform.position;\n      const px = prismOrigin[0] - partOrigin[0];\n      const py = prismOrigin[1] - partOrigin[1];\n      const pz = prismOrigin[2] - partOrigin[2];\n      const squaredDistance = px * px + py * py + pz * pz;\n      mat3.set(j,\n        squaredDistance - px * px, -px * py, -px * pz,\n        -py * px, squaredDistance - py * py, -py * pz,\n        -pz * px, -pz * py, squaredDistance - pz * pz\n      );\n      mat3.multiplyScalar(j, j, PRISM_MASS);\n      mat3.add(tensor, tensor, j);\n    }\n    const principalRotation = quat.fromMat3(quat.create(),\n        diagonalizeMatrix(tensor, 1e-5, 20));\n    const partTransform = createTransform(partOrigin, principalRotation);\n    const inertia = vec3.fromValues(tensor[0], tensor[4], tensor[8]);\n\n    const childTransform = inverseTransform(createTransform(), partTransform);\n    const collisionShape = new Ammo.btCompoundShape();\n    for (const transform of transforms) {\n      const prismTransform = multiplyTransforms(createTransform(), childTransform, transform);\n      collisionShape.addChildShape(convertTransform(Ammo, prismTransform), this.prismCollisionShape);\n    }\n\n    const mass = part.length * PRISM_MASS;\n    const rigidBody = this.addRigidBody(Ammo, collisionShape, mass,\n        inertia, partTransform, FRICTION_PRISM, RESTITUTION_PRISM,\n        GROUP_PRISM, MASK_PRISM);\n\n    for (const prism of part) {\n      const worldTransform = createTransform(vec3.clone(prism.worldPosition),\n          quat.clone(prism.worldOrientation));\n      const localTransform = multiplyTransforms(createTransform(),\n          childTransform, worldTransform);\n      this.prismIds.push(prism.id);\n      this.prismWorldTransforms.push(worldTransform);\n      this.prismLocalTransforms.push(localTransform);\n    }\n\n    this.shapeParts.push({\n      partBody: rigidBody,\n      prismCount: part.length\n    });\n\n    console.log(\"Mass: \" + mass);\n    console.log(\"Origin: {\" + partOrigin[0].toFixed(2) + \", \" + partOrigin[1].toFixed(2)\n        + \", \" + partOrigin[2].toFixed(2) + \"}\");\n    console.log(\"Inertia: {\" + inertia[0].toFixed(2) + \", \" + inertia[1].toFixed(2)\n        + \", \" + inertia[2].toFixed(2) + \"}\");\n    const principalAxis = vec3.create();\n    const principalAngle = quat.getAxisAngle(principalAxis, principalRotation);\n    console.log(\"Principal: axis={\" + principalAxis[0].toFixed(2) + \", \"\n        + principalAxis[1].toFixed(2) + \", \" + principalAxis[2].toFixed(2)\n        + \"} angle=\" + (principalAngle * RADIANS_TO_DEGREES).toFixed(0));\n  }\n\n  updatePrismTransforms() {\n    if (!this.shapeParts) {\n      return;\n    }\n\n    let prismOffset = 0;\n    for (const shapePart of this.shapeParts) {\n      shapePart.partBody.getMotionState().getWorldTransform(this.partBtTransform);\n      const partPosition = this.partBtTransform.getOrigin();\n      const partOrientation = this.partBtTransform.getRotation();\n      vec3.set(this.partTransform.position, partPosition.x(), partPosition.y(), partPosition.z());\n      quat.set(this.partTransform.orientation, partOrientation.x(), partOrientation.y(),\n          partOrientation.z(), partOrientation.w());\n\n      for (let i = 0; i < shapePart.prismCount; i++) {\n        multiplyTransforms(this.prismWorldTransforms[prismOffset + i], this.partTransform,\n            this.prismLocalTransforms[prismOffset + i]);\n      }\n      prismOffset += shapePart.prismCount;\n    }\n  }\n\n  step(deltaTime) {\n    if (!this.dynamicsWorld) {\n      return;\n    }\n\n    this.dynamicsWorld.stepSimulation(deltaTime, MAX_SUB_STEPS, FIXED_TIME_STEP);\n\n    this.updatePrismTransforms();\n  }\n}\n\nfunction convertVector(Ammo, vector) {\n  return new Ammo.btVector3(vector[0], vector[1], vector[2]);\n}\n\nfunction convertQuaternion(Ammo, quaternion) {\n  return new Ammo.btQuaternion(quaternion[0], quaternion[1], quaternion[2], quaternion[3]);\n}\n\nfunction convertTransform(Ammo, transform) {\n  return new Ammo.btTransform(convertQuaternion(Ammo, transform.orientation),\n      convertVector(Ammo, transform.position));\n}\n\nfunction diagonalizeMatrix(mat, threshold, maxSteps) {\n  const rot = mat3.create();\n  for (let step = maxSteps; step > 0; step--) {\n    let p = 0;\n    let q = 1;\n    let r = 2;\n    let max = Math.abs(mat[3]);\n    let v = Math.abs(mat[6]);\n    if (v > max) {\n      q = 2;\n      r = 1;\n      max = v;\n    }\n    v = Math.abs(mat[7]);\n    if (v > max) {\n      p = 1;\n      q = 2;\n      r = 0;\n      max = v;\n    }\n\n    let t = threshold * (Math.abs(mat[0]) + Math.abs(mat[4]) + Math.abs(mat[8]));\n    if (max <= t) {\n      return rot;\n    }\n\n    const mpq = mat[p + q * 3];\n    const theta = (mat[q + q * 3] - mat[p + p * 3]) / (2 * mpq);\n    const theta2 = theta * theta;\n    let cos;\n    let sin;\n    t = (theta >= 0)\n        ? 1 / (theta + Math.sqrt(1 + theta2))\n        : 1 / (theta - Math.sqrt(1 + theta2));\n    cos = 1 / Math.sqrt(1 + t * t);\n    sin = cos * t;\n\n    mat[p + q * 3] = 0;\n    mat[q + p * 3] = 0;\n    mat[p + p * 3] -= t * mpq;\n    mat[q + q * 3] += t * mpq;\n    let mrp = mat[r + p * 3];\n    let mrq = mat[r + q * 3];\n    mat[r + p * 3] = mat[p + r * 3] = cos * mrp - sin * mrq;\n    mat[r + q * 3] = mat[q + r * 3] = cos * mrq + sin * mrp;\n\n    for (let i = 0; i < 3; i++) {\n      mrp = rot[i + p * 3];\n      mrq = rot[i + q * 3];\n      rot[i + p * 3] = cos * mrp - sin * mrq;\n      rot[i + q * 3] = cos * mrq + sin * mrp;\n    }\n  }\n  return rot;\n}\n\nexport default Simulation;\n","import React, { Component } from 'react';\nimport { vec3, vec4, quat, mat3, mat4 } from 'gl-matrix';\nimport ShapeView from './ShapeView';\nimport './App.css';\nimport tinycolor from 'tinycolor2';\nimport { intersectSphere, rayToPointDistance } from './Collision';\nimport { AppMode } from './App';\nimport Simulation from './Simulation';\nimport Prism from './Prism';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\n\nconst COLOR_MASK_COUNT = 8;\nconst POINTER_DRAG_THRESHOLD = 3;\nconst POINTER_DRAG_THRESHOLD_SQUARED = POINTER_DRAG_THRESHOLD * POINTER_DRAG_THRESHOLD;\nconst POINTER_DRAG_FACTOR = 0.01;\nconst ELEVATION_LIMIT = 0.48 * Math.PI;\nconst CAMERA_ANIMATION_TIME = 0.3;\nconst DEFAULT_ELEVATION = -Math.PI / 10;\nconst DEFAULT_HEADING = -Math.PI / 40;\n\nconst CAMERA_FOCAL_LENGTH_MIN = 15;\nconst CAMERA_FOCAL_LENGTH_MAX = 50;\nconst CAMERA_SENSOR_HEIGHT = 32;\nconst CAMERA_NEAR = 1;\nconst CAMERA_FAR = 300;\nconst CAMERA_DISTANCE = 10;\nconst SHAPE_FIT_SCALE = 1.1;\nfunction fovYToFocalLength(fovY) {\n  return 0.5 * CAMERA_SENSOR_HEIGHT / Math.tan(0.5 * fovY * DEGREES_TO_RADIANS);\n}\nfunction focalLengthToFovY(fl) {\n  return 2 * Math.atan(0.5 * CAMERA_SENSOR_HEIGHT / fl) * RADIANS_TO_DEGREES;\n}\n\nconst ENVIRONMENT_COLOR = \"#e6e6e6ff\";\nconst GROUND_HALF_SIZE = 1000;\nconst GROUND_GRID_SIZE = 4;\n\nconst HIGHLIGHT_PRIMARY_COLOR = \"#ffff40\";\nconst HIGHLIGHT_ALTERNATE_COLOR = \"#b266ff\";\nconst HIGHLIGHT_OPAQUE_BLEND = 0.8;\nconst HIGHLIGHT_START_BLEND = 0.3;\nconst HIGHLIGHT_RANGE_BLEND = HIGHLIGHT_OPAQUE_BLEND - HIGHLIGHT_START_BLEND;\nconst HIGHLIGHT_ANIMATION_TIME = 2;\n\nconst KNOB_RADIUS = 0.4;\n\nconst SECTION_COLOR = \"#4caf50\";\nconst INDICATION_COLOR = \"#90caf960\";\nconst CREATION_COLOR = \"#fff59d60\";\n\nconst iblUrl = \"res/environment_ibl.ktx\";\nconst prismMeshUrl = \"res/prism.filamesh\";\nconst prismMaterialUrl = \"res/prism.filamat\";\nconst ghostMaterialUrl = \"res/ghost.filamat\";\nconst highcolMaterialUrl = \"res/highcol.filamat\";\nconst knobMeshUrl = \"res/knob.filamesh\";\nconst groundMaterialUrl = \"res/ground.filamat\";\nconst groundTextureUrl = \"res/ground.png\";\nconst sectionMeshUrl = \"res/section.filamesh\";\n\nconst getPrismTextureUrl = ((maskIndex) => \"res/prism\" + maskIndex + \".png\");\nconst colorToFloat3 = ((color) => {\n  const rgb = tinycolor(color).toRgb();\n  return [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n});\nconst colorToFloat4 = ((color) => {\n  const rgb = tinycolor(color).toRgb();\n  return [rgb.r / 255, rgb.g / 255, rgb.b / 255, rgb.a];\n});\n\nclass Viewport extends Component {\n  constructor(props) {\n    super(props);\n\n    this.auxMat4 = mat4.create();\n  }\n\n  componentDidMount() {\n    let assets = [iblUrl, prismMeshUrl, prismMaterialUrl,\n        ghostMaterialUrl, highcolMaterialUrl, knobMeshUrl,\n        groundMaterialUrl, groundTextureUrl, sectionMeshUrl];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      assets.push(getPrismTextureUrl(i));\n    }\n    window.Filament.init(assets, () => {\n      this.init();\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.mode !== this.props.mode) {\n      this.handleModeChange();\n    } else if (prevProps.shape !== this.props.shape) {\n      this.handleShapeChange();\n    }\n  }\n\n  handleModeChange() {\n    this.refreshShapeView();\n    if (this.props.mode === AppMode.SIMULATION) {\n      this.simulation = new Simulation(this.props.shape);\n    } else if (this.simulation) {\n      this.simulation = null;\n    }\n  }\n\n  handleShapeChange() {\n    if (this.props.mode === AppMode.EDIT) {\n      this.refreshShapeView();\n    }\n  }\n\n  refreshShapeView() {\n    if (!this.engine) {\n      return;\n    }\n    if (this.shapeView) {\n      this.shapeView.destroy(this);\n    }\n    const showSections = (this.props.mode === AppMode.EDIT);\n    this.shapeView = new ShapeView(this.props.shape, showSections, this);\n    this.shapeView.addToScene(this);\n    this.activePlaceableView = null;\n    const activePlaceable = (this.props.mode === AppMode.EDIT\n        ? this.props.shape.findPlaceable(this.props.activePlaceableId) : null);\n    this.selectPlaceable(activePlaceable, true, false);\n  }\n\n  init() {\n    this.elevation = DEFAULT_ELEVATION;\n    this.heading = DEFAULT_HEADING;\n    this.activePlaceableView = null;\n    this.availableJunctions = null;\n    this.focalLengthMin = CAMERA_FOCAL_LENGTH_MIN;\n    this.focalLengthMax = CAMERA_FOCAL_LENGTH_MAX;\n    this.cameraZoom = 1;\n    this.targetZoom = this.cameraZoom;\n    this.lastZoom = this.cameraZoom;\n    this.focalPoint = vec3.create();\n    this.targetPosition = vec3.create();\n    this.lastPosition = vec3.create();\n    this.highlightColor = [0, 0, 0, 0];\n    this.animationTimer = 0;\n    this.highlightTimer = 0;\n\n    this.pressing = false;\n    this.dragging = false;\n    this.pickedPlaceable = null;\n    this.pickedJunction = null;\n    this.activeJunctionPrism = null;\n    this.pointerX = 0;\n    this.pointerY = 0;\n\n    this.canvas = this.filament;\n    const engine = this.engine = window.Filament.Engine.create(this.canvas);\n    this.camera = engine.createCamera(window.Filament.EntityManager.get().create());\n    this.scene = engine.createScene();\n\n    const indirectLight = engine.createIblFromKtx(iblUrl);\n    indirectLight.setIntensity(50000);\n    this.scene.setIndirectLight(indirectLight);\n\n    this.prismMaterial = engine.createMaterial(prismMaterialUrl);\n    this.prismMesh = engine.loadFilamesh(prismMeshUrl);\n    this.ghostMaterial = engine.createMaterial(ghostMaterialUrl);\n    this.ghostRenderable = this.createRenderable(this.createGhostMaterial(), this.prismMesh);\n    this.highcolMaterial = engine.createMaterial(highcolMaterialUrl);\n    this.knobMesh = engine.loadFilamesh(knobMeshUrl);\n    this.knobRenderables = [];\n    this.sectionMesh = engine.loadFilamesh(sectionMeshUrl);\n    this.sectionRenderables = [];\n\n    this.prismTextures = [];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      this.prismTextures.push(engine.createTextureFromPng(getPrismTextureUrl(i)));\n    }\n    this.prismTextureSampler = new window.Filament.TextureSampler(\n        window.Filament.MinFilter.LINEAR_MIPMAP_LINEAR,\n        window.Filament.MagFilter.LINEAR,\n        window.Filament.WrapMode.CLAMP_TO_EDGE);\n\n    const ground = this.createGround(GROUND_HALF_SIZE, GROUND_GRID_SIZE);\n    this.scene.addEntity(ground);\n\n    this.handleShapeChange();\n\n    this.swapChain = engine.createSwapChain();\n    this.renderer = engine.createRenderer();\n    this.view = engine.createView();\n    this.view.setCamera(this.camera);\n    this.view.setScene(this.scene);\n    this.renderer.setClearOptions({ clearColor: colorToFloat4(ENVIRONMENT_COLOR), clear: true });\n\n    this.resize();\n    this.renderFrame = this.renderFrame.bind(this);\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n    window.requestAnimationFrame(this.renderFrame);\n    this.canvas.addEventListener(\"pointerdown\", (e) => this.handlePointerDown(e));\n    this.canvas.addEventListener(\"pointerup\", (e) => this.handlePointerUp(e));\n    this.canvas.addEventListener(\"pointermove\", (e) => this.handlePointerMove(e));\n  }\n\n  createGround(halfSize, gridSize) {\n    const vb = window.Filament.VertexBuffer.Builder()\n      .vertexCount(4)\n      .bufferCount(2)\n      .attribute(window.Filament.VertexAttribute.POSITION, 0,\n          window.Filament.VertexBuffer$AttributeType.FLOAT3, 0, 12)\n      .attribute(window.Filament.VertexAttribute.UV0, 1,\n          window.Filament.VertexBuffer$AttributeType.FLOAT2, 0, 8)\n      .build(this.engine);\n    vb.setBufferAt(this.engine, 0, new Float32Array([\n      -halfSize, 0, -halfSize,\n      -halfSize, 0, halfSize,\n      halfSize, 0, -halfSize,\n      halfSize, 0, halfSize\n    ]));\n    const reps = 2 * halfSize / gridSize;\n    vb.setBufferAt(this.engine, 1, new Float32Array([0, 0, 0, reps, reps, 0, reps, reps]));\n\n    const ib = window.Filament.IndexBuffer.Builder()\n      .indexCount(6)\n      .bufferType(window.Filament.IndexBuffer$IndexType.USHORT)\n      .build(this.engine);\n    ib.setBuffer(this.engine, new Uint16Array([0, 1, 2, 2, 1, 3]));\n\n    const material = this.engine.createMaterial(groundMaterialUrl);\n    const texture = this.engine.createTextureFromPng(groundTextureUrl);\n    const sampler = new window.Filament.TextureSampler(\n        window.Filament.MinFilter.LINEAR_MIPMAP_LINEAR,\n        window.Filament.MagFilter.LINEAR,\n        window.Filament.WrapMode.REPEAT);\n    const materialInstance = material.getDefaultInstance();\n    materialInstance.setTextureParameter(\"baseColor\", texture, sampler);\n\n    const entity = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox({ center: [0, 0, 0], halfExtent: [halfSize, 0, halfSize] })\n      .material(0, materialInstance)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES, vb, ib)\n      .build(this.engine, entity);\n    return entity;\n  }\n\n  createRenderable(material, mesh) {\n    const renderable = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox(this.getBoundingBox(mesh.renderable))\n      .material(0, material)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES,\n          mesh.vertexBuffer, mesh.indexBuffer)\n      .build(this.engine, renderable);\n    return renderable;\n  }\n\n  destroyRenderable(renderable) {\n    const material = this.getRenderableMaterial(renderable);\n    this.engine.destroyMaterialInstance(material);\n    this.engine.destroyEntity(renderable);\n    const renderableManager = this.engine.getRenderableManager();\n    renderableManager.destroy(renderable);\n  }\n\n  createGhostMaterial() {\n    const material = this.ghostMaterial.createInstance();\n    material.setColor4Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat4(INDICATION_COLOR));\n    return material;\n  }\n\n  createHighcolMaterial(color) {\n    const material = this.highcolMaterial.createInstance();\n    material.setColor3Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat3(color));\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, [0, 0, 0, 0]);\n    return material;\n  }\n\n  createPrismRenderable(colorMask, backgroundColor, foregroundColor) {\n    const validColorMask = (colorMask >= 0) && (colorMask < COLOR_MASK_COUNT)\n        ? colorMask : 0;\n    const material = this.prismMaterial.createInstance();\n    material.setTextureParameter(\"colorMask\",\n        this.prismTextures[validColorMask], this.prismTextureSampler);\n    material.setColor3Parameter(\"backgroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(backgroundColor));\n    material.setColor3Parameter(\"foregroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(foregroundColor));\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, [0, 0, 0, 0]);\n    return this.createRenderable(material, this.prismMesh);\n  }\n\n  createKnobRenderable() {\n    return this.createRenderable(this.createGhostMaterial(), this.knobMesh);\n  }\n\n  createSectionRenderable(ghost = false) {\n    return this.createRenderable(\n        (ghost ? this.createGhostMaterial() : this.createHighcolMaterial(SECTION_COLOR)),\n        this.sectionMesh);\n  }\n\n  getBoundingBox(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const boundingBox = renderableManager.getAxisAlignedBoundingBox(renderableInstance);\n    renderableInstance.delete();\n    return boundingBox;\n  }\n\n  setRenderableTransform(renderable, position, orientation) {\n    const transformManager = this.engine.getTransformManager();\n    const transformInstance = transformManager.getInstance(renderable);\n    const transform = mat4.fromRotationTranslation(this.auxMat4, orientation, position);\n    transformManager.setTransform(transformInstance, transform);\n    transformInstance.delete();\n  }\n\n  getRenderableMaterial(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const material = renderableManager.getMaterialInstanceAt(renderableInstance, 0);\n    renderableInstance.delete();\n    return material;\n  }\n\n  updateCamera() {\n    const eye = [this.focalPoint[0], this.focalPoint[1], this.focalPoint[2] + CAMERA_DISTANCE];\n    const up = [0, 1, 0];\n    vec3.rotateX(eye, eye, this.focalPoint, this.elevation);\n    vec3.rotateY(eye, eye, this.focalPoint, this.heading);\n    this.camera.lookAt(eye, this.focalPoint, up);\n\n    const focalLength = this.focalLengthMin * (1 - this.cameraZoom)\n        + this.focalLengthMax * this.cameraZoom;\n    const fovY = focalLengthToFovY(focalLength);\n    const aspect = this.canvas.width / this.canvas.height;\n    this.camera.setProjectionFov(fovY, aspect, CAMERA_NEAR, CAMERA_FAR,\n        window.Filament.Camera$Fov.VERTICAL);\n  }\n\n  renderFrame(timestamp) {\n    if (this.lastTime === undefined) {\n      this.lastTime = timestamp;\n    }\n    const deltaTime = 1e-3 * (timestamp - this.lastTime);\n    this.lastTime = timestamp;\n\n    if (this.animationTimer < CAMERA_ANIMATION_TIME) {\n      this.animationTimer += deltaTime;\n      const t = Math.min(this.animationTimer / CAMERA_ANIMATION_TIME, 1);\n      const k = t * t * (3 - 2 * t);\n      vec3.lerp(this.focalPoint, this.lastPosition, this.targetPosition, k);\n      this.cameraZoom = this.lastZoom * (1 - k) + this.targetZoom * k;\n      this.updateCamera();\n    }\n\n    if (this.activePlaceableView) {\n      this.highlightTimer += deltaTime;\n      if (this.highlightTimer > HIGHLIGHT_ANIMATION_TIME) {\n        this.highlightTimer %= HIGHLIGHT_ANIMATION_TIME;\n      }\n      const t = 2 * Math.abs(this.highlightTimer / HIGHLIGHT_ANIMATION_TIME - 0.5);\n      const k = t * t * (3 - 2 * t);\n      const highlightIntensity = HIGHLIGHT_START_BLEND + k * HIGHLIGHT_RANGE_BLEND;\n      this.setHighlightIntensity(this.activePlaceableView, highlightIntensity);\n    }\n\n    if (this.props.mode === AppMode.SIMULATION) {\n      this.simulation.step(deltaTime);\n      const prismIds = this.simulation.prismIds;\n      if (prismIds) {\n        const transforms = this.simulation.prismWorldTransforms;\n        for (let i = 0; i < prismIds.length; i++) {\n          const placeableView = this.shapeView.findPlaceableView(prismIds[i]);\n          const transform = transforms[i];\n          this.setRenderableTransform(placeableView.renderable, transform.position,\n              transform.orientation);\n        }\n      }\n    }\n\n    this.renderer.render(this.swapChain, this.view);\n    window.requestAnimationFrame(this.renderFrame);\n  }\n\n  resize() {\n    const dpr = window.devicePixelRatio;\n    const width = this.canvas.width = 0.8 * window.innerWidth * dpr;\n    const height = this.canvas.height = window.innerHeight * dpr;\n    this.view.setViewport([0, 0, width, height]);\n    this.focalLengthMin = CAMERA_FOCAL_LENGTH_MIN;\n    this.focalLengthMax = CAMERA_FOCAL_LENGTH_MAX;\n    if (width < height) {\n      const aspect = width / height;\n      this.focalLengthMin *= aspect;\n      this.focalLengthMax *= aspect;\n    }\n\n    this.updateCamera();\n  }\n\n  isPrimaryPointer(e) {\n    return (e.pointerType !== \"touch\") || e.isPrimary;\n  }\n\n  handlePointerDown(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n\n    this.pickedPlaceable = null;\n    this.pickedJunction = null;\n    this.activeJunctionPrism = null;\n\n    if (this.props.mode === AppMode.EDIT) {\n      const ray = this.getCastingRay(e.clientX, e.clientY);\n      const placeableIntersection = this.shapeView.shape.intersect(ray);\n      let junctionIntersection;\n      if (this.props.activePlaceableId) {\n        junctionIntersection = this.intersectJunctions(ray);\n      }\n      if (junctionIntersection && (!placeableIntersection\n          || (junctionIntersection.hitDistance < placeableIntersection.hitDistance))) {\n        this.pickedJunction = junctionIntersection.hitJunction;\n        if (this.pickedJunction.section) {\n          this.activatePrismSection(this.availableJunctions, this.pickedJunction);\n        } else {\n          this.activatePrismKnob(this.availableJunctions, this.pickedJunction);\n        }\n      } else {\n        this.pickedPlaceable = (placeableIntersection) ? placeableIntersection.hitPlaceable : null;\n      }\n    }\n\n    this.pressing = true;\n    this.dragging = false;\n    this.pointerX = e.clientX;\n    this.pointerY = e.clientY;\n  }\n\n  handlePointerUp(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n\n    if (this.props.mode === AppMode.EDIT) {\n      if (this.pickedJunction && this.pickedJunction.section) {\n        this.addSection(this.pickedJunction.section);\n      } else if (this.activeJunctionPrism) {\n        this.addPrism(this.activeJunctionPrism);\n      } else if (!this.dragging && !this.pickedJunction) {\n        this.selectPlaceable(this.pickedPlaceable, true, true);\n      }\n      this.hideGhostPrism();\n      if (this.availableJunctions) {\n        this.showPrismKnobs(this.availableJunctions);\n        this.showPrismSections(this.availableJunctions);\n      }\n    }\n\n    this.pressing = false;\n  }\n\n  handlePointerMove(e) {\n    if (!this.isPrimaryPointer(e) || !this.pressing) {\n      return;\n    }\n    const dx = e.clientX - this.pointerX;\n    const dy = e.clientY - this.pointerY;\n    if (this.dragging) {\n      if (this.pickedJunction && !this.pickedJunction.section) {\n        const ray = this.getCastingRay(e.clientX, e.clientY);\n        const nearestJunctionPrism = this.pickNearestJunctionPrism(ray, this.pickedJunction);\n        if (nearestJunctionPrism !== this.activeJunctionPrism) {\n          this.showGhostPrism(nearestJunctionPrism.worldPosition, nearestJunctionPrism.worldOrientation);\n          this.activeJunctionPrism = nearestJunctionPrism;\n        }\n      } else if (!this.pickedJunction) {\n        this.elevation = Math.min(Math.max(\n            this.elevation - dy * POINTER_DRAG_FACTOR, -ELEVATION_LIMIT), ELEVATION_LIMIT);\n        this.heading = (this.heading - dx * POINTER_DRAG_FACTOR) % (2 * Math.PI);\n        this.updateCamera();\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n      }\n    } else {\n      const dragDistanceSquared = dx * dx + dy * dy;\n      if (dragDistanceSquared >= POINTER_DRAG_THRESHOLD_SQUARED) {\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n        this.dragging = true;\n      }\n    }\n  }\n\n  computeAutoZoom(shape) {\n    let autoFovY = 0;\n    const point = vec3.create();\n    const viewRotation = mat3.fromMat4(mat3.create(), this.camera.getViewMatrix());\n    const invAspect = this.canvas.height / this.canvas.width;\n    for (const prism of shape.prisms) {\n      for (const vertex of prism.vertices) {\n        vec3.sub(point, vertex, shape.aabb.center);\n        vec3.transformMat3(point, point, viewRotation);\n        const widthFitFovY = 2 * Math.atan(SHAPE_FIT_SCALE * invAspect\n            * Math.abs(point[0]) / (CAMERA_DISTANCE - point[2])) * RADIANS_TO_DEGREES;\n        if (widthFitFovY > autoFovY) {\n          autoFovY = widthFitFovY;\n        }\n        const heightFitFovY = 2 * Math.atan(SHAPE_FIT_SCALE * Math.abs(point[1])\n            / (CAMERA_DISTANCE - point[2])) * RADIANS_TO_DEGREES;\n        if (heightFitFovY > autoFovY) {\n          autoFovY = heightFitFovY;\n        }\n      }\n    }\n    if (autoFovY > 0) {\n      const autoFocalLength = fovYToFocalLength(autoFovY);\n      const autoZoom = (autoFocalLength - this.focalLengthMin)\n          / (this.focalLengthMax - this.focalLengthMin);\n      return Math.min(Math.max(autoZoom, 0), 1);\n    } else {\n      return 1;\n    }\n  }\n\n  getCastingRay(clientX, clientY) {\n    const dpr = window.devicePixelRatio;\n    const x = (2 * clientX * dpr) / this.canvas.width - 1;\n    const y = 1 - (2 * clientY * dpr) / this.canvas.height;\n    const rayVec = vec4.fromValues(x, y, -1, 1);\n    vec4.transformMat4(rayVec, rayVec, window.Filament.Camera.inverseProjection(\n        this.camera.getProjectionMatrix()));\n    rayVec[2] = -1;\n    rayVec[3] = 0;\n    vec4.transformMat4(rayVec, rayVec, this.camera.getModelMatrix());\n    const direction = vec3.fromValues(rayVec[0], rayVec[1], rayVec[2]);\n    vec3.normalize(direction, direction);\n    return {\n      origin: this.camera.getPosition(),\n      direction: direction\n    };\n  }\n\n  intersectJunctions(ray) {\n    if (!this.availableJunctions) {\n      return;\n    }\n    let hitJunction;\n    let hitDistance;\n    for (let i = 0; i < this.availableJunctions.length; i++) {\n      const junction = this.availableJunctions[i];\n      let junctionHitDistance;\n      if (junction.section) {\n        junctionHitDistance = junction.section.intersect(ray);\n      } else {\n        junctionHitDistance = intersectSphere(ray, junction.pivot, KNOB_RADIUS);\n      }\n      if (junctionHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (junctionHitDistance < hitDistance)) {\n          hitJunction = junction;\n          hitDistance = junctionHitDistance;\n        }\n      }\n    }\n    if (!hitJunction) {\n      return;\n    }\n    return {\n      hitJunction: hitJunction,\n      hitDistance: hitDistance\n    };\n  }\n\n  pickNearestJunctionPrism(ray, junction) {\n    let junctionPrism = null;\n    let rayDistance;\n    for (let i = 0; i < junction.prisms.length; i++) {\n      const prism = junction.prisms[i];\n      const prismRayDistance = rayToPointDistance(ray, prism.worldPosition);\n      if ((rayDistance === undefined) || (prismRayDistance < rayDistance)) {\n        junctionPrism = prism;\n        rayDistance = prismRayDistance;\n      }\n    }\n    return junctionPrism;\n  }\n\n  selectPlaceable(placeable, animate, notify) {\n    if (this.activePlaceableView) {\n      this.setHighlightIntensity(this.activePlaceableView, 0);\n    }\n    if (placeable) {\n      this.activePlaceableView = this.shapeView.findPlaceableView(placeable.id);\n    } else {\n      this.activePlaceableView = null;\n    }\n    if (this.activePlaceableView) {\n      this.updateHighlightColor(placeable);\n    }\n    if ((placeable instanceof Prism) && this.activePlaceableView) {\n      this.availableJunctions = this.shapeView.shape.getAvailableJunctions(placeable);\n      this.showPrismKnobs(this.availableJunctions);\n      this.showPrismSections(this.availableJunctions);\n    } else {\n      this.availableJunctions = null;\n      this.hidePrismKnobs();\n      this.hidePrismSections();\n    }\n    if (animate) {\n      vec3.copy(this.lastPosition, this.targetPosition);\n      this.lastZoom = this.targetZoom;\n      if (this.activePlaceableView) {\n        vec3.copy(this.targetPosition, placeable.worldPosition);\n        this.targetZoom = 1;\n      } else {\n        vec3.copy(this.targetPosition, this.shapeView.shape.aabb.center);\n        this.targetZoom = this.computeAutoZoom(this.shapeView.shape);\n      }\n      this.animationTimer = 0;\n      this.highlightTimer = 0;\n    }\n    if (notify) {\n      this.props.onActivePlaceableChange(placeable ? placeable.id : 0);\n    }\n  }\n\n  addPrism(prism) {\n    const shape = this.shapeView.shape.clone();\n    prism.id = ++shape.lastPlaceableId;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    this.props.onShapeChange(shape, prism.id);\n  }\n\n  addSection(section) {\n    const shape = this.shapeView.shape.clone();\n    section.id = ++shape.lastPlaceableId;\n    shape.sections.push(section);\n    shape.applyTransform();\n    this.props.onShapeChange(shape, section.id);\n  }\n\n  updateHighlightColor(placeable) {\n    let placeableColor;\n    if (placeable instanceof Prism) {\n      placeableColor = placeable.backgroundColor;\n    } else {\n      placeableColor = SECTION_COLOR;\n    }\n    const primaryReadability = tinycolor.readability(placeableColor, HIGHLIGHT_PRIMARY_COLOR);\n    const alternateReadability = tinycolor.readability(placeableColor, HIGHLIGHT_ALTERNATE_COLOR);\n    const colorStr = (primaryReadability > alternateReadability)\n        ? HIGHLIGHT_PRIMARY_COLOR : HIGHLIGHT_ALTERNATE_COLOR;\n    const rgb = tinycolor(colorStr).toRgb();\n    this.highlightColor[0] = rgb.r / 255;\n    this.highlightColor[1] = rgb.g / 255;\n    this.highlightColor[2] = rgb.b / 255;\n  }\n\n  setHighlightIntensity(placeableView, intensity) {\n    const material = this.getRenderableMaterial(placeableView.renderable);\n    this.highlightColor[3] = intensity;\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, this.highlightColor);\n  }\n\n  setGhostColor(renderable, color) {\n    const material = this.getRenderableMaterial(renderable);\n    material.setColor4Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat4(color));\n  }\n\n  showGhostPrism(position, orientation) {\n    this.setRenderableTransform(this.ghostRenderable, position, orientation);\n    this.scene.addEntity(this.ghostRenderable);\n  }\n\n  hideGhostPrism() {\n    this.scene.remove(this.ghostRenderable);\n  }\n\n  showPrismKnobs(junctions) {\n    while (this.knobRenderables.length < junctions.length) {\n      this.knobRenderables.push(this.createKnobRenderable());\n    }\n    for (let i = 0; i < junctions.length; i++) {\n      const junction = junctions[i];\n      const knobRenderable = this.knobRenderables[i];\n      this.setGhostColor(knobRenderable, INDICATION_COLOR);\n      this.setRenderableTransform(knobRenderable, junction.pivot, quat.create());\n      this.scene.addEntity(knobRenderable);\n    }\n    for (let i = junctions.length; i < this.knobRenderables.length; i++) {\n      this.scene.remove(this.knobRenderables[i])\n    }\n  }\n\n  activatePrismKnob(junctions, activeJunction) {\n    const junctionIndex = junctions.indexOf(activeJunction);\n    const knobRenderable = this.knobRenderables[junctionIndex];\n    this.setGhostColor(knobRenderable, CREATION_COLOR);\n    this.hidePrismKnobs();\n    this.scene.addEntity(knobRenderable);\n  }\n\n  hidePrismKnobs() {\n    this.knobRenderables.forEach(knobRenderable => this.scene.remove(knobRenderable));\n  }\n\n  showPrismSections(junctions) {\n    let index = 0;\n    for (const junction of junctions) {\n      if (!junction.section) {\n        continue;\n      }\n      if (this.sectionRenderables.length <= index) {\n        this.sectionRenderables.push(this.createSectionRenderable(true));\n      }\n      const sectionRenderable = this.sectionRenderables[index];\n      this.setGhostColor(sectionRenderable, INDICATION_COLOR);\n      this.setRenderableTransform(sectionRenderable, junction.section.worldPosition,\n          junction.section.worldOrientation);\n      this.scene.addEntity(sectionRenderable);\n      index++;\n    }\n    for (let i = index; i < this.sectionRenderables.length; i++) {\n      this.scene.remove(this.sectionRenderables[i])\n    }\n  }\n\n  activatePrismSection(junctions, activeJunction) {\n    let index = -1;\n    for (const junction of junctions) {\n      if (!junction.section) {\n        continue;\n      }\n      index++;\n      if (junction === activeJunction) {\n        break;\n      }\n    }\n    const sectionRenderable = this.sectionRenderables[index];\n    this.setGhostColor(sectionRenderable, CREATION_COLOR);\n    this.hidePrismSections();\n    this.scene.addEntity(sectionRenderable);\n  }\n\n  hidePrismSections() {\n    this.sectionRenderables.forEach(sectionRenderable => this.scene.remove(sectionRenderable));\n  }\n\n  render() {\n    return <canvas className=\"Viewport\" ref={ref => (this.filament = ref)} />\n  }\n}\n\nexport default Viewport;\nexport { COLOR_MASK_COUNT };\n","import React, { Component } from 'react'\nimport reactCSS from 'reactcss'\nimport { SwatchesPicker } from 'react-color'\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false\n    };\n  }\n\n  handleToggleColorPicker() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleHideColorPicker() {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleColorChange(color) {\n    this.props.onChange(color.hex);\n    this.handleHideColorPicker();\n  };\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: this.props.color,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={() => this.handleToggleColorPicker()}>\n          <div style={styles.color} />\n        </div>\n        {\n          this.state.displayColorPicker\n          ?\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={() => this.handleHideColorPicker()} />\n            <SwatchesPicker color={this.props.color} width=\"220px\" height=\"220px\"\n              onChange={(color) => this.handleColorChange(color)} />\n          </div>\n          :\n          null\n        }\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import Placeable from './Placeable';\nimport { createCylinder, intersectCylinder } from './Collision';\nimport { vec3, quat } from 'gl-matrix';\n\nconst SECTION_RADIUS = 1;\nconst SECTION_DEPTH = 0.3;\n\nclass Section extends Placeable {\n  constructor() {\n    super();\n    this.baseFace = undefined;\n    this.targetFace = undefined;\n    this.basePrismId = 0;\n    this.targetPrismId = 0;\n  }\n\n  intersect(ray) {\n    const normal = vec3.fromValues(1, 0, 0);\n    vec3.transformQuat(normal, normal, this.worldOrientation);\n    const cylinder = createCylinder(this.worldPosition, normal,\n        SECTION_RADIUS, SECTION_DEPTH, true);\n    return intersectCylinder(ray, cylinder);\n  }\n\n  toArchive() {\n    return {\n      id: this.id,\n      baseFace: this.baseFace,\n      targetFace: this.targetFace,\n      basePrismId: this.basePrismId,\n      targetPrismId: this.targetPrismId,\n      position: this.position,\n      orientation: this.orientation\n    };\n  }\n\n  fromArchive(archive) {\n    this.id = archive.id;\n    this.baseFace = archive.baseFace;\n    this.targetFace = archive.targetFace;\n    this.basePrismId = archive.basePrismId;\n    this.targetPrismId = archive.targetPrismId;\n    vec3.copy(this.position, archive.position);\n    quat.copy(this.orientation, archive.orientation);\n  }\n\n  clone() {\n    const section = new Section();\n    section.copy(this);\n    section.baseFace = this.baseFace;\n    section.targetFace = this.targetFace;\n    section.basePrismId = this.basePrismId;\n    section.targetPrismId = this.targetPrismId;\n    return section;\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { COLOR_MASK_COUNT } from './Viewport';\nimport ColorPicker from './ColorPicker';\nimport { AppMode } from './App';\nimport Prism from './Prism';\nimport Section from './Section';\n\nclass Toolbar extends Component {\n  modifyShape(prevShape, shapeModifier) {\n    const shape = prevShape.clone();\n    shapeModifier(shape);\n    shape.applyTransform();\n    this.props.onShapeChange(shape);\n  }\n\n  modifyPrism(prevShape, prevPrism, prismModifier) {\n    this.modifyShape(prevShape, (shape) => {\n      const prism = shape.findPlaceable(prevPrism.id);\n      prismModifier(prism);\n    });\n  }\n\n  handleRollChange(prevShape, roll) {\n    this.modifyShape(prevShape, (shape) => shape.roll = parseFloat(roll) || 0);\n  }\n\n  handlePitchChange(prevShape, pitch) {\n    this.modifyShape(prevShape, (shape) => shape.pitch = parseFloat(pitch) || 0);\n  }\n\n  handleYawChange(prevShape, yaw) {\n    this.modifyShape(prevShape, (shape) => shape.yaw = parseFloat(yaw) || 0);\n  }\n\n  handleColorMaskChange(prevShape, prevPrism, colorMask) {\n    this.modifyPrism(prevShape, prevPrism,\n        (prism) => prism.colorMask = parseInt(colorMask) || 0);\n  }\n\n  handleBackgroundColorChange(prevShape, prevPrism, color) {\n    this.modifyPrism(prevShape, prevPrism,\n        (prism) => prism.backgroundColor = color);\n  }\n\n  handleForegroundColorChange(prevShape, prevPrism, color) {\n    this.modifyPrism(prevShape, prevPrism,\n        (prism) => prism.foregroundColor = color);\n  }\n\n  handleSwapColors(prevShape, prevPrism) {\n    this.modifyPrism(prevShape, prevPrism, (prism) => {\n      prism.foregroundColor = prevPrism.backgroundColor;\n      prism.backgroundColor = prevPrism.foregroundColor;\n    });\n  }\n\n  handleDeletePrism(prevShape, prevPrism) {\n    this.modifyShape(prevShape, (shape) => {\n      shape.prisms = shape.prisms.filter(prism => prism.id !== prevPrism.id);\n      shape.sections = shape.sections.filter(section => (section.basePrismId !== prevPrism.id)\n          && (section.targetPrismId !== prevPrism.id));\n    });\n  }\n\n  handleDeleteSection(prevShape, prevSection) {\n    this.modifyShape(prevShape, (shape) => {\n      shape.sections = shape.sections.filter(section => section.id !== prevSection.id);\n    });\n  }\n\n  renderShapeParams(shape) {\n    return (\n      <div className=\"Group\">\n        <h3>Shape</h3>\n        <p>\n          <label htmlFor=\"roll\">Roll : </label>\n          <input type=\"number\" id=\"roll\" name=\"roll\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.roll}\n            onChange={e => this.handleRollChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"pitch\">Pitch : </label>\n          <input type=\"number\" id=\"pitch\" name=\"pitch\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.pitch}\n            onChange={e => this.handlePitchChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"yaw\">Yaw : </label>\n          <input type=\"number\" id=\"yaw\" name=\"yaw\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.yaw}\n            onChange={e => this.handleYawChange(shape, e.target.value)} />\n        </p>\n        <h3>File</h3>\n        <p>\n          <button id=\"resetShape\" name=\"resetShape\"\n            onClick={() => this.props.onShapeReset()}>Reset</button>\n          <button id=\"showcaseShape\" name=\"showcaseShape\"\n            onClick={() => this.props.onShapeShowcase()}>Showcase</button>\n        </p>\n        <p>\n          <button id=\"importShape\" name=\"importShape\"\n            onClick={() => this.props.onShapeImport()}>Import</button>\n          <button id=\"exportShape\" name=\"exportShape\"\n            onClick={() => this.props.onShapeExport(shape)}>Export</button>\n        </p>\n        <h3>Simulation</h3>\n        <button id=\"startSimulation\" name=\"startSimulation\" disabled={this.props.mode === AppMode.SIMULATION}\n            onClick={() => this.props.onSimulationStart()}>Start</button>\n        <button id=\"stopSimulation\" name=\"stopSimulation\" disabled={this.props.mode !== AppMode.SIMULATION}\n            onClick={() => this.props.onSimulationStop()}>Stop</button>\n      </div>\n    );\n  }\n\n  renderPrismParams(shape, prism) {\n    return (\n      <div className=\"Group\">\n        <h3>Prism</h3>\n        <p>\n          <label htmlFor=\"colorMask\">Mask : </label>\n          <input type=\"number\" id=\"colorMask\" name=\"colorMask\" min=\"0\" max={COLOR_MASK_COUNT - 1}\n            step=\"1\" value={prism.colorMask}\n            onChange={e => this.handleColorMaskChange(shape, prism, e.target.value)} />\n        </p>\n        <div>\n          <label htmlFor=\"backgroundColor\">Background : </label>\n          <ColorPicker id=\"backgroundColor\" name=\"backgroundColor\" color={prism.backgroundColor}\n            onChange={color => this.handleBackgroundColorChange(shape, prism, color)} />\n        </div>\n        <div>\n          <label htmlFor=\"foregroundColor\">Foreground : </label>\n          <ColorPicker id=\"foregroundColor\" name=\"foregroundColor\" color={prism.foregroundColor}\n            onChange={color => this.handleForegroundColorChange(shape, prism, color)} />\n        </div>\n        <p>\n          <button id=\"swapColors\" name=\"swapColors\"\n            onClick={() => this.handleSwapColors(shape, prism)}>Swap</button>\n        </p>\n        <p>\n          <button id=\"deletePrism\" name=\"deletePrism\" disabled={shape.prisms.length <= 1}\n            onClick={() => this.handleDeletePrism(shape, prism)}>Delete</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderSectionParams(shape, section) {\n    return (\n      <div className=\"Group\">\n        <h3>Section</h3>\n        <p>\n          <button id=\"deleteSection\" name=\"deleteSection\"\n            onClick={() => this.handleDeleteSection(shape, section)}>Delete</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderParams() {\n    const activePlaceable = this.props.shape.findPlaceable(this.props.activePlaceableId);\n    if (activePlaceable) {\n      if (activePlaceable instanceof Prism) {\n        return this.renderPrismParams(this.props.shape, activePlaceable);\n      } else if (activePlaceable instanceof Section) {\n        return this.renderSectionParams(this.props.shape, activePlaceable);\n      }\n    } else {\n      return this.renderShapeParams(this.props.shape);\n    }\n  }\n\n  renderHistory() {\n    return (\n      <div className=\"Group\">\n        <h3>History</h3>\n        <button id=\"undoHistory\" name=\"undoHistory\" disabled={this.props.historyIndex <= 0}\n            onClick={() => this.props.onHistoryChange(this.props.historyIndex - 1)}>Undo</button>\n        <button id=\"redoHistory\" name=\"redoHistory\" disabled={this.props.historyIndex >= this.props.historyEntries.length - 1}\n            onClick={() => this.props.onHistoryChange(this.props.historyIndex + 1)}>Redo</button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Toolbar\">\n        {this.renderHistory()}\n        {this.renderParams()}\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import { mat3, quat, vec3 } from 'gl-matrix';\nimport Prism from './Prism';\nimport Section from './Section';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst DEFAULT_BACKGROUND_COLOR = \"#1976d2\";\nconst DEFAULT_FOREGROUND_COLOR = \"#d9d9d9\";\n\nconst PLANE_HEIGHT = 0.5;\n\nclass Shape {\n  constructor() {\n    this.prisms = [];\n    this.sections = [];\n    this.lastPlaceableId = 0;\n    this.roll = 0;\n    this.pitch = 0;\n    this.yaw = 0;\n    this.aabb = {\n      min: vec3.create(),\n      max: vec3.create(),\n      center: vec3.create()\n    };\n  }\n\n  static createInitialShape() {\n    const shape = new Shape();\n    const prism = new Prism();\n    prism.id = ++shape.lastPlaceableId;\n    prism.backgroundColor = DEFAULT_BACKGROUND_COLOR;\n    prism.foregroundColor = DEFAULT_FOREGROUND_COLOR;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    return shape;\n  }\n\n  getOrientation() {\n    const orientation = quat.create();\n    quat.rotateY(orientation, orientation, this.yaw * DEGREES_TO_RADIANS);\n    quat.rotateX(orientation, orientation, this.roll * DEGREES_TO_RADIANS);\n    quat.rotateZ(orientation, orientation, this.pitch * DEGREES_TO_RADIANS);\n    return orientation;\n  }\n\n  applyTransform() {\n    const orientation = this.getOrientation();\n    for (let i = 0; i < 2; i++) {\n      vec3.zero(this.aabb.min);\n      vec3.zero(this.aabb.max);\n      for (let j = 0; j < this.prisms.length; j++) {\n        const prism = this.prisms[j];\n        prism.applyTransform(orientation);\n\n        // Compute axis aligned bounding box\n        for (let k = 0; k < prism.vertices.length; k++) {\n          const vertex = prism.vertices[k];\n          if ((j === 0) && (k === 0)) {\n            vec3.copy(this.aabb.min, vertex);\n            vec3.copy(this.aabb.max, vertex);\n          } else {\n            vec3.min(this.aabb.min, this.aabb.min, vertex);\n            vec3.max(this.aabb.max, this.aabb.max, vertex);\n          }\n        }\n      }\n\n      if (i === 0) {\n        // Align to plane\n        const inverseOrientation = quat.invert(quat.create(), orientation);\n        const translation = vec3.fromValues(0, PLANE_HEIGHT - this.aabb.min[1], 0);\n        vec3.transformQuat(translation, translation, inverseOrientation);\n        this.translate(translation);\n      } else {\n        for (const section of this.sections) {\n          section.applyTransform(orientation);\n        }\n\n        vec3.add(this.aabb.center, this.aabb.min, this.aabb.max);\n        vec3.scale(this.aabb.center, this.aabb.center, 0.5);\n      }\n    }\n  }\n\n  translate(translation) {\n    this.prisms.forEach(prism => prism.translate(translation));\n    this.sections.forEach(section => section.translate(translation));\n  }\n\n  rotate(rotation) {\n    this.prisms.forEach(prism => prism.rotate(rotation));\n    this.sections.forEach(section => section.rotate(rotation));\n  }\n\n  findPlaceable(id) {\n    if (!id) {\n      return null;\n    }\n    for (const prism of this.prisms) {\n      if (prism.id === id) {\n        return prism;\n      }\n    }\n    for (const section of this.sections) {\n      if (section.id === id) {\n        return section;\n      }\n    }\n    return null;\n  }\n\n  intersect(ray) {\n    let hitPlaceable;\n    let hitDistance;\n    for (const prism of this.prisms) {\n      const prismHitDistance = prism.intersect(ray);\n      if (prismHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (prismHitDistance < hitDistance)) {\n          hitPlaceable = prism;\n          hitDistance = prismHitDistance;\n        }\n      }\n    }\n    for (const section of this.sections) {\n      const sectionHitDistance = section.intersect(ray);\n      if (sectionHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (sectionHitDistance < hitDistance)) {\n          hitPlaceable = section;\n          hitDistance = sectionHitDistance;\n        }\n      }\n    }\n    if (!hitPlaceable) {\n      return;\n    }\n    return {\n      hitPlaceable: hitPlaceable,\n      hitDistance: hitDistance\n    };\n  }\n\n  getAvailableJunctions(prism) {\n    const orientation = this.getOrientation();\n    let junctions = prism.getJunctions();\n    junctions.forEach(junction => {\n      junction.prisms.forEach(junctionPrism => junctionPrism.applyTransform(orientation));\n      junction.prisms = junction.prisms.filter(junctionPrism => this.prisms.every(shapePrism =>\n          (shapePrism === prism) || !shapePrism.collides(junctionPrism)));\n\n      if (junction.prisms.length === 0) {\n        for (const shapePrism of this.prisms) {\n          if (shapePrism === prism) {\n            continue;\n          }\n          const coincidingFace = prism.coincideFace(shapePrism, junction.face);\n          if (coincidingFace !== undefined) {\n            if (this.sections.some(section =>\n                ((section.basePrismId === prism.id) && (section.targetPrismId === shapePrism.id))\n                || ((section.basePrismId === shapePrism.id) && (section.targetPrismId === prism.id)))) {\n              continue;\n            }\n            const section = new Section();\n            const binormal = vec3.cross(vec3.create(), junction.normal, junction.tangent);\n            vec3.copy(section.position, junction.pivot);\n            quat.fromMat3(section.orientation, mat3.fromValues(\n                junction.normal[0], junction.normal[1], junction.normal[2],\n                junction.tangent[0], junction.tangent[1], junction.tangent[2],\n                binormal[0], binormal[1], binormal[2]));\n            section.baseFace = junction.face;\n            section.targetFace = coincidingFace;\n            section.basePrismId = prism.id;\n            section.targetPrismId = shapePrism.id;\n            section.applyTransform(orientation);\n            junction.section = section;\n            break;\n          }\n        }\n      }\n\n      vec3.transformQuat(junction.pivot, junction.pivot, orientation);\n      vec3.transformQuat(junction.normal, junction.normal, orientation);\n      vec3.transformQuat(junction.tangent, junction.tangent, orientation);\n    });\n    return junctions.filter(junction => (junction.prisms.length > 0) || junction.section);\n  }\n\n  discoverParts() {\n    let parts = [];\n    for (const prism of this.prisms) {\n      const suitableParts = [];\n      for (const part of parts) {\n        for (const partPrism of part) {\n          const coincidence = prism.coincide(partPrism);\n          if ((coincidence !== undefined) && this.sections.every(section =>\n              ((section.basePrismId !== prism.id) || (section.baseFace !== coincidence.baseFace))\n              && ((section.targetPrismId !== prism.id) || (section.targetFace !== coincidence.baseFace)))) {\n            suitableParts.push(part);\n            break;\n          }\n        }\n      }\n      let suitablePart;\n      if (suitableParts.length === 1) {\n        suitablePart = suitableParts[0];\n      } else if (suitableParts.length > 1) {\n        // Merge suitable parts\n        suitablePart = [].concat.apply([], suitableParts);\n        parts = parts.filter(part => !suitableParts.includes(part));\n        parts.push(suitablePart);\n      } else {\n        suitablePart = [];\n        parts.push(suitablePart);\n      }\n      suitablePart.push(prism);\n    }\n    return parts;\n  }\n\n  toArchive() {\n    return {\n      prisms: this.prisms.map(prism => prism.toArchive()),\n      sections: this.sections.map(section => section.toArchive()),\n      lastPlaceableId: this.lastPlaceableId,\n      roll: this.roll,\n      pitch: this.pitch,\n      yaw: this.yaw\n    };\n  }\n\n  fromArchive(archive, version) {\n    this.prisms = archive.prisms.map(prismArchive => {\n      const prism = new Prism();\n      prism.fromArchive(prismArchive);\n      return prism;\n    });\n    if (version < 2) {\n      this.lastPlaceableId = archive.lastPrismId;\n    } else {\n      this.sections = archive.sections.map(sectionArchive => {\n        const section = new Section();\n        section.fromArchive(sectionArchive);\n        return section;\n      });\n      this.lastPlaceableId = archive.lastPlaceableId;\n    }\n    this.roll = archive.roll;\n    this.pitch = archive.pitch;\n    this.yaw = archive.yaw;\n  }\n\n  clone() {\n    const shape = new Shape();\n    for (const prism of this.prisms) {\n      shape.prisms.push(prism.clone());\n    }\n    for (const section of this.sections) {\n      shape.sections.push(section.clone());\n    }\n    shape.lastPlaceableId = this.lastPlaceableId;\n    shape.roll = this.roll;\n    shape.pitch = this.pitch;\n    shape.yaw = this.yaw;\n    vec3.copy(shape.aabb.min, this.aabb.min);\n    vec3.copy(shape.aabb.max, this.aabb.max);\n    vec3.copy(shape.aabb.center, this.aabb.center);\n    return shape;\n  }\n}\n\nexport default Shape;\n","import Shape from \"./Shape\";\nimport Prism from \"./Prism\";\nimport { vec3, quat } from 'gl-matrix';\nimport { createTransform, rotatedTransform } from './Transform';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nclass ShapeFolder {\n  constructor() {\n    this.pieceCount = 0;\n    this.shape = new Shape();\n  }\n\n  static build(name, figures) {\n    const definition = figures.definitions.find(definition => definition.name === name);\n    if (!definition) {\n      return;\n    }\n    const skin = ShapeFolder.compileSkin(definition.skin, figures);\n    if (!skin) {\n      return;\n    }\n    const shapeFolder = new ShapeFolder();\n    for (let i = 0; i < definition.pieces; i++) {\n      const colors = skin.colors[i % skin.colors.length];\n      shapeFolder.addPrism(skin.mask, colors[0], colors[1]);\n    }\n    if (!shapeFolder.fold(definition.notation)) {\n      return;\n    }\n    if (!shapeFolder.applyRotations(definition.rotations)) {\n      return;\n    }\n    const shape = shapeFolder.shape;\n    shape.applyTransform();\n    shape.translate(vec3.negate(vec3.create(), shape.aabb.center));\n    shape.applyTransform();\n    return shape;\n  }\n\n  static compileSkin(name, figures) {\n    const startPos = (name.charAt(0) === \"~\" ? 1 : 0);\n    const delimPos = name.lastIndexOf(\":\");\n    const skinName = name.substring(startPos, (delimPos !== -1 ? delimPos : name.length));\n    const skinDefinition = figures.skins.definitions.find(definition => definition.name === skinName);\n    if (!skinDefinition) {\n      return;\n    }\n    const skinPattern = figures.skins.patterns.find(pattern => pattern.key === skinDefinition.pattern);\n    if (!skinPattern) {\n      return;\n    }\n\n    const mask = (delimPos === -1 ? skinDefinition.mask : parseInt(name.substring(delimPos + 1)));\n\n    const shapeColors = [];\n    for (const colorNumbers of skinPattern.value) {\n      const prismColors = [];\n      for (const colorNumber of colorNumbers) {\n        if ((colorNumber < 1) || (colorNumber > skinDefinition.colors.length)) {\n          return;\n        }\n        const colorName = skinDefinition.colors[colorNumber - 1];\n        const color = figures.skins.colors.find(color => color.key === colorName);\n        if (!color) {\n          return;\n        }\n        prismColors.push(color.value);\n      }\n      shapeColors.push(prismColors);\n    }\n    const revertColors = (startPos > 0);\n    if (revertColors) {\n      shapeColors.reverse();\n    }\n\n    return {\n      mask: mask,\n      colors: shapeColors\n    };\n  }\n\n  addPrism(colorMask, backgroundColor, foregroundColor) {\n    let prism;\n    if (this.shape.prisms.length > 0) {\n      const leftPrism = this.shape.prisms[this.shape.prisms.length - 1];\n      prism = leftPrism.getJunctions()[1].prisms[0]; // unturned prism of right junction\n    } else {\n      prism = new Prism();\n    }\n    prism.id = ++this.shape.lastPlaceableId;\n    prism.colorMask = colorMask;\n    prism.backgroundColor = backgroundColor;\n    prism.foregroundColor = foregroundColor;\n    this.shape.prisms.push(prism);\n    this.pieceCount++;\n  }\n\n  /**\n   * Fold the shape using a notation in the following format:\n   * 1. Number of the downward-facing prism (from the left): 1 to (pieceCount+1)/2\n   * 2. Left or right sloping side of the prism: L or R\n   * 3. Position of the twist towards you: 1, 2 or 3\n   * Example: 1R2-2R2-3L2-4L2-6L2-6R2-7R2-9L2-10L2-10R2\n   * @return true if no errors, otherwise false.\n   */\n  fold(notation) {\n    const tokens = notation.split(\"-\");\n    for (let token of tokens) {\n      let pos;\n      let left;\n      if ((pos = token.indexOf(\"L\")) !== -1) {\n        left = true;\n      } else if ((pos = token.indexOf(\"R\")) !== -1) {\n        left = false;\n      } else {\n        return false;\n      }\n      const downwardPrismNumberStr = token.substring(0, pos);\n      if (!downwardPrismNumberStr) {\n        return false;\n      }\n      const downwardPrismNumber = parseInt(downwardPrismNumberStr, 10);\n      const index = (downwardPrismNumber - 1) * 2;\n      if ((index < 0) || (index >= this.pieceCount)) {\n        return false;\n      }\n      const twistsStr = token.substring(pos + 1);\n      if (!twistsStr) {\n        return false;\n      }\n      const twists = parseInt(twistsStr, 10);\n      if (!twists) {\n        continue; // no twist\n      }\n      if ((twists < 1) || (twists > 3)) {\n        return false;\n      }\n\n      if (twists < 3) {\n        for (let i = 0; i < twists; i++) {\n          if (!this.twist(index, left, left)) {\n            return false;\n          }\n        }\n      } else {\n        if (!this.twist(index, left, !left)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Twist left or right adjacent prisms around a downward-facing prism\n   * 90 degrees counter-clockwise or clockwise.\n   * @param index prism index in range [0..pieceCount).\n   * @param left twist left (true) or right (false) adjacent prisms.\n   * @param ccw twist counter-clockwise (true) or clockwise (false).\n   * @return true if prism index is in range, otherwise false.\n   */\n  twist(index, left, ccw) {\n    if ((index < 0) || (index >= this.pieceCount)) {\n      return false;\n    }\n    const prism = this.shape.prisms[index];\n    const junctions = prism.getJunctions();\n    const junction = (left ? junctions[0] : junctions[1]);\n    const twistAngle = (ccw ? 1 : -1) * Math.PI / 2;\n    if (left) {\n      for (let i = index - 1; i >= 0; i--) {\n        this.twistPrism(i, junction.pivot, junction.normal, twistAngle);\n      }\n    } else {\n      for (let i = index + 1; i < this.pieceCount; i++) {\n        this.twistPrism(i, junction.pivot, junction.normal, twistAngle);\n      }\n    }\n    return true;\n  }\n\n  twistPrism(index, pivot, axis, angle) {\n    const prism = this.shape.prisms[index];\n    const prismTransform = createTransform(prism.position, prism.orientation);\n    const transform = rotatedTransform(prismTransform, pivot, axis, angle);\n    vec3.copy(prism.position, transform.position);\n    quat.copy(prism.orientation, transform.orientation);\n  }\n\n  applyRotations(rotations) {\n    if (rotations.length === 0) {\n      return true;\n    }\n    const shapeRotation = quat.create();\n    const rotation = quat.create();\n    const axis = vec3.create();\n    for (const aa of rotations) {\n      if (aa.length === 4) {\n        vec3.set(axis, aa[0], aa[2], -aa[1]);\n        vec3.normalize(axis, axis);\n        quat.setAxisAngle(rotation, axis, aa[3] * DEGREES_TO_RADIANS);\n        quat.multiply(shapeRotation, rotation, shapeRotation);\n      } else {\n        return false;\n      }\n    }\n    this.shape.rotate(shapeRotation);\n    return true;\n  }\n}\n\nexport default ShapeFolder;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Viewport from './Viewport';\nimport Toolbar from './Toolbar';\nimport Shape from './Shape';\nimport ShapeFolder from './ShapeFolder';\n\nconst ARCHIVE_VERSION = 2;\nconst ARCHIVE_EXTENSION = \".twy\";\nconst HISTORY_LENGTH_MAX = 30;\n\nconst AppMode = Object.freeze({\n  EDIT: 0,\n  SIMULATION: 1\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const shape = Shape.createInitialShape();\n\n    this.state = {\n      mode: AppMode.EDIT,\n      shape: shape,\n      activePlaceableId: 0,\n      historyEntries: [],\n      historyIndex: -1\n    };\n    this.figures = null;\n    this.figureRandomIndices = null;\n    this.figureIndex = -1;\n\n    this.addHistoryEntry(this.state, shape, 0);\n  }\n\n  addHistoryEntry(state, shape, activePlaceableId) {\n    let historyLength = state.historyIndex + 1;\n    const historyStart = (historyLength >= HISTORY_LENGTH_MAX ?\n        historyLength - HISTORY_LENGTH_MAX + 1 : 0);\n    historyLength = Math.min(historyLength, HISTORY_LENGTH_MAX - 1);\n    state.historyEntries = state.historyEntries.splice(historyStart, historyLength);\n    state.historyEntries.push({\n      shape: shape,\n      activePlaceableId: activePlaceableId\n    });\n    state.historyIndex = state.historyEntries.length - 1;\n  }\n\n  showFigure(name) {\n    const shape = ShapeFolder.build(name, this.figures);\n    if (shape) {\n      this.handleShapeChange(shape, true);\n    }\n  }\n\n  static shapeToArchive(shape) {\n    return JSON.stringify({\n      version: ARCHIVE_VERSION,\n      shape: shape.toArchive()\n    });\n  }\n\n  static archiveToShape(text) {\n    const archive = JSON.parse(text);\n    if (archive.version > ARCHIVE_VERSION) {\n      alert(\"Unsupported version: \" + archive.version);\n      return;\n    }\n    const shape = new Shape();\n    shape.fromArchive(archive.shape, archive.version);\n    shape.applyTransform();\n    return shape;\n  }\n\n  handleShapeChange(shape, reset = false, activePlaceableId = undefined) {\n    const nextState = {\n      shape: shape,\n      historyEntries: this.state.historyEntries,\n      historyIndex: this.state.historyIndex\n    };\n    if (reset || (this.state.activePlaceableId\n        && !shape.findPlaceable(this.state.activePlaceableId))) {\n      nextState.activePlaceableId = 0;\n    } else if (activePlaceableId) {\n      nextState.activePlaceableId = activePlaceableId;\n    }\n    this.addHistoryEntry(nextState, shape, nextState.activePlaceableId);\n    this.setState(nextState);\n  }\n\n  handleActivePlaceableChange(activePlaceableId) {\n    this.setState({ activePlaceableId: activePlaceableId });\n  }\n\n  handleHistoryChange(index) {\n    if ((index < 0) || (index >= this.state.historyEntries.length)) {\n      return;\n    }\n    const historyEntry = this.state.historyEntries[index];\n    const nextState = {\n      shape: historyEntry.shape,\n      activePlaceableId: historyEntry.activePlaceableId,\n      historyIndex: index\n    };\n    this.setState(nextState);\n  }\n\n  handleShapeReset() {\n    this.handleShapeChange(Shape.createInitialShape(), true);\n  }\n\n  handleShapeShowcase() {\n    if (!this.figures) {\n      fetch(\"res/figures.rsf\")\n        .then(response => response.json())\n        .then(data => {\n          this.figures = data;\n          this.figureRandomIndices =\n            [...Array(this.figures.definitions.length).keys()]\n            .map(a => ({sort: Math.random(), value: a}))\n            .sort((a, b) => a.sort - b.sort)\n            .map(a => a.value);\n          this.figureIndex = -1;\n          this.handleShapeShowcase();\n        });\n    } else {\n      this.figureIndex = (this.figureIndex + 1) % this.figureRandomIndices.length;\n      const figureName = this.figures.definitions[this.figureRandomIndices[this.figureIndex]].name;\n      this.showFigure(figureName);\n    }\n  }\n\n  handleShapeImport() {\n    const element = document.createElement(\"input\");\n    element.setAttribute(\"type\", \"file\");\n    element.setAttribute(\"accept\", ARCHIVE_EXTENSION);\n    element.addEventListener(\"change\", () => {\n      if (!element.files.length) {\n        return;\n      }\n      const file = element.files[0];\n      const reader = new FileReader();\n      reader.onload = ((e) => {\n        const shape = App.archiveToShape(e.target.result);\n        if (shape) {\n          this.handleShapeChange(shape, true);\n        }\n      });\n      reader.readAsText(file);\n    });\n    element.click();\n  }\n\n  handleShapeExport(shape) {\n    const name = prompt(\"Enter shape name: \");\n    if (!name) {\n      return;\n    }\n    const element = document.createElement(\"a\");\n    const content = App.shapeToArchive(shape);\n    const file = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n    element.href = URL.createObjectURL(file);\n    element.download = name + ARCHIVE_EXTENSION;\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  handleSimulationStart() {\n    this.setState({ mode: AppMode.SIMULATION });\n  }\n\n  handleSimulationStop() {\n    this.setState({ mode: AppMode.EDIT });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Viewport mode={this.state.mode} shape={this.state.shape}\n          activePlaceableId={this.state.activePlaceableId}\n          onShapeChange={(shape, activePlaceableId) => this.handleShapeChange(shape, false, activePlaceableId)}\n          onActivePlaceableChange={activePlaceableId => this.handleActivePlaceableChange(activePlaceableId)} />\n        <Toolbar mode={this.state.mode} shape={this.state.shape}\n          activePlaceableId={this.state.activePlaceableId}\n          historyEntries={this.state.historyEntries} historyIndex={this.state.historyIndex}\n          onShapeChange={shape => this.handleShapeChange(shape)}\n          onHistoryChange={index => this.handleHistoryChange(index)}\n          onShapeReset={() => this.handleShapeReset()}\n          onShapeShowcase={() => this.handleShapeShowcase()}\n          onShapeImport={() => this.handleShapeImport()}\n          onShapeExport={shape => this.handleShapeExport(shape)}\n          onSimulationStart={() => this.handleSimulationStart()}\n          onSimulationStop={() => this.handleSimulationStop()} />\n      </div>\n    );\n  }\n}\n\nexport default App;\nexport { AppMode };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}