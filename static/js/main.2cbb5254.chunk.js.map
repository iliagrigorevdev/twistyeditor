{"version":3,"sources":["PlaceableView.js","ShapeView.js","Collision.js","Transform.js","Placeable.js","Prism.js","Section.js","Shape.js","Viewport.js","ColorPicker.js","Toolbar.js","ShapeFolder.js","Exporter.js","Config.js","Worker.worker.js","RigidInfo.js","VecMath.js","App.js","serviceWorker.js","index.js"],"names":["PlaceableView","placeable","renderable","this","ShapeView","shape","showSections","viewport","placeableViews","Map","prisms","prism","set","id","createPrismView","sections","section","createSectionView","syncTransform","createPrismRenderable","createSectionRenderable","forEach","placeableView","destroyRenderable","get","scene","addEntity","remove","setRenderableTransform","worldPosition","worldOrientation","auxVec1","vec3","create","auxVec2","auxVec3","auxVec4","intersectTriangle","ray","p1","p2","p3","edge1","sub","edge2","pvec","cross","direction","det","dot","tvec","origin","u","qvec","v","intersectSphere","center","radius","rayorig","squaredRadius","squaredRayLength","squaredLength","a","b","d","sqrtD","Math","sqrt","t","projectVerticesOntoAxis","axis","vertices","dmin","dmax","i","length","overlapProjectionsOntoAxis","vertices1","vertices2","eps","rayToPointDistance","point","vector","projection","scale","distance","createTransform","position","orientation","quat","rotatedTransform","transform","pivot","angle","rotation","setAxisAngle","transformQuat","add","mul","normalize","multiplyTransforms","out","t1","t2","inverseTransform","invert","negate","Placeable","parentOrientation","multiply","translation","copy","JunctionFace","Object","freeze","LEFT","RIGHT","FRONT","BACK","BOTTOM","PRISM_HALF_HEIGHT","PRISM_SIDE","PRISM_HALF_SIDE","PRISM_VERTICES","fromValues","PRISM_MARGIN","PRISM_MARGIN_DIAG","cos","PI","PRISM_COLLISION_VERTICES","PRISM_TRIANGLE_INDICES","PRISM_POLYGON_NORMALS","map","indices","p0","normal","PRISM_LEFT_SLOPE_PIVOT_POINT","PRISM_RIGHT_SLOPE_PIVOT_POINT","PRISM_SIDE_PIVOT_Y","PRISM_LEFT_SLOPE_NORMAL","rotateZ","PRISM_RIGHT_SLOPE_NORMAL","PRISM_LEFT_TRANSFORM","fromEuler","PRISM_RIGHT_TRANSFORM","PRISM_JUNCTIONS","face","swapColors","tangent","transforms","coincideVertices","v1","v2","squaredDistance","coincideTriangleVertices","i11","i12","i13","i21","i22","i23","coincideRectangleVertices","i14","i24","coincideSquareVertices","Prism","colorMask","backgroundColor","foregroundColor","vertex","clone","collisionVertices","polygonNormals","hitDistance","triangleHitDistance","undefined","intersectTriangles","polygonNormals1","polygonNormals2","every","polygonNormal1","polygonNormal2","junctions","junction","junctionPrisms","j","junctionTransform","push","faceName","coincidingFace","coincideFace","baseFace","targetFace","archive","SectionType","SEPARATOR","ACTUATOR","SWAP_ROTATION","SECTION_PROPERTIES","name","min","max","default","Section","type","basePrismId","targetPrismId","properties","cylinder","A","dp","B","D","k","cp1","cp2","height","cd1","cd2","d1","d2","intersectCylinder","centered","cylinderPosition","createCylinder","mergedProperties","sectionProperties","sectionProperty","value","has","mergedProperty","assign","find","property","getProperty","validatePropertyValue","isNaN","Array","from","entries","version","DEGREES_TO_RADIANS","Shape","lastPlaceableId","roll","pitch","yaw","showPose","aabb","rotateY","rotateX","alignHorizontally","getOrientation","zero","applyTransform","inverseOrientation","x","z","translate","rotate","hitPlaceable","prismHitDistance","intersect","sectionHitDistance","otherPrism","collides","getJunctions","junctionPrism","filter","shapePrism","some","binormal","fromMat3","mat3","parts","suitableParts","part","partPrism","coincidence","coincide","suitablePart","concat","apply","includes","partChains","remainingParts","Set","size","values","next","partChain","findChildParts","delete","sort","reduce","acc","val","otherPartChain","otherPart","splice","basePrism","findPlaceable","targetPrism","basePart","targetPart","console","log","rootPart","parentPart","parentSection","bidirectional","childParts","sectionRefs","findValidSectionRefs","childPart","positionInversed","initialAngle","getPropertyValue","discoverParts","childPrisms","flat","childSections","toArchive","prismArchive","fromArchive","sectionArchive","lastPrismId","RADIANS_TO_DEGREES","ELEVATION_LIMIT","DEFAULT_ELEVATION","DEFAULT_HEADING","FOG_COLOR","HIGHLIGHT_PRIMARY_COLOR","HIGHLIGHT_ALTERNATE_COLOR","SECTION_COLORS","INDICATION_COLOR","CREATION_COLOR","iblUrl","prismMeshUrl","prismMaterialUrl","ghostMaterialUrl","highcolMaterialUrl","knobMeshUrl","groundMaterialUrl","groundTextureUrl","sectionMeshUrl","getPrismTextureUrl","maskIndex","colorToFloat3","color","rgb","tinycolor","toRgb","r","g","colorToFloat4","Viewport","props","auxMat4","mat4","auxTransform","assets","window","Filament","init","prevProps","modeChanged","mode","shapeChanged","originalShape","trainingStateChanged","trainingState","refreshShapeView","prepareGoalView","updateShapeView","updateGoalView","goalPosition","engine","shapeView","destroy","AppMode","EDIT","finalShape","addToScene","activePlaceableView","activePlaceable","activePlaceableId","selectPlaceable","goalShape","JSON","parse","goalView","removeFromScene","elevation","heading","focalLengthMin","focalLengthMax","cameraZoom","targetZoom","lastZoom","focalPoint","targetPosition","lastPosition","highlightColor","animationTimer","highlightTimer","availableJunctions","originalAvailableJunctions","pressing","dragging","pickedPlaceable","pickedJunction","activeJunctionPrism","pointerX","pointerY","canvas","filament","Engine","camera","createCamera","EntityManager","createScene","sunlight","LightManager","Builder","LightManager$Type","SUN","intensity","sunAngularRadius","sunHaloSize","sunHaloFalloff","castShadows","build","indirectLight","createIblFromKtx","setIntensity","setIndirectLight","prismMaterial","createMaterial","prismMesh","loadFilamesh","ghostMaterial","ghostRenderable","createRenderable","createGhostMaterial","highcolMaterial","knobMesh","knobRenderables","sectionMesh","sectionRenderables","prismTextures","createTextureFromPng","prismTextureSampler","TextureSampler","MinFilter","LINEAR_MIPMAP_LINEAR","MagFilter","LINEAR","WrapMode","CLAMP_TO_EDGE","ground","createGround","swapChain","createSwapChain","renderer","createRenderer","view","createView","setCamera","setScene","setFogOptions","enabled","setClearOptions","clearColor","clear","resize","renderFrame","bind","addEventListener","requestAnimationFrame","e","handlePointerDown","handlePointerUp","handlePointerMove","halfSize","gridSize","vb","VertexBuffer","vertexCount","bufferCount","attribute","VertexAttribute","POSITION","VertexBuffer$AttributeType","FLOAT3","UV0","FLOAT2","setBufferAt","Float32Array","reps","ib","IndexBuffer","indexCount","bufferType","IndexBuffer$IndexType","USHORT","setBuffer","Uint16Array","material","texture","sampler","REPEAT","materialInstance","getDefaultInstance","setTextureParameter","entity","RenderableManager","boundingBox","halfExtent","geometry","RenderableManager$PrimitiveType","TRIANGLES","receiveShadows","mesh","getBoundingBox","vertexBuffer","indexBuffer","getRenderableMaterial","destroyMaterialInstance","destroyEntity","getRenderableManager","createInstance","setColor4Parameter","RgbaType","sRGB","setColor3Parameter","validColorMask","RgbType","createHighcolMaterial","renderableManager","renderableInstance","getInstance","getAxisAlignedBoundingBox","transformManager","getTransformManager","transformInstance","fromRotationTranslation","setTransform","getMaterialInstanceAt","eye","lookAt","fl","focalLength","fovY","atan","aspect","width","setProjectionFov","Camera$Fov","VERTICAL","baseLink","rigidInfo","baseLinks","partTransform","link","links","updateFollowPosition","prismId","viewTransform","viewTransforms","findPlaceableView","equals","timestamp","lastTime","deltaTime","lerp","updateCamera","abs","highlightIntensity","HIGHLIGHT_OPAQUE_BLEND","setHighlightIntensity","render","dpr","devicePixelRatio","innerWidth","innerHeight","setViewport","pointerType","isPrimary","isPrimaryPointer","junctionIntersection","getCastingRay","clientX","clientY","placeableIntersection","intersectJunctions","hitJunction","activatePrismSection","activatePrismKnob","junctionIndex","indexOf","originalPickedJunction","addSection","activeJunctionPrismIndex","findIndex","originalActiveJunctionPrism","addPrism","hideGhostPrism","showPrismKnobs","showPrismSections","dx","dy","nearestJunctionPrism","pickNearestJunctionPrism","showGhostPrism","POINTER_DRAG_THRESHOLD","autoFovY","viewRotation","fromMat4","getViewMatrix","invAspect","transformMat3","widthFitFovY","heightFitFovY","autoZoom","tan","y","rayVec","vec4","transformMat4","Camera","inverseProjection","getProjectionMatrix","getModelMatrix","getPosition","junctionHitDistance","rayDistance","prismRayDistance","animate","notify","updateHighlightColor","originalPlaceable","getAvailableJunctions","hidePrismKnobs","hidePrismSections","computeAutoZoom","onActivePlaceableChange","onShapeChange","placeableColor","colorStr","readability","createGhostKnobRenderable","knobRenderable","setGhostColor","activeJunction","index","createGhostSectionRenderable","sectionRenderable","className","ref","Component","ColorPicker","state","displayColorPicker","setState","onChange","hex","handleHideColorPicker","styles","reactCSS","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","style","onClick","handleToggleColorPicker","handleColorChange","Toolbar","prevShape","shapeModifier","prevPlaceable","placeableModifier","modifyShape","parseFloat","prevPrism","modifyPlaceable","parseInt","prevSection","setPropertyValue","swap","prevConfig","config","stringify","split","Number","onConfigChange","time","floor","toString","padStart","s","charAt","toUpperCase","slice","join","htmlFor","handleNameChange","target","step","handleRollChange","handlePitchChange","handleYawChange","checked","handleShowPoseChange","onShapeReset","onShapeShowcase","onArchiveSave","onArchiveLoad","disabled","onTrainingStart","TRAINING","PLAY","onTrainingStop","onTrainingPlay","trainingSteps","totalSteps","trainingValue","formatTime","trainingTime","keys","key","getPropertyLabel","isArray","handleConfigChange","COLOR_MASK_COUNT","handleColorMaskChange","handleBackgroundColorChange","handleForegroundColorChange","handleSwapColors","handleDeletePrism","handleSectionTypeChange","typeName","substring","toLowerCase","getProperties","handleSectionPropertyChange","handleSwapSection","handleDeleteSection","renderPrismParams","renderSectionParams","renderShapeParams","historyIndex","onHistoryChange","historyEntries","renderHistory","renderParams","ShapeFolder","pieceCount","notation","tokens","token","pos","downwardPrismNumberStr","twistsStr","twists","twist","ccw","twistAngle","twistPrism","rotations","shapeRotation","aa","figures","definition","definitions","skin","compileSkin","shapeFolder","pieces","colors","mask","fold","applyRotations","startPos","delimPos","lastIndexOf","skinName","skinDefinition","skins","skinPattern","patterns","pattern","shapeColors","colorNumbers","prismColors","colorNumber","colorName","reverse","vectorToString","precision","toFixed","transformToString","quad","Exporter","lines","mass","inertia","localTransforms","localTransform","joints","joint","targetLink","lowerAngle","upperAngle","power","Config","trainingStartSteps","trainingInterval","checkpointSteps","discount","batchSize","randomSteps","replayBufferSize","learningRate","interpolation","hiddenLayerSizes","Worker_fn","Worker","PRISM_CG_DY","PRISM_MASS_OFFSET","PRISM_MASS_OFFSET_INVERSED","PRISM_MASS","PRISM_INERTIA_FACTOR","PRISM_INERTIA_X","PRISM_INERTIA_Y","PRISM_INERTIA_Z","RigidInfo","prismCollisionMargin","prismCollisionVertices","createLink","createJoint","discoverPartChains","p","partOrigin","tensor","mat1","mat2","basis","fromQuat","prismOrigin","px","py","pz","multiplyScalar","principalRotation","mat","threshold","maxSteps","rot","q","sin","mpq","theta","theta2","mrp","mrq","diagonalizeMatrix","childTransform","worldTransform","principalAxis","principalAngle","getAxisAngle","basePartIndex","targetPartIndex","ARCHIVE_EXTENSION","LOADING","getStringHash","str","hash","charCodeAt","App","createInitialShape","figureRandomIndices","figureIndex","shapeData","checkpoint","database","worker","playing","addHistoryEntry","historyLength","historyStart","HISTORY_LENGTH_MAX","handleShapeChange","reset","ensureEditMode","nextState","applyInitialAngles","hasPrismIntersections","historyEntry","figureName","showFigure","fetch","then","response","json","data","random","handleShapeShowcase","uploadFile","content","alert","generateShapeData","downloadFile","terminate","activeJointCount","loadCheckpoint","handleAppModeChange","onmessage","handleWorkerMessage","postMessage","steps","Date","now","saveCheckpoint","exporter","export","createCheckpoint","editMode","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","extension","onload","setAttribute","files","reader","FileReader","result","readAsText","ondone","getRequest","transaction","objectStore","onsuccess","onerror","openDatabase","putRequest","put","openRequest","indexedDB","open","onupgradeneeded","objectStoreNames","contains","createObjectStore","keyPath","handleActivePlaceableChange","handleHistoryChange","handleShapeReset","handleArchiveSave","handleArchiveLoad","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2cbb5254.chunk.js","sourcesContent":["class PlaceableView {\n  constructor(placeable, renderable) {\n    this.placeable = placeable;\n    this.renderable = renderable;\n  }\n}\n\nexport default PlaceableView;\n","import PlaceableView from './PlaceableView';\n\nclass ShapeView {\n  constructor(shape, showSections, viewport) {\n    this.shape = shape;\n\n    this.placeableViews = new Map();\n    for (const prism of this.shape.prisms) {\n      this.placeableViews.set(prism.id, this.createPrismView(prism, viewport));\n    }\n    if (showSections) {\n      for (const section of this.shape.sections) {\n        this.placeableViews.set(section.id, this.createSectionView(section, viewport));\n      }\n    }\n\n    this.syncTransform(viewport);\n  }\n\n  createPrismView(prism, viewport) {\n    const renderable = viewport.createPrismRenderable(prism);\n    return new PlaceableView(prism, renderable);\n  }\n\n  createSectionView(section, viewport) {\n    const renderable = viewport.createSectionRenderable(section);\n    return new PlaceableView(section, renderable);\n  }\n\n  destroy(viewport) {\n    this.placeableViews.forEach(placeableView => viewport.destroyRenderable(placeableView.renderable));\n    this.placeableViews = null;\n  }\n\n  findPlaceableView(id) {\n    return this.placeableViews.get(id);\n  }\n\n  addToScene(viewport) {\n    this.placeableViews.forEach(placeableView => viewport.scene.addEntity(placeableView.renderable));\n  }\n\n  removeFromScene(viewport) {\n    this.placeableViews.forEach(placeableView => viewport.scene.remove(placeableView.renderable));\n  }\n\n  syncTransform(viewport) {\n    this.placeableViews.forEach(placeableView =>\n        viewport.setRenderableTransform(placeableView.renderable, placeableView.placeable.worldPosition,\n            placeableView.placeable.worldOrientation));\n  }\n}\n\nexport default ShapeView;\n","import { vec3 } from 'gl-matrix';\n\nconst auxVec1 = vec3.create();\nconst auxVec2 = vec3.create();\nconst auxVec3 = vec3.create();\nconst auxVec4 = vec3.create();\n\nfunction intersectTriangles(ray, vertices, indices) {\n  let hitDistance;\n  for (let i = 0; i < indices.length; i += 3) {\n    const triangleHitDistance = intersectTriangle(ray,\n        vertices[indices[i]], vertices[indices[i + 1]], vertices[indices[i + 2]]);\n    if (triangleHitDistance !== undefined) {\n      if ((hitDistance === undefined) || (triangleHitDistance < hitDistance)) {\n        hitDistance = triangleHitDistance;\n      }\n    }\n  }\n  return hitDistance;\n}\n\nfunction intersectTriangle(ray, p1, p2, p3) {\n  const edge1 = vec3.sub(auxVec1, p2, p1);\n  const edge2 = vec3.sub(auxVec2, p3, p1);\n  const pvec = vec3.cross(auxVec3, ray.direction, edge2);\n  const det = vec3.dot(edge1, pvec);\n  if (det < 1e-6) {\n    return;\n  }\n  const tvec = vec3.sub(auxVec4, ray.origin, p1);\n  const u = vec3.dot(tvec, pvec);\n  if ((u < 0) || (u > det)) {\n    return;\n  }\n  const qvec = vec3.cross(auxVec4, tvec, edge1);\n  const v = vec3.dot(ray.direction, qvec);\n  if ((v < 0) || (u + v > det)) {\n    return;\n  }\n  return vec3.dot(edge2, qvec) / det;\n}\n\nfunction intersectSphere(ray, center, radius) {\n  const rayorig = vec3.sub(auxVec1, ray.origin, center);\n  const squaredRadius = radius * radius;\n  const squaredRayLength = vec3.squaredLength(rayorig);\n\n  if (squaredRayLength <= squaredRadius) {\n    return 0; // inside hit\n  }\n\n  const a = vec3.dot(ray.direction, ray.direction);\n  const b = 2 * vec3.dot(rayorig, ray.direction);\n  const c = squaredRayLength - squaredRadius;\n  const d = b * b - (4 * a * c);\n  if (d >= 0) {\n    const sqrtD = Math.sqrt(d);\n    let t = (-b - sqrtD) / (2 * a);\n    if (t < 0) {\n      t = (-b + sqrtD) / (2 * a);\n    }\n    return t; // nearest surface hit\n  }\n}\n\n// Cylinder geometry\n//  .-----.\n// '._____.'\n// |       |\n// |   ^ N | H\n// |.--|--.|\n// '._____.' R\n//     P\nfunction createCylinder(position, normal, radius, height, centered = false) {\n  const cylinderPosition = vec3.create();\n  if (centered) {\n    vec3.scale(cylinderPosition, normal, -0.5 * height);\n    vec3.add(cylinderPosition, cylinderPosition, position);\n  } else {\n    vec3.copy(cylinderPosition, position);\n  }\n  return {\n    position: cylinderPosition,\n    normal: vec3.clone(normal),\n    radius: radius,\n    height: height\n  };\n}\n\nfunction intersectCylinder(ray, cylinder) {\n  const a = vec3.sub(auxVec1, ray.direction, vec3.scale(auxVec1, cylinder.normal,\n      vec3.dot(ray.direction, cylinder.normal)));\n  const A = vec3.dot(a, a);\n  if (A < 1e-12) {\n    return;\n  }\n  const dp = vec3.sub(auxVec2, ray.origin, cylinder.position);\n  const b = vec3.sub(auxVec3, dp, vec3.scale(auxVec3, cylinder.normal, vec3.dot(dp, cylinder.normal)));\n  const B = 2 * vec3.dot(a, b);\n  const C = vec3.dot(b, b) - cylinder.radius * cylinder.radius;\n\n  const d = B * B - 4 * A * C;\n  if (d < 0) {\n    return;\n  }\n  const D = Math.sqrt(d);\n  const k = 1 / (2 * A);\n  const t1 = k * (-B - D);\n  const t2 = k * (-B + D);\n  if ((t1 < 0) && (t2 < 0)) {\n    return;\n  }\n\n  const cp1 = cylinder.position;\n  const cp2 = vec3.add(auxVec1, vec3.scale(auxVec1, cylinder.normal, cylinder.height), cylinder.position);\n  const cd1 = vec3.dot(cylinder.normal, cp1);\n  const cd2 = vec3.dot(cylinder.normal, cp2);\n  if (t1 >= 0) {\n    const p1 = vec3.add(auxVec1, vec3.scale(auxVec1, ray.direction, t1), ray.origin);\n    const d1 = vec3.dot(cylinder.normal, p1);\n    if ((cd1 - d1) * (cd2 - d1) < 0) {\n      return t1;\n    }\n  }\n  if (t2 >= 0) {\n    const p2 = vec3.add(auxVec1, vec3.scale(auxVec1, ray.direction, t2), ray.origin);\n    const d2 = vec3.dot(cylinder.normal, p2);\n    if ((cd1 - d2) * (cd2 - d2) < 0) {\n      return t2;\n    }\n  }\n}\n\nfunction projectVerticesOntoAxis(axis, vertices) {\n  let dmin = 0;\n  let dmax = 0;\n  for (let i = 0; i < vertices.length; i++) {\n    const d = vec3.dot(axis, vertices[i]);\n    if (i === 0) {\n      dmin = d;\n      dmax = d;\n    } else {\n      if (d < dmin) {\n        dmin = d;\n      }\n      if (d > dmax) {\n        dmax = d;\n      }\n    }\n  }\n  return {\n    dmin: dmin,\n    dmax: dmax\n  };\n}\n\nfunction overlapProjectionsOntoAxis(axis, vertices1, vertices2, eps = 1e-3) {\n  if ((vertices1.length === 0) || (vertices2.length === 0)) {\n    return false;\n  }\n  let p1 = projectVerticesOntoAxis(axis, vertices1);\n  let p2 = projectVerticesOntoAxis(axis, vertices2);\n  return (p1.dmin + eps < p2.dmax) && (p2.dmin + eps < p1.dmax);\n}\n\nfunction collideConvexHulls(vertices1, polygonNormals1, vertices2, polygonNormals2) {\n  return polygonNormals1.every(polygonNormal1 =>\n          overlapProjectionsOntoAxis(polygonNormal1, vertices1, vertices2))\n      && polygonNormals2.every(polygonNormal2 =>\n          overlapProjectionsOntoAxis(polygonNormal2, vertices1, vertices2));\n}\n\nfunction rayToPointDistance(ray, point) {\n  const vector = vec3.sub(auxVec1, point, ray.origin);\n  const projection = vec3.scale(auxVec2, ray.direction, vec3.dot(vector, ray.direction));\n  return vec3.distance(vector, projection);\n}\n\nexport { intersectTriangles, intersectSphere, createCylinder, intersectCylinder,\n    collideConvexHulls, rayToPointDistance };\n","import { vec3, quat } from 'gl-matrix';\n\nfunction createTransform(position = vec3.create(), orientation = quat.create()) {\n  return {\n    position: position,\n    orientation: orientation\n  };\n}\n\nfunction rotatedTransform(transform, pivot, axis, angle) {\n  const rotation = quat.setAxisAngle(quat.create(), axis, angle);\n  const position = vec3.sub(vec3.create(), transform.position, pivot);\n  vec3.transformQuat(position, position, rotation);\n  vec3.add(position, position, pivot);\n  const orientation = quat.mul(rotation, rotation, transform.orientation);\n  quat.normalize(orientation, orientation);\n  return createTransform(position, orientation);\n}\n\nfunction multiplyTransforms(out, t1, t2) {\n  vec3.transformQuat(out.position, t2.position, t1.orientation);\n  vec3.add(out.position, out.position, t1.position);\n  quat.mul(out.orientation, t1.orientation, t2.orientation);\n  quat.normalize(out.orientation, out.orientation);\n  return out;\n}\n\nfunction inverseTransform(out, t) {\n  quat.invert(out.orientation, t.orientation);\n  vec3.negate(out.position, t.position);\n  vec3.transformQuat(out.position, out.position, out.orientation);\n  return out;\n}\n\nexport { createTransform, rotatedTransform, multiplyTransforms, inverseTransform };\n","import { vec3, quat } from 'gl-matrix';\n\nclass Placeable {\n  constructor() {\n    this.id = 0;\n    this.position = vec3.create();\n    this.orientation = quat.create();\n    this.worldPosition = vec3.create();\n    this.worldOrientation = quat.create();\n  }\n\n  applyTransform(parentOrientation) {\n    vec3.transformQuat(this.worldPosition, this.position, parentOrientation);\n    quat.multiply(this.worldOrientation, parentOrientation, this.orientation);\n  }\n\n  translate(translation) {\n    vec3.add(this.position, this.position, translation);\n  }\n\n  rotate(rotation) {\n    vec3.transformQuat(this.position, this.position, rotation);\n    quat.multiply(this.orientation, rotation, this.orientation);\n    quat.normalize(this.orientation, this.orientation);\n  }\n\n  copy(placeable) {\n    this.id = placeable.id;\n    vec3.copy(this.position, placeable.position);\n    quat.copy(this.orientation, placeable.orientation);\n    vec3.copy(this.worldPosition, placeable.worldPosition);\n    quat.copy(this.worldOrientation, placeable.worldOrientation);\n  }\n}\n\nexport default Placeable;\n","import { vec3, quat } from 'gl-matrix';\nimport { intersectTriangles, collideConvexHulls } from './Collision';\nimport { createTransform, rotatedTransform, multiplyTransforms } from './Transform';\nimport Placeable from './Placeable';\n\nconst JunctionFace = Object.freeze({\n  LEFT: 0,\n  RIGHT: 1,\n  FRONT: 2,\n  BACK: 3,\n  BOTTOM: 4\n});\n\nconst PRISM_HEIGHT = 1.0;\nconst PRISM_HALF_HEIGHT = 0.5 * PRISM_HEIGHT;\nconst PRISM_BASE = 2.0 * PRISM_HEIGHT;\nconst PRISM_HALF_BASE = 0.5 * PRISM_BASE;\nconst PRISM_SIDE = Math.sqrt(PRISM_BASE);\nconst PRISM_HALF_SIDE = 0.5 * PRISM_SIDE;\nconst PRISM_DISTANCE = 0.5 * PRISM_BASE;\nconst PRISM_HALF_DISTANCE = 0.5 * PRISM_DISTANCE;\n\n// Prism geometry\n//     2\n//     /\\\n//    /| \\\n//   / |  \\\n// 0/  /\\  \\4\n//  | /3 \\ |\n//  |/    \\|\n//  /______\\\n// 1        5\nconst PRISM_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE)\n];\nconst PRISM_MARGIN = 0.04;\nconst PRISM_MARGIN_DIAG = PRISM_MARGIN * Math.cos(Math.PI / 4);\nconst PRISM_COLLISION_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT - 2 * PRISM_MARGIN_DIAG,\n      -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT - 2 * PRISM_MARGIN_DIAG,\n      PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN)\n];\nconst PRISM_POLYGON_INDICES = [\n  [ 0, 1, 2, 3 ], // left slope\n  [ 2, 3, 5, 4 ], // right slope\n  [ 1, 0, 4, 5 ], // bottom\n  [ 0, 2, 4 ], // back\n  [ 5, 3, 1 ] // front\n];\nconst PRISM_TRIANGLE_INDICES = [\n  0, 1, 2,  2, 1, 3, // left slope\n  2, 3, 4,  4, 3, 5, // right slope\n  4, 5, 0,  0, 5, 1, // bottom\n  0, 2, 4, // back\n  5, 3, 1 // front\n];\nconst PRISM_POLYGON_NORMALS = PRISM_POLYGON_INDICES.map(indices => {\n  const p0 = PRISM_COLLISION_VERTICES[indices[0]];\n  const p1 = PRISM_COLLISION_VERTICES[indices[1]];\n  const p2 = PRISM_COLLISION_VERTICES[indices[2]];\n  const normal = vec3.sub(vec3.create(), p1, p0);\n  vec3.cross(normal, normal, vec3.sub(vec3.create(), p2, p0));\n  return vec3.normalize(normal, normal);\n});\n\nconst PRISM_LEFT_SLOPE_PIVOT_POINT = vec3.fromValues(-PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_RIGHT_SLOPE_PIVOT_POINT = vec3.fromValues(PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_SIDE_PIVOT_Y = -PRISM_HALF_HEIGHT / 6;\nconst PRISM_LEFT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), 0.25 * Math.PI);\nconst PRISM_RIGHT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), -0.25 * Math.PI);\nconst PRISM_LEFT_TRANSFORM = createTransform(vec3.fromValues(-PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), -180, 0, 0));\nconst PRISM_RIGHT_TRANSFORM = createTransform(vec3.fromValues(PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), 180, 0, 0));\nconst PRISM_JUNCTIONS = [\n  {\n    face: JunctionFace.LEFT,\n    swapColors: true,\n    pivot: PRISM_LEFT_SLOPE_PIVOT_POINT,\n    normal: PRISM_LEFT_SLOPE_NORMAL,\n    tangent: PRISM_RIGHT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_LEFT_TRANSFORM,\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, 0.5 * Math.PI),\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, Math.PI),\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, -0.5 * Math.PI)\n    ]\n  },\n  {\n    face: JunctionFace.RIGHT,\n    swapColors: true,\n    pivot: PRISM_RIGHT_SLOPE_PIVOT_POINT,\n    normal: PRISM_RIGHT_SLOPE_NORMAL,\n    tangent: PRISM_LEFT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_RIGHT_TRANSFORM,\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, -0.5 * Math.PI),\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, Math.PI),\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, 0.5 * Math.PI)\n    ]\n  },\n  {\n    face: JunctionFace.FRONT,\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, 1),\n    tangent: vec3.fromValues(0, 1, 0),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, PRISM_SIDE))\n    ]\n  },\n  {\n    face: JunctionFace.BACK,\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, -PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, -1),\n    tangent: vec3.fromValues(0, 1, 0),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, -PRISM_SIDE))\n    ]\n  },\n  {\n    face: JunctionFace.BOTTOM,\n    swapColors: false,\n    pivot: vec3.fromValues(0, -PRISM_HALF_HEIGHT, 0),\n    normal: vec3.fromValues(0, -1, 0),\n    tangent: vec3.fromValues(0, 0, -1),\n    transforms: [\n      createTransform(vec3.fromValues(0, -PRISM_HEIGHT, 0),\n          quat.fromEuler(quat.create(), 180, 0, 0))\n    ]\n  }\n];\n\nconst COINCIDING_VERTICES_SQUARED_DISTANCE_MAX = 1e-3;\nfunction coincideVertices(v1, v2) {\n  return vec3.squaredDistance(v1, v2) < COINCIDING_VERTICES_SQUARED_DISTANCE_MAX;\n}\nfunction coincideTriangleVertices(vertices1, vertices2, i11, i12, i13, i21, i22, i23) {\n  return coincideVertices(vertices1[i11], vertices2[i21])\n      && coincideVertices(vertices1[i12], vertices2[i22])\n      && coincideVertices(vertices1[i13], vertices2[i23]);\n}\nfunction coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24) {\n  return coincideVertices(vertices1[i11], vertices2[i21])\n      && coincideVertices(vertices1[i12], vertices2[i22])\n      && coincideVertices(vertices1[i13], vertices2[i23])\n      && coincideVertices(vertices1[i14], vertices2[i24]);\n}\nfunction coincideSquareVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24) {\n  return coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i21, i22, i23, i24)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i22, i23, i24, i21)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i23, i24, i21, i22)\n      || coincideRectangleVertices(vertices1, vertices2, i11, i12, i13, i14, i24, i21, i22, i23);\n}\n\nclass Prism extends Placeable {\n  constructor() {\n    super();\n    this.colorMask = 0;\n    this.backgroundColor = \"#000\";\n    this.foregroundColor = \"#fff\";\n    this.vertices = PRISM_VERTICES.map(vertex => vec3.clone(vertex));\n    this.collisionVertices = PRISM_COLLISION_VERTICES.map(vertex => vec3.clone(vertex));\n    this.polygonNormals = PRISM_POLYGON_NORMALS.map(normal => vec3.clone(normal));\n  }\n\n  applyTransform(parentOrientation) {\n    super.applyTransform(parentOrientation);\n    for (let i = 0; i < this.vertices.length; i++) {\n      const vertex = this.vertices[i];\n      vec3.transformQuat(vertex, PRISM_VERTICES[i], this.worldOrientation);\n      vec3.add(vertex, vertex, this.worldPosition);\n    }\n    for (let i = 0; i < this.collisionVertices.length; i++) {\n      const vertex = this.collisionVertices[i];\n      vec3.transformQuat(vertex, PRISM_COLLISION_VERTICES[i], this.worldOrientation);\n      vec3.add(vertex, vertex, this.worldPosition);\n    }\n    for (let i = 0; i < this.polygonNormals.length; i++) {\n      vec3.transformQuat(this.polygonNormals[i], PRISM_POLYGON_NORMALS[i], this.worldOrientation);\n    }\n  }\n\n  intersect(ray) {\n    return intersectTriangles(ray, this.vertices, PRISM_TRIANGLE_INDICES);\n  }\n\n  collides(prism) {\n    return collideConvexHulls(this.collisionVertices, this.polygonNormals,\n        prism.collisionVertices, prism.polygonNormals);\n  }\n\n  getJunctions() {\n    const junctions = [];\n    const transform = createTransform(this.position, this.orientation);\n    for (let i = 0; i < PRISM_JUNCTIONS.length; i++) {\n      const junction = PRISM_JUNCTIONS[i];\n      const junctionPrisms = [];\n      for (let j = 0; j < junction.transforms.length; j++) {\n        const junctionTransform = multiplyTransforms(createTransform(),\n            transform, junction.transforms[j]);\n        const prism = new Prism();\n        prism.colorMask = this.colorMask;\n        prism.backgroundColor = (junction.swapColors) ? this.foregroundColor : this.backgroundColor;\n        prism.foregroundColor = (junction.swapColors) ? this.backgroundColor : this.foregroundColor;\n        vec3.copy(prism.position, junctionTransform.position);\n        quat.copy(prism.orientation, junctionTransform.orientation);\n        junctionPrisms.push(prism);\n      }\n      const pivot = vec3.transformQuat(vec3.create(), junction.pivot, this.orientation);\n      vec3.add(pivot, pivot, this.position);\n      const normal = vec3.transformQuat(vec3.create(), junction.normal, this.orientation);\n      const tangent = vec3.transformQuat(vec3.create(), junction.tangent, this.orientation);\n      junctions.push({\n        face: junction.face,\n        pivot: pivot,\n        normal: normal,\n        tangent: tangent,\n        prisms: junctionPrisms\n      });\n    }\n    return junctions;\n  }\n\n  coincideFace(prism, face) {\n    switch (face) {\n      case JunctionFace.LEFT:\n        if (coincideSquareVertices(this.vertices, prism.vertices, 0, 1, 3, 2, 4, 5, 3, 2)) {\n          return JunctionFace.RIGHT;\n        }\n        if (coincideSquareVertices(this.vertices, prism.vertices, 0, 1, 3, 2, 1, 0, 2, 3)) {\n          return JunctionFace.LEFT;\n        }\n        break;\n      case JunctionFace.RIGHT:\n        if (coincideSquareVertices(this.vertices, prism.vertices, 2, 3, 5, 4, 2, 3, 1, 0)) {\n          return JunctionFace.LEFT;\n        }\n        if (coincideSquareVertices(this.vertices, prism.vertices, 2, 3, 5, 4, 3, 2, 4, 5)) {\n          return JunctionFace.RIGHT;\n        }\n        break;\n      case JunctionFace.FRONT:\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 1, 3, 5, 0, 2, 4)) {\n          return JunctionFace.BACK;\n        }\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 1, 3, 5, 5, 3, 1)) {\n          return JunctionFace.FRONT;\n        }\n        break;\n      case JunctionFace.BACK:\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 0, 2, 4, 1, 3, 5)) {\n          return JunctionFace.FRONT;\n        }\n        if (coincideTriangleVertices(this.vertices, prism.vertices, 0, 2, 4, 4, 2, 0)) {\n          return JunctionFace.BACK;\n        }\n        break;\n      case JunctionFace.BOTTOM:\n        if (coincideRectangleVertices(this.vertices, prism.vertices, 0, 1, 5, 4, 4, 5, 1, 0)\n            || coincideRectangleVertices(this.vertices, prism.vertices, 0, 1, 5, 4, 1, 0, 4, 5)) {\n          return JunctionFace.BOTTOM;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  coincide(prism) {\n    for (const faceName in JunctionFace) {\n      const face = JunctionFace[faceName];\n      const coincidingFace = this.coincideFace(prism, face);\n      if (coincidingFace !== undefined) {\n        return {\n          baseFace: face,\n          targetFace: coincidingFace\n        }\n      }\n    }\n  }\n\n  toArchive() {\n    return {\n      id: this.id,\n      colorMask: this.colorMask,\n      backgroundColor: this.backgroundColor,\n      foregroundColor: this.foregroundColor,\n      position: this.position,\n      orientation: this.orientation\n    };\n  }\n\n  fromArchive(archive) {\n    this.id = archive.id;\n    this.colorMask = archive.colorMask;\n    this.backgroundColor = archive.backgroundColor;\n    this.foregroundColor = archive.foregroundColor;\n    vec3.copy(this.position, archive.position);\n    quat.copy(this.orientation, archive.orientation);\n  }\n\n  clone() {\n    const prism = new Prism();\n    prism.copy(this);\n    prism.colorMask = this.colorMask;\n    prism.backgroundColor = this.backgroundColor;\n    prism.foregroundColor = this.foregroundColor;\n    for (let i = 0; i < this.vertices.length; i++) {\n      vec3.copy(prism.vertices[i], this.vertices[i]);\n    }\n    for (let i = 0; i < this.collisionVertices.length; i++) {\n      vec3.copy(prism.collisionVertices[i], this.collisionVertices[i]);\n    }\n    for (let i = 0; i < this.polygonNormals.length; i++) {\n      vec3.copy(prism.polygonNormals[i], this.polygonNormals[i]);\n    }\n    return prism;\n  }\n}\n\nexport default Prism;\nexport { PRISM_HEIGHT, PRISM_BASE, PRISM_SIDE, PRISM_MARGIN };\nexport { JunctionFace };\n","import Placeable from './Placeable';\nimport { createCylinder, intersectCylinder } from './Collision';\nimport { vec3, quat } from 'gl-matrix';\n\nconst SectionType = Object.freeze({\n  SEPARATOR: 0,\n  ACTUATOR: 1\n});\n\nconst SECTION_RADIUS = 1;\nconst SECTION_DEPTH = 0.3;\nconst SWAP_ROTATION = quat.setAxisAngle(quat.create(),\n    vec3.fromValues(0, 1, 0), Math.PI);\n\nconst SECTION_PROPERTIES = new Map([\n  [SectionType.ACTUATOR, [\n    { name: \"initialAngle\", min: -180, max: 180, default: 0 },\n    { name: \"lowerAngle\", min: -180, max: 0, default: -90 },\n    { name: \"upperAngle\", min: 0, max: 180, default: 90 },\n    { name: \"power\", min: 0, max: 10000, default: 1000 }\n  ]]\n]);\n\nclass Section extends Placeable {\n  constructor() {\n    super();\n    this.type = SectionType.ACTUATOR;\n    this.baseFace = undefined;\n    this.targetFace = undefined;\n    this.basePrismId = 0;\n    this.targetPrismId = 0;\n    this.properties = new Map();\n  }\n\n  swap() {\n    [this.baseFace, this.targetFace] = [this.targetFace, this.baseFace];\n    [this.basePrismId, this.targetPrismId] = [this.targetPrismId, this.basePrismId];\n    quat.multiply(this.orientation, this.orientation, SWAP_ROTATION);\n    quat.normalize(this.orientation, this.orientation);\n  }\n\n  intersect(ray) {\n    const normal = vec3.fromValues(1, 0, 0);\n    vec3.transformQuat(normal, normal, this.worldOrientation);\n    const cylinder = createCylinder(this.worldPosition, normal,\n        SECTION_RADIUS, SECTION_DEPTH, true);\n    return intersectCylinder(ray, cylinder);\n  }\n\n  getProperties() {\n    const mergedProperties = [];\n    const sectionProperties = SECTION_PROPERTIES.get(this.type);\n    if (sectionProperties) {\n      for (const sectionProperty of sectionProperties) {\n        let value;\n        if (this.properties.has(sectionProperty.name)) {\n          value = this.properties.get(sectionProperty.name);\n        } else {\n          value = sectionProperty.default;\n        }\n        const mergedProperty = Object.assign({}, sectionProperty);\n        mergedProperty.value = value;\n        mergedProperties.push(mergedProperty);\n      }\n    }\n    return mergedProperties;\n  }\n\n  getProperty(name) {\n    const sectionProperties = SECTION_PROPERTIES.get(this.type);\n    if (sectionProperties) {\n      return sectionProperties.find(property => property.name === name);\n    }\n  }\n\n  getPropertyValue(name) {\n    if (this.properties.has(name)) {\n      return this.properties.get(name);\n    }\n    const property = this.getProperty(name);\n    if (property) {\n      return property.default;\n    }\n  }\n\n  setPropertyValue(name, value) {\n    this.properties.set(name, this.validatePropertyValue(name, value));\n  }\n\n  validatePropertyValue(name, value) {\n    const property = this.getProperty(name);\n    if (property) {\n      if (isNaN(value)) {\n        return property.default;\n      } else {\n        return Math.max(property.min, Math.min(property.max, value));\n      }\n    } else {\n      return value;\n    }\n  }\n\n  toArchive() {\n    return {\n      id: this.id,\n      type: this.type,\n      baseFace: this.baseFace,\n      targetFace: this.targetFace,\n      basePrismId: this.basePrismId,\n      targetPrismId: this.targetPrismId,\n      properties: Array.from(this.properties.entries()),\n      position: this.position,\n      orientation: this.orientation\n    };\n  }\n\n  fromArchive(archive, version) {\n    this.id = archive.id;\n    if (version >= 3) {\n      this.type = archive.type;\n      this.properties = new Map(archive.properties);\n    } else {\n      this.type = SectionType.SEPARATOR;\n    }\n    this.baseFace = archive.baseFace;\n    this.targetFace = archive.targetFace;\n    this.basePrismId = archive.basePrismId;\n    this.targetPrismId = archive.targetPrismId;\n    vec3.copy(this.position, archive.position);\n    quat.copy(this.orientation, archive.orientation);\n  }\n\n  clone() {\n    const section = new Section();\n    section.copy(this);\n    section.type = this.type;\n    section.baseFace = this.baseFace;\n    section.targetFace = this.targetFace;\n    section.basePrismId = this.basePrismId;\n    section.targetPrismId = this.targetPrismId;\n    section.properties = new Map(this.properties);\n    return section;\n  }\n}\n\nexport default Section;\nexport { SectionType };\n","import { mat3, quat, vec3 } from 'gl-matrix';\nimport Prism from './Prism';\nimport Section, { SectionType } from './Section';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst DEFAULT_BACKGROUND_COLOR = \"#1976d2\";\nconst DEFAULT_FOREGROUND_COLOR = \"#d9d9d9\";\n\nclass Shape {\n  constructor() {\n    this.name = \"\";\n    this.prisms = [];\n    this.sections = [];\n    this.lastPlaceableId = 0;\n    this.roll = 0;\n    this.pitch = 0;\n    this.yaw = 0;\n    this.showPose = true;\n    this.aabb = {\n      min: vec3.create(),\n      max: vec3.create(),\n      center: vec3.create()\n    };\n  }\n\n  static createInitialShape() {\n    const shape = new Shape();\n    const prism = new Prism();\n    prism.id = ++shape.lastPlaceableId;\n    prism.backgroundColor = DEFAULT_BACKGROUND_COLOR;\n    prism.foregroundColor = DEFAULT_FOREGROUND_COLOR;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    return shape;\n  }\n\n  getOrientation() {\n    const orientation = quat.create();\n    quat.rotateY(orientation, orientation, this.yaw * DEGREES_TO_RADIANS);\n    quat.rotateX(orientation, orientation, this.roll * DEGREES_TO_RADIANS);\n    quat.rotateZ(orientation, orientation, this.pitch * DEGREES_TO_RADIANS);\n    return orientation;\n  }\n\n  applyTransform(alignHorizontally = false) {\n    const orientation = this.getOrientation();\n    for (let i = 0; i < 2; i++) {\n      vec3.zero(this.aabb.min);\n      vec3.zero(this.aabb.max);\n      for (let j = 0; j < this.prisms.length; j++) {\n        const prism = this.prisms[j];\n        prism.applyTransform(orientation);\n\n        // Compute axis aligned bounding box\n        for (let k = 0; k < prism.vertices.length; k++) {\n          const vertex = prism.vertices[k];\n          if ((j === 0) && (k === 0)) {\n            vec3.copy(this.aabb.min, vertex);\n            vec3.copy(this.aabb.max, vertex);\n          } else {\n            vec3.min(this.aabb.min, this.aabb.min, vertex);\n            vec3.max(this.aabb.max, this.aabb.max, vertex);\n          }\n        }\n      }\n\n      if (i === 0) {\n        // Align to ground\n        const inverseOrientation = quat.invert(quat.create(), orientation);\n        const x = (alignHorizontally ? -0.5 * (this.aabb.min[0] + this.aabb.max[0]) : 0);\n        const z = (alignHorizontally ? -0.5 * (this.aabb.min[2] + this.aabb.max[2]) : 0);\n        const translation = vec3.fromValues(x, -this.aabb.min[1], z);\n        vec3.transformQuat(translation, translation, inverseOrientation);\n        this.translate(translation);\n      } else {\n        for (const section of this.sections) {\n          section.applyTransform(orientation);\n        }\n\n        vec3.add(this.aabb.center, this.aabb.min, this.aabb.max);\n        vec3.scale(this.aabb.center, this.aabb.center, 0.5);\n      }\n    }\n  }\n\n  translate(translation) {\n    this.prisms.forEach(prism => prism.translate(translation));\n    this.sections.forEach(section => section.translate(translation));\n  }\n\n  rotate(rotation) {\n    this.prisms.forEach(prism => prism.rotate(rotation));\n    this.sections.forEach(section => section.rotate(rotation));\n  }\n\n  findPlaceable(id) {\n    if (!id) {\n      return null;\n    }\n    for (const prism of this.prisms) {\n      if (prism.id === id) {\n        return prism;\n      }\n    }\n    for (const section of this.sections) {\n      if (section.id === id) {\n        return section;\n      }\n    }\n    return null;\n  }\n\n  intersect(ray) {\n    let hitPlaceable;\n    let hitDistance;\n    for (const prism of this.prisms) {\n      const prismHitDistance = prism.intersect(ray);\n      if (prismHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (prismHitDistance < hitDistance)) {\n          hitPlaceable = prism;\n          hitDistance = prismHitDistance;\n        }\n      }\n    }\n    for (const section of this.sections) {\n      const sectionHitDistance = section.intersect(ray);\n      if (sectionHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (sectionHitDistance < hitDistance)) {\n          hitPlaceable = section;\n          hitDistance = sectionHitDistance;\n        }\n      }\n    }\n    if (!hitPlaceable) {\n      return;\n    }\n    return {\n      hitPlaceable: hitPlaceable,\n      hitDistance: hitDistance\n    };\n  }\n\n  hasPrismIntersections() {\n    for (let i = 0; i < this.prisms.length; i++) {\n      const prism = this.prisms[i];\n      for (let j = i + 1; j < this.prisms.length; j++) {\n        const otherPrism = this.prisms[j];\n        if (prism.collides(otherPrism)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  getAvailableJunctions(prism) {\n    const orientation = this.getOrientation();\n    let junctions = prism.getJunctions();\n    junctions.forEach(junction => {\n      junction.prisms.forEach(junctionPrism => junctionPrism.applyTransform(orientation));\n      junction.prisms = junction.prisms.filter(junctionPrism => this.prisms.every(shapePrism =>\n          (shapePrism === prism) || !shapePrism.collides(junctionPrism)));\n\n      if (junction.prisms.length === 0) {\n        for (const shapePrism of this.prisms) {\n          if (shapePrism === prism) {\n            continue;\n          }\n          const coincidingFace = prism.coincideFace(shapePrism, junction.face);\n          if (coincidingFace !== undefined) {\n            if (this.sections.some(section =>\n                ((section.basePrismId === prism.id) && (section.targetPrismId === shapePrism.id))\n                || ((section.basePrismId === shapePrism.id) && (section.targetPrismId === prism.id)))) {\n              continue;\n            }\n            const section = new Section();\n            const binormal = vec3.cross(vec3.create(), junction.normal, junction.tangent);\n            vec3.copy(section.position, junction.pivot);\n            quat.fromMat3(section.orientation, mat3.fromValues(\n                junction.normal[0], junction.normal[1], junction.normal[2],\n                junction.tangent[0], junction.tangent[1], junction.tangent[2],\n                binormal[0], binormal[1], binormal[2]));\n            section.baseFace = junction.face;\n            section.targetFace = coincidingFace;\n            section.basePrismId = prism.id;\n            section.targetPrismId = shapePrism.id;\n            section.applyTransform(orientation);\n            junction.section = section;\n            break;\n          }\n        }\n      }\n\n      vec3.transformQuat(junction.pivot, junction.pivot, orientation);\n      vec3.transformQuat(junction.normal, junction.normal, orientation);\n      vec3.transformQuat(junction.tangent, junction.tangent, orientation);\n    });\n    return junctions.filter(junction => (junction.prisms.length > 0) || junction.section);\n  }\n\n  discoverParts() {\n    let parts = [];\n    for (const prism of this.prisms) {\n      const suitableParts = [];\n      for (const part of parts) {\n        for (const partPrism of part) {\n          const coincidence = prism.coincide(partPrism);\n          if ((coincidence !== undefined) && this.sections.every(section =>\n              ((section.basePrismId !== prism.id) || (section.baseFace !== coincidence.baseFace))\n              && ((section.targetPrismId !== prism.id) || (section.targetFace !== coincidence.baseFace)))) {\n            suitableParts.push(part);\n            break;\n          }\n        }\n      }\n      let suitablePart;\n      if (suitableParts.length === 1) {\n        suitablePart = suitableParts[0];\n      } else if (suitableParts.length > 1) {\n        // Merge suitable parts\n        suitablePart = [].concat.apply([], suitableParts);\n        parts = parts.filter(part => !suitableParts.includes(part));\n        parts.push(suitablePart);\n      } else {\n        suitablePart = [];\n        parts.push(suitablePart);\n      }\n      suitablePart.push(prism);\n    }\n    return parts;\n  }\n\n  discoverPartChains(parts) {\n    const partChains = [];\n    const remainingParts = new Set(parts);\n    while (remainingParts.size > 0) {\n      const part = remainingParts.values().next().value;\n      const partChain = this.findChildParts(null, part, null, parts, false);\n      if (!partChain) {\n        return;\n      }\n      for (const part of partChain) {\n        remainingParts.delete(part);\n      }\n      partChains.push(partChain);\n    }\n    partChains.sort((a, b) => (a.length === b.length\n        ? b.reduce((acc, val) => acc + val.length) - a.reduce((acc, val) => acc + val.length)\n        : b.length - a.length));\n    for (let i = 0; i < partChains.length; i++) {\n      const partChain = partChains[i];\n      for (let j = i + 1; j < partChains.length; j++) {\n        const otherPartChain = partChains[j];\n        if (partChain.some(part => otherPartChain.some(otherPart => otherPart === part))) {\n          partChains.splice(j, 1);\n          j--;\n        }\n      }\n    }\n    return partChains;\n  }\n\n  findValidSectionRefs(section, parts) {\n    const basePrism = this.findPlaceable(section.basePrismId);\n    const targetPrism = this.findPlaceable(section.targetPrismId);\n    const basePart = parts.find(part => part.some(prism => prism === basePrism));\n    const targetPart = parts.find(part => part.some(prism => prism === targetPrism));\n    if (!basePart || !targetPart) {\n      console.log(\"Section parts not found\");\n    }\n    if (basePart === targetPart) {\n      console.log(\"Section must connect different parts\");\n    }\n    return {\n      basePart: basePart,\n      targetPart: targetPart\n    };\n  }\n\n  findChildParts(rootPart, parentPart, parentSection, parts, bidirectional, childParts = []) {\n    if (childParts.length === 0) {\n      childParts.push(parentPart);\n    }\n    for (const section of this.sections) {\n      if ((section.type === SectionType.SEPARATOR) || (section === parentSection)) {\n        continue;\n      }\n      const sectionRefs = this.findValidSectionRefs(section, parts);\n      if (!sectionRefs) {\n        return;\n      }\n      let childPart = (sectionRefs.basePart === parentPart ? sectionRefs.targetPart : null);\n      if (!childPart && bidirectional) {\n        childPart = (sectionRefs.targetPart === parentPart ? sectionRefs.basePart : null);\n      }\n      if (!childPart) {\n        continue;\n      }\n      if ((childPart === rootPart) || childParts.find(part => part === childPart)) {\n        console.log(\"Child parts must not be looped\");\n        return;\n      }\n      childParts.push(childPart);\n      if (!this.findChildParts(rootPart, childPart, section, parts, bidirectional, childParts)) {\n        return;\n      }\n    }\n    return childParts;\n  }\n\n  applyInitialAngles() {\n    let parts;\n    const positionInversed = vec3.create();\n    const axis = vec3.create();\n    const rotation = quat.create();\n    for (const section of this.sections) {\n      if (section.type !== SectionType.ACTUATOR) {\n        continue;\n      }\n      const initialAngle = section.getPropertyValue(\"initialAngle\");\n      if (initialAngle === 0) {\n        continue;\n      }\n      if (!parts) {\n        parts = this.discoverParts();\n      }\n      const sectionRefs = this.findValidSectionRefs(section, parts);\n      if (!sectionRefs) {\n        return;\n      }\n      const childParts = this.findChildParts(sectionRefs.basePart,\n          sectionRefs.targetPart, section, parts, true);\n      if (!childParts) {\n        console.log(\"Failed to apply initial angle\");\n        continue;\n      }\n      vec3.negate(positionInversed, section.position);\n      vec3.transformQuat(axis, vec3.set(axis, 1, 0, 0), section.orientation);\n      quat.setAxisAngle(rotation, axis, initialAngle * DEGREES_TO_RADIANS);\n      const childPrisms = childParts.flat();\n      const childSections = this.sections.filter(section => childPrisms.some(prism =>\n          (prism.id === section.basePrismId) || prism.id === section.targetPrismId));\n      [...childPrisms, ...childSections].forEach(placeable => {\n        if (placeable === section) {\n          return;\n        }\n        placeable.translate(positionInversed);\n        placeable.rotate(rotation);\n        placeable.translate(section.position);\n      });\n    }\n    if (parts) {\n      this.applyTransform();\n    }\n  }\n\n  toArchive() {\n    return {\n      name: this.name,\n      prisms: this.prisms.map(prism => prism.toArchive()),\n      sections: this.sections.map(section => section.toArchive()),\n      lastPlaceableId: this.lastPlaceableId,\n      roll: this.roll,\n      pitch: this.pitch,\n      yaw: this.yaw,\n      showPose: this.showPose\n    };\n  }\n\n  fromArchive(archive, version) {\n    this.prisms = archive.prisms.map(prismArchive => {\n      const prism = new Prism();\n      prism.fromArchive(prismArchive);\n      return prism;\n    });\n    if (version >= 2) {\n      this.sections = archive.sections.map(sectionArchive => {\n        const section = new Section();\n        section.fromArchive(sectionArchive, version);\n        return section;\n      });\n      this.lastPlaceableId = archive.lastPlaceableId;\n    } else {\n      this.lastPlaceableId = archive.lastPrismId;\n    }\n    this.roll = archive.roll;\n    this.pitch = archive.pitch;\n    this.yaw = archive.yaw;\n    if (version >= 3) {\n      this.name = archive.name;\n      this.showPose = archive.showPose;\n    }\n  }\n\n  clone() {\n    const shape = new Shape();\n    shape.name = this.name;\n    for (const prism of this.prisms) {\n      shape.prisms.push(prism.clone());\n    }\n    for (const section of this.sections) {\n      shape.sections.push(section.clone());\n    }\n    shape.lastPlaceableId = this.lastPlaceableId;\n    shape.roll = this.roll;\n    shape.pitch = this.pitch;\n    shape.yaw = this.yaw;\n    shape.showPose = this.showPose;\n    vec3.copy(shape.aabb.min, this.aabb.min);\n    vec3.copy(shape.aabb.max, this.aabb.max);\n    vec3.copy(shape.aabb.center, this.aabb.center);\n    return shape;\n  }\n}\n\nexport default Shape;\n","import React, { Component } from 'react';\nimport { vec3, vec4, quat, mat3, mat4 } from 'gl-matrix';\nimport ShapeView from './ShapeView';\nimport './App.css';\nimport tinycolor from 'tinycolor2';\nimport { intersectSphere, rayToPointDistance } from './Collision';\nimport { AppMode } from './App';\nimport Prism from './Prism';\nimport Section, { SectionType } from './Section';\nimport { createTransform, multiplyTransforms } from './Transform';\nimport Shape from './Shape';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\n\nconst COLOR_MASK_COUNT = 8;\nconst POINTER_DRAG_THRESHOLD = 3;\nconst POINTER_DRAG_THRESHOLD_SQUARED = POINTER_DRAG_THRESHOLD * POINTER_DRAG_THRESHOLD;\nconst POINTER_DRAG_FACTOR = 0.01;\nconst ELEVATION_LIMIT = 0.48 * Math.PI;\nconst CAMERA_ANIMATION_TIME = 0.3;\nconst CAMERA_ANIMATION_FOLLOW_TIME = 0.25 * CAMERA_ANIMATION_TIME;\nconst DEFAULT_ELEVATION = -Math.PI / 10;\nconst DEFAULT_HEADING = -Math.PI / 40;\n\nconst CAMERA_FOCAL_LENGTH_MIN = 15;\nconst CAMERA_FOCAL_LENGTH_MAX = 50;\nconst CAMERA_SENSOR_HEIGHT = 32;\nconst CAMERA_NEAR = 1;\nconst CAMERA_FAR = 300;\nconst CAMERA_DISTANCE = 10;\nconst SHAPE_FIT_SCALE = 1.1;\nfunction fovYToFocalLength(fovY) {\n  return 0.5 * CAMERA_SENSOR_HEIGHT / Math.tan(0.5 * fovY * DEGREES_TO_RADIANS);\n}\nfunction focalLengthToFovY(fl) {\n  return 2 * Math.atan(0.5 * CAMERA_SENSOR_HEIGHT / fl) * RADIANS_TO_DEGREES;\n}\n\nconst FOG_COLOR = \"#e6e6e6ff\";\nconst FOG_DISTANCE = 30;\nconst GROUND_HALF_SIZE = 1000;\nconst GROUND_GRID_SIZE = 4;\n\nconst HIGHLIGHT_PRIMARY_COLOR = \"#ffff40\";\nconst HIGHLIGHT_ALTERNATE_COLOR = \"#b266ff\";\nconst HIGHLIGHT_OPAQUE_BLEND = 0.8;\nconst HIGHLIGHT_START_BLEND = 0.3;\nconst HIGHLIGHT_RANGE_BLEND = HIGHLIGHT_OPAQUE_BLEND - HIGHLIGHT_START_BLEND;\nconst HIGHLIGHT_ANIMATION_TIME = 2;\n\nconst KNOB_RADIUS = 0.4;\n\nconst SECTION_COLORS = new Map([\n  [SectionType.SEPARATOR, \"#4caf50\"],\n  [SectionType.ACTUATOR, \"#ff9800\"]\n]);\nconst INDICATION_COLOR = \"#90caf960\";\nconst CREATION_COLOR = \"#fff59d60\";\n\nconst GOAL_ARCHIVE = \"{\\\"version\\\":3,\\\"shape\\\":{\\\"name\\\":\\\"Goal\\\",\\\"prisms\\\":[{\\\"id\\\":1,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":0,\\\"1\\\":0.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":0,\\\"1\\\":0,\\\"2\\\":0,\\\"3\\\":1}},{\\\"id\\\":2,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1,\\\"1\\\":0.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":1,\\\"1\\\":0,\\\"2\\\":0,\\\"3\\\":6.123234262925839e-17}},{\\\"id\\\":3,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":2,\\\"1\\\":0.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":1.2246468525851679e-16,\\\"1\\\":0,\\\"2\\\":0,\\\"3\\\":-1}},{\\\"id\\\":4,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1,\\\"1\\\":1.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":1.2246468525851679e-16,\\\"1\\\":0,\\\"2\\\":0,\\\"3\\\":-1}},{\\\"id\\\":5,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":0.5,\\\"1\\\":2,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":1.7934537957764396e-17,\\\"1\\\":-1.2989341566884322e-16,\\\"2\\\":-0.7071067690849304,\\\"3\\\":0.7071067690849304}},{\\\"id\\\":6,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":1.5,\\\"1\\\":2,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":-1.911257582981016e-16,\\\"1\\\":4.329780632585522e-17,\\\"2\\\":0.7071067690849304,\\\"3\\\":0.7071067690849304}},{\\\"id\\\":7,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1.5,\\\"1\\\":3,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":0.7071067690849304,\\\"1\\\":0.7071067690849304,\\\"2\\\":-2.3657788664006152e-24,\\\"3\\\":2.344235679326793e-16}},{\\\"id\\\":8,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":0.5000000596046448,\\\"1\\\":3,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":2.7772137756725695e-16,\\\"1\\\":4.329780301713277e-17,\\\"2\\\":-0.7071067690849304,\\\"3\\\":-0.7071067690849304}},{\\\"id\\\":9,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":0.5000001192092896,\\\"1\\\":4,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":-0.7071067690849304,\\\"1\\\":-0.7071067690849304,\\\"2\\\":-8.659560603426554e-17,\\\"3\\\":-3.210191872018346e-16}},{\\\"id\\\":10,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d32f2f\\\",\\\"foregroundColor\\\":\\\"#d9d9d9\\\",\\\"position\\\":{\\\"0\\\":1.5,\\\"1\\\":4,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":2.7772137756725695e-16,\\\"1\\\":4.329780301713277e-17,\\\"2\\\":-0.7071067690849304,\\\"3\\\":-0.7071067690849304}},{\\\"id\\\":11,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1,\\\"1\\\":4.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":-2.702926603918203e-16,\\\"1\\\":6.12323624815931e-17,\\\"2\\\":1,\\\"3\\\":0}},{\\\"id\\\":12,\\\"colorMask\\\":3,\\\"backgroundColor\\\":\\\"#d9d9d9\\\",\\\"foregroundColor\\\":\\\"#d32f2f\\\",\\\"position\\\":{\\\"0\\\":1,\\\"1\\\":5.5,\\\"2\\\":-1.5739213228225708},\\\"orientation\\\":{\\\"0\\\":-1.6550653361678656e-32,\\\"1\\\":1,\\\"2\\\":-1.9852334701272664e-23,\\\"3\\\":2.702926603918203e-16}}],\\\"sections\\\":[],\\\"lastPlaceableId\\\":12,\\\"roll\\\":0,\\\"pitch\\\":0,\\\"yaw\\\":0,\\\"showPose\\\":true}}\";\n\nconst iblUrl = \"res/environment_ibl.ktx\";\nconst prismMeshUrl = \"res/prism.filamesh\";\nconst prismMaterialUrl = \"res/prism.filamat\";\nconst ghostMaterialUrl = \"res/ghost.filamat\";\nconst highcolMaterialUrl = \"res/highcol.filamat\";\nconst knobMeshUrl = \"res/knob.filamesh\";\nconst groundMaterialUrl = \"res/ground.filamat\";\nconst groundTextureUrl = \"res/ground.png\";\nconst sectionMeshUrl = \"res/section.filamesh\";\n\nconst getPrismTextureUrl = ((maskIndex) => \"res/prism\" + maskIndex + \".png\");\nconst colorToFloat3 = ((color) => {\n  const rgb = tinycolor(color).toRgb();\n  return [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n});\nconst colorToFloat4 = ((color) => {\n  const rgb = tinycolor(color).toRgb();\n  return [rgb.r / 255, rgb.g / 255, rgb.b / 255, rgb.a];\n});\n\nclass Viewport extends Component {\n  constructor(props) {\n    super(props);\n\n    this.auxMat4 = mat4.create();\n    this.auxTransform = createTransform();\n  }\n\n  componentDidMount() {\n    let assets = [iblUrl, prismMeshUrl, prismMaterialUrl,\n        ghostMaterialUrl, highcolMaterialUrl, knobMeshUrl,\n        groundMaterialUrl, groundTextureUrl, sectionMeshUrl];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      assets.push(getPrismTextureUrl(i));\n    }\n    window.Filament.init(assets, () => {\n      this.init();\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const modeChanged = (prevProps.mode !== this.props.mode);\n    const shapeChanged = (prevProps.originalShape !== this.props.originalShape);\n    const trainingStateChanged = (prevProps.trainingState !== this.props.trainingState);\n    if (modeChanged || shapeChanged) {\n      this.refreshShapeView();\n    }\n    this.prepareGoalView();\n    if (trainingStateChanged) {\n      this.updateShapeView(this.props.trainingState.transforms);\n      this.updateGoalView(this.props.trainingState.goalPosition);\n    }\n  }\n\n  refreshShapeView() {\n    if (!this.engine) {\n      return;\n    }\n    if (this.shapeView) {\n      this.shapeView.destroy(this);\n    }\n    const showSections = (this.props.mode === AppMode.EDIT);\n    this.shapeView = new ShapeView(this.props.finalShape, showSections, this);\n    this.shapeView.addToScene(this);\n    this.activePlaceableView = null;\n    const activePlaceable = (this.props.mode === AppMode.EDIT\n        ? this.props.finalShape.findPlaceable(this.props.activePlaceableId) : null);\n    this.selectPlaceable(activePlaceable, true, false);\n  }\n\n  prepareGoalView() {\n    if (!this.engine) {\n      return;\n    }\n    if (!this.goalShape) {\n      const archive = JSON.parse(GOAL_ARCHIVE);\n      this.goalShape = new Shape();\n      this.goalShape.fromArchive(archive.shape, archive.version);\n      this.goalShape.applyTransform(true);\n    }\n    if (!this.goalView) {\n      if (this.props.mode !== AppMode.EDIT) {\n        this.goalView = new ShapeView(this.goalShape, false, this);\n      }\n    } else if (this.goalPosition) {\n      this.goalView.removeFromScene(this);\n    }\n    this.goalPosition = null;\n  }\n\n  init() {\n    this.elevation = DEFAULT_ELEVATION;\n    this.heading = DEFAULT_HEADING;\n    this.focalLengthMin = CAMERA_FOCAL_LENGTH_MIN;\n    this.focalLengthMax = CAMERA_FOCAL_LENGTH_MAX;\n    this.cameraZoom = 1;\n    this.targetZoom = this.cameraZoom;\n    this.lastZoom = this.cameraZoom;\n    this.focalPoint = vec3.create();\n    this.targetPosition = vec3.create();\n    this.lastPosition = vec3.create();\n    this.highlightColor = [0, 0, 0, 0];\n    this.animationTimer = 0;\n    this.highlightTimer = 0;\n\n    this.shapeView = null;\n    this.activePlaceableView = null;\n    this.availableJunctions = null;\n    this.originalAvailableJunctions = null;\n\n    this.goalPosition = null;\n    this.goalShape = null;\n    this.goalView = null;\n\n    this.pressing = false;\n    this.dragging = false;\n    this.pickedPlaceable = null;\n    this.pickedJunction = null;\n    this.activeJunctionPrism = null;\n    this.pointerX = 0;\n    this.pointerY = 0;\n\n    this.canvas = this.filament;\n    const engine = this.engine = window.Filament.Engine.create(this.canvas);\n    this.camera = engine.createCamera(window.Filament.EntityManager.get().create());\n    this.scene = engine.createScene();\n\n    const sunlight = window.Filament.EntityManager.get().create();\n    window.Filament.LightManager.Builder(window.Filament.LightManager$Type.SUN)\n      .color([0.98, 0.92, 0.89])\n      .intensity(70000.0)\n      .direction([0.6, -1.0, -0.8])\n      .sunAngularRadius(1.9)\n      .sunHaloSize(10.0)\n      .sunHaloFalloff(80.0)\n      .castShadows(true)\n      .build(engine, sunlight);\n    this.scene.addEntity(sunlight);\n\n    const indirectLight = engine.createIblFromKtx(iblUrl);\n    indirectLight.setIntensity(40000);\n    this.scene.setIndirectLight(indirectLight);\n\n    this.prismMaterial = engine.createMaterial(prismMaterialUrl);\n    this.prismMesh = engine.loadFilamesh(prismMeshUrl);\n    this.ghostMaterial = engine.createMaterial(ghostMaterialUrl);\n    this.ghostRenderable = this.createRenderable(this.createGhostMaterial(), this.prismMesh);\n    this.highcolMaterial = engine.createMaterial(highcolMaterialUrl);\n    this.knobMesh = engine.loadFilamesh(knobMeshUrl);\n    this.knobRenderables = [];\n    this.sectionMesh = engine.loadFilamesh(sectionMeshUrl);\n    this.sectionRenderables = [];\n\n    this.prismTextures = [];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      this.prismTextures.push(engine.createTextureFromPng(getPrismTextureUrl(i)));\n    }\n    this.prismTextureSampler = new window.Filament.TextureSampler(\n        window.Filament.MinFilter.LINEAR_MIPMAP_LINEAR,\n        window.Filament.MagFilter.LINEAR,\n        window.Filament.WrapMode.CLAMP_TO_EDGE);\n\n    const ground = this.createGround(GROUND_HALF_SIZE, GROUND_GRID_SIZE);\n    this.scene.addEntity(ground);\n\n    this.refreshShapeView();\n\n    this.swapChain = engine.createSwapChain();\n    this.renderer = engine.createRenderer();\n    this.view = engine.createView();\n    this.view.setCamera(this.camera);\n    this.view.setScene(this.scene);\n    this.view.setFogOptions({ color: colorToFloat3(FOG_COLOR), distance: FOG_DISTANCE, enabled: true });\n    this.renderer.setClearOptions({ clearColor: colorToFloat4(FOG_COLOR), clear: true });\n\n    this.resize();\n    this.renderFrame = this.renderFrame.bind(this);\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n    window.requestAnimationFrame(this.renderFrame);\n    this.canvas.addEventListener(\"pointerdown\", (e) => this.handlePointerDown(e));\n    this.canvas.addEventListener(\"pointerup\", (e) => this.handlePointerUp(e));\n    this.canvas.addEventListener(\"pointermove\", (e) => this.handlePointerMove(e));\n  }\n\n  createGround(halfSize, gridSize) {\n    const vb = window.Filament.VertexBuffer.Builder()\n      .vertexCount(4)\n      .bufferCount(2)\n      .attribute(window.Filament.VertexAttribute.POSITION, 0,\n          window.Filament.VertexBuffer$AttributeType.FLOAT3, 0, 12)\n      .attribute(window.Filament.VertexAttribute.UV0, 1,\n          window.Filament.VertexBuffer$AttributeType.FLOAT2, 0, 8)\n      .build(this.engine);\n    vb.setBufferAt(this.engine, 0, new Float32Array([\n      -halfSize, 0, -halfSize,\n      -halfSize, 0, halfSize,\n      halfSize, 0, -halfSize,\n      halfSize, 0, halfSize\n    ]));\n    const reps = 2 * halfSize / gridSize;\n    vb.setBufferAt(this.engine, 1, new Float32Array([0, 0, 0, reps, reps, 0, reps, reps]));\n\n    const ib = window.Filament.IndexBuffer.Builder()\n      .indexCount(6)\n      .bufferType(window.Filament.IndexBuffer$IndexType.USHORT)\n      .build(this.engine);\n    ib.setBuffer(this.engine, new Uint16Array([0, 1, 2, 2, 1, 3]));\n\n    const material = this.engine.createMaterial(groundMaterialUrl);\n    const texture = this.engine.createTextureFromPng(groundTextureUrl);\n    const sampler = new window.Filament.TextureSampler(\n        window.Filament.MinFilter.LINEAR_MIPMAP_LINEAR,\n        window.Filament.MagFilter.LINEAR,\n        window.Filament.WrapMode.REPEAT);\n    const materialInstance = material.getDefaultInstance();\n    materialInstance.setTextureParameter(\"baseColor\", texture, sampler);\n\n    const entity = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox({ center: [0, 0, 0], halfExtent: [halfSize, 0, halfSize] })\n      .material(0, materialInstance)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES, vb, ib)\n      .castShadows(false)\n      .receiveShadows(true)\n      .build(this.engine, entity);\n    return entity;\n  }\n\n  createRenderable(material, mesh, castShadows = false, receiveShadows = false) {\n    const renderable = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox(this.getBoundingBox(mesh.renderable))\n      .material(0, material)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES,\n          mesh.vertexBuffer, mesh.indexBuffer)\n      .castShadows(castShadows)\n      .receiveShadows(receiveShadows)\n      .build(this.engine, renderable);\n    return renderable;\n  }\n\n  destroyRenderable(renderable) {\n    const material = this.getRenderableMaterial(renderable);\n    this.engine.destroyMaterialInstance(material);\n    this.engine.destroyEntity(renderable);\n    const renderableManager = this.engine.getRenderableManager();\n    renderableManager.destroy(renderable);\n  }\n\n  createGhostMaterial() {\n    const material = this.ghostMaterial.createInstance();\n    material.setColor4Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat4(INDICATION_COLOR));\n    return material;\n  }\n\n  createHighcolMaterial(color) {\n    const material = this.highcolMaterial.createInstance();\n    material.setColor3Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat3(color));\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, [0, 0, 0, 0]);\n    return material;\n  }\n\n  createPrismRenderable(prism) {\n    const validColorMask = (prism.colorMask >= 0) && (prism.colorMask < COLOR_MASK_COUNT)\n        ? prism.colorMask : 0;\n    const material = this.prismMaterial.createInstance();\n    material.setTextureParameter(\"colorMask\",\n        this.prismTextures[validColorMask], this.prismTextureSampler);\n    material.setColor3Parameter(\"backgroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(prism.backgroundColor));\n    material.setColor3Parameter(\"foregroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(prism.foregroundColor));\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, [0, 0, 0, 0]);\n    return this.createRenderable(material, this.prismMesh, true, true);\n  }\n\n  createGhostKnobRenderable() {\n    return this.createRenderable(this.createGhostMaterial(), this.knobMesh);\n  }\n\n  createGhostSectionRenderable() {\n    return this.createRenderable(this.createGhostMaterial(), this.sectionMesh);\n  }\n\n  createSectionRenderable(section) {\n    return this.createRenderable(this.createHighcolMaterial(SECTION_COLORS.get(section.type)),\n        this.sectionMesh);\n  }\n\n  getBoundingBox(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const boundingBox = renderableManager.getAxisAlignedBoundingBox(renderableInstance);\n    renderableInstance.delete();\n    return boundingBox;\n  }\n\n  setRenderableTransform(renderable, position, orientation) {\n    const transformManager = this.engine.getTransformManager();\n    const transformInstance = transformManager.getInstance(renderable);\n    const transform = mat4.fromRotationTranslation(this.auxMat4, orientation, position);\n    transformManager.setTransform(transformInstance, transform);\n    transformInstance.delete();\n  }\n\n  getRenderableMaterial(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const material = renderableManager.getMaterialInstanceAt(renderableInstance, 0);\n    renderableInstance.delete();\n    return material;\n  }\n\n  updateCamera() {\n    const eye = [this.focalPoint[0], this.focalPoint[1], this.focalPoint[2] + CAMERA_DISTANCE];\n    const up = [0, 1, 0];\n    vec3.rotateX(eye, eye, this.focalPoint, this.elevation);\n    vec3.rotateY(eye, eye, this.focalPoint, this.heading);\n    this.camera.lookAt(eye, this.focalPoint, up);\n\n    const focalLength = this.focalLengthMin * (1 - this.cameraZoom)\n        + this.focalLengthMax * this.cameraZoom;\n    const fovY = focalLengthToFovY(focalLength);\n    const aspect = this.canvas.width / this.canvas.height;\n    this.camera.setProjectionFov(fovY, aspect, CAMERA_NEAR, CAMERA_FAR,\n        window.Filament.Camera$Fov.VERTICAL);\n  }\n\n  updateFollowPosition(position) {\n    vec3.copy(this.lastPosition, this.focalPoint);\n    vec3.copy(this.targetPosition, position);\n    this.lastZoom = this.cameraZoom;\n    this.animationTimer = CAMERA_ANIMATION_FOLLOW_TIME;\n  }\n\n  updateShapeView(transforms) {\n    const baseLink = (this.props.rigidInfo.baseLinks.length > 0\n                      ? this.props.rigidInfo.baseLinks[0] : null);\n    for (let i = 0; i < transforms.length; i++) {\n      const partTransform = transforms[i];\n      const link = this.props.rigidInfo.links[i];\n      if (link === baseLink) {\n        this.updateFollowPosition(partTransform.position);\n      }\n      for (let j = 0; j < link.prisms.length; j++) {\n        const prismId = link.prisms[j].id;\n        const viewTransform = link.viewTransforms[j];\n        multiplyTransforms(this.auxTransform, partTransform, viewTransform);\n        const placeableView = this.shapeView.findPlaceableView(prismId);\n        this.setRenderableTransform(placeableView.renderable, this.auxTransform.position,\n                                    this.auxTransform.orientation);\n      }\n    }\n  }\n\n  updateGoalView(goalPosition) {\n    if (!this.goalPosition) {\n      this.goalView.addToScene(this);\n    }\n    if (!this.goalPosition || !vec3.equals(this.goalPosition, goalPosition)) {\n      this.goalView.placeableViews.forEach(placeableView => {\n        quat.copy(this.auxTransform.orientation, placeableView.placeable.worldOrientation);\n        vec3.add(this.auxTransform.position, placeableView.placeable.worldPosition, goalPosition);\n        this.setRenderableTransform(placeableView.renderable, this.auxTransform.position,\n                                    this.auxTransform.orientation);\n      });\n      this.goalPosition = goalPosition;\n    }\n  }\n\n  renderFrame(timestamp) {\n    if (this.lastTime === undefined) {\n      this.lastTime = timestamp;\n    }\n    const deltaTime = 1e-3 * (timestamp - this.lastTime);\n    this.lastTime = timestamp;\n\n    if (this.animationTimer < CAMERA_ANIMATION_TIME) {\n      this.animationTimer += deltaTime;\n      const t = Math.min(this.animationTimer / CAMERA_ANIMATION_TIME, 1);\n      const k = t * t * (3 - 2 * t);\n      vec3.lerp(this.focalPoint, this.lastPosition, this.targetPosition, k);\n      this.cameraZoom = this.lastZoom * (1 - k) + this.targetZoom * k;\n      this.updateCamera();\n    }\n\n    if (this.activePlaceableView) {\n      this.highlightTimer += deltaTime;\n      if (this.highlightTimer > HIGHLIGHT_ANIMATION_TIME) {\n        this.highlightTimer %= HIGHLIGHT_ANIMATION_TIME;\n      }\n      const t = 2 * Math.abs(this.highlightTimer / HIGHLIGHT_ANIMATION_TIME - 0.5);\n      const k = t * t * (3 - 2 * t);\n      const highlightIntensity = HIGHLIGHT_START_BLEND + k * HIGHLIGHT_RANGE_BLEND;\n      this.setHighlightIntensity(this.activePlaceableView, highlightIntensity);\n    }\n\n    this.renderer.render(this.swapChain, this.view);\n    window.requestAnimationFrame(this.renderFrame);\n  }\n\n  resize() {\n    const dpr = window.devicePixelRatio;\n    const width = this.canvas.width = 0.8 * window.innerWidth * dpr;\n    const height = this.canvas.height = window.innerHeight * dpr;\n    this.view.setViewport([0, 0, width, height]);\n    this.focalLengthMin = CAMERA_FOCAL_LENGTH_MIN;\n    this.focalLengthMax = CAMERA_FOCAL_LENGTH_MAX;\n    if (width < height) {\n      const aspect = width / height;\n      this.focalLengthMin *= aspect;\n      this.focalLengthMax *= aspect;\n    }\n\n    this.updateCamera();\n  }\n\n  isPrimaryPointer(e) {\n    return (e.pointerType !== \"touch\") || e.isPrimary;\n  }\n\n  handlePointerDown(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n\n    this.pickedPlaceable = null;\n    this.pickedJunction = null;\n    this.activeJunctionPrism = null;\n\n    if (this.props.mode === AppMode.EDIT) {\n      const ray = this.getCastingRay(e.clientX, e.clientY);\n      const placeableIntersection = this.props.finalShape.intersect(ray);\n      let junctionIntersection;\n      if (this.props.activePlaceableId) {\n        junctionIntersection = this.intersectJunctions(ray);\n      }\n      if (junctionIntersection && (!placeableIntersection\n          || (junctionIntersection.hitDistance < placeableIntersection.hitDistance))) {\n        this.pickedJunction = junctionIntersection.hitJunction;\n        if (this.pickedJunction.section) {\n          this.activatePrismSection(this.availableJunctions, this.pickedJunction);\n        } else {\n          this.activatePrismKnob(this.availableJunctions, this.pickedJunction);\n        }\n      } else {\n        this.pickedPlaceable = (placeableIntersection) ? placeableIntersection.hitPlaceable : null;\n      }\n    }\n\n    this.pressing = true;\n    this.dragging = false;\n    this.pointerX = e.clientX;\n    this.pointerY = e.clientY;\n  }\n\n  handlePointerUp(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n\n    if (this.props.mode === AppMode.EDIT) {\n      if (this.pickedJunction) {\n        if (this.pickedJunction.section || this.activeJunctionPrism) {\n          const junctionIndex = this.availableJunctions.indexOf(this.pickedJunction);\n          const originalPickedJunction = this.originalAvailableJunctions[junctionIndex];\n          if (originalPickedJunction.section) {\n            this.addSection(originalPickedJunction.section);\n          } else {\n            const activeJunctionPrismIndex = this.pickedJunction.prisms.findIndex(prism => prism === this.activeJunctionPrism);\n            const originalActiveJunctionPrism = originalPickedJunction.prisms[activeJunctionPrismIndex];\n            this.addPrism(originalActiveJunctionPrism);\n          }\n        }\n      } else if (!this.dragging) {\n        this.selectPlaceable(this.pickedPlaceable, true, true);\n      }\n      this.hideGhostPrism();\n      if (this.availableJunctions) {\n        this.showPrismKnobs(this.availableJunctions);\n        this.showPrismSections(this.availableJunctions);\n      }\n    }\n\n    this.pressing = false;\n  }\n\n  handlePointerMove(e) {\n    if (!this.isPrimaryPointer(e) || !this.pressing) {\n      return;\n    }\n    const dx = e.clientX - this.pointerX;\n    const dy = e.clientY - this.pointerY;\n    if (this.dragging) {\n      if (this.pickedJunction && !this.pickedJunction.section) {\n        const ray = this.getCastingRay(e.clientX, e.clientY);\n        const nearestJunctionPrism = this.pickNearestJunctionPrism(ray, this.pickedJunction);\n        if (nearestJunctionPrism !== this.activeJunctionPrism) {\n          this.showGhostPrism(nearestJunctionPrism.worldPosition, nearestJunctionPrism.worldOrientation);\n          this.activeJunctionPrism = nearestJunctionPrism;\n        }\n      } else if (!this.pickedJunction) {\n        this.elevation = Math.min(Math.max(\n            this.elevation - dy * POINTER_DRAG_FACTOR, -ELEVATION_LIMIT), ELEVATION_LIMIT);\n        this.heading = (this.heading - dx * POINTER_DRAG_FACTOR) % (2 * Math.PI);\n        this.updateCamera();\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n      }\n    } else {\n      const dragDistanceSquared = dx * dx + dy * dy;\n      if (dragDistanceSquared >= POINTER_DRAG_THRESHOLD_SQUARED) {\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n        this.dragging = true;\n      }\n    }\n  }\n\n  computeAutoZoom(shape) {\n    let autoFovY = 0;\n    const point = vec3.create();\n    const viewRotation = mat3.fromMat4(mat3.create(), this.camera.getViewMatrix());\n    const invAspect = this.canvas.height / this.canvas.width;\n    for (const prism of shape.prisms) {\n      for (const vertex of prism.vertices) {\n        vec3.sub(point, vertex, shape.aabb.center);\n        vec3.transformMat3(point, point, viewRotation);\n        const widthFitFovY = 2 * Math.atan(SHAPE_FIT_SCALE * invAspect\n            * Math.abs(point[0]) / (CAMERA_DISTANCE - point[2])) * RADIANS_TO_DEGREES;\n        if (widthFitFovY > autoFovY) {\n          autoFovY = widthFitFovY;\n        }\n        const heightFitFovY = 2 * Math.atan(SHAPE_FIT_SCALE * Math.abs(point[1])\n            / (CAMERA_DISTANCE - point[2])) * RADIANS_TO_DEGREES;\n        if (heightFitFovY > autoFovY) {\n          autoFovY = heightFitFovY;\n        }\n      }\n    }\n    if (autoFovY > 0) {\n      const autoFocalLength = fovYToFocalLength(autoFovY);\n      const autoZoom = (autoFocalLength - this.focalLengthMin)\n          / (this.focalLengthMax - this.focalLengthMin);\n      return Math.min(Math.max(autoZoom, 0), 1);\n    } else {\n      return 1;\n    }\n  }\n\n  getCastingRay(clientX, clientY) {\n    const dpr = window.devicePixelRatio;\n    const x = (2 * clientX * dpr) / this.canvas.width - 1;\n    const y = 1 - (2 * clientY * dpr) / this.canvas.height;\n    const rayVec = vec4.fromValues(x, y, -1, 1);\n    vec4.transformMat4(rayVec, rayVec, window.Filament.Camera.inverseProjection(\n        this.camera.getProjectionMatrix()));\n    rayVec[2] = -1;\n    rayVec[3] = 0;\n    vec4.transformMat4(rayVec, rayVec, this.camera.getModelMatrix());\n    const direction = vec3.fromValues(rayVec[0], rayVec[1], rayVec[2]);\n    vec3.normalize(direction, direction);\n    return {\n      origin: this.camera.getPosition(),\n      direction: direction\n    };\n  }\n\n  intersectJunctions(ray) {\n    if (!this.availableJunctions) {\n      return;\n    }\n    let hitJunction;\n    let hitDistance;\n    for (let i = 0; i < this.availableJunctions.length; i++) {\n      const junction = this.availableJunctions[i];\n      let junctionHitDistance;\n      if (junction.section) {\n        junctionHitDistance = junction.section.intersect(ray);\n      } else {\n        junctionHitDistance = intersectSphere(ray, junction.pivot, KNOB_RADIUS);\n      }\n      if (junctionHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (junctionHitDistance < hitDistance)) {\n          hitJunction = junction;\n          hitDistance = junctionHitDistance;\n        }\n      }\n    }\n    if (!hitJunction) {\n      return;\n    }\n    return {\n      hitJunction: hitJunction,\n      hitDistance: hitDistance\n    };\n  }\n\n  pickNearestJunctionPrism(ray, junction) {\n    let junctionPrism = null;\n    let rayDistance;\n    for (let i = 0; i < junction.prisms.length; i++) {\n      const prism = junction.prisms[i];\n      const prismRayDistance = rayToPointDistance(ray, prism.worldPosition);\n      if ((rayDistance === undefined) || (prismRayDistance < rayDistance)) {\n        junctionPrism = prism;\n        rayDistance = prismRayDistance;\n      }\n    }\n    return junctionPrism;\n  }\n\n  selectPlaceable(placeable, animate, notify) {\n    if (this.activePlaceableView) {\n      this.setHighlightIntensity(this.activePlaceableView, 0);\n    }\n    if (placeable) {\n      this.activePlaceableView = this.shapeView.findPlaceableView(placeable.id);\n    } else {\n      this.activePlaceableView = null;\n    }\n    if (this.activePlaceableView) {\n      this.updateHighlightColor(placeable);\n    }\n    if ((placeable instanceof Prism) && this.activePlaceableView) {\n      const originalPlaceable = this.props.originalShape.findPlaceable(placeable.id);\n      this.availableJunctions = this.props.finalShape.getAvailableJunctions(placeable);\n      this.originalAvailableJunctions = this.props.originalShape.getAvailableJunctions(originalPlaceable);\n      this.showPrismKnobs(this.availableJunctions);\n      this.showPrismSections(this.availableJunctions);\n    } else {\n      this.availableJunctions = null;\n      this.originalAvailableJunctions = null;\n      this.hidePrismKnobs();\n      this.hidePrismSections();\n    }\n    if (animate) {\n      vec3.copy(this.lastPosition, this.targetPosition);\n      this.lastZoom = this.targetZoom;\n      if (this.activePlaceableView) {\n        vec3.copy(this.targetPosition, placeable.worldPosition);\n        this.targetZoom = 1;\n      } else {\n        vec3.copy(this.targetPosition, this.props.finalShape.aabb.center);\n        this.targetZoom = this.computeAutoZoom(this.props.finalShape);\n      }\n      this.animationTimer = 0;\n      this.highlightTimer = 0;\n    }\n    if (notify) {\n      this.props.onActivePlaceableChange(placeable ? placeable.id : 0);\n    }\n  }\n\n  addPrism(prism) {\n    const shape = this.props.originalShape.clone();\n    prism.id = ++shape.lastPlaceableId;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    this.props.onShapeChange(shape, prism.id);\n  }\n\n  addSection(section) {\n    const shape = this.props.originalShape.clone();\n    section.id = ++shape.lastPlaceableId;\n    shape.sections.push(section);\n    shape.applyTransform();\n    this.props.onShapeChange(shape, section.id);\n  }\n\n  updateHighlightColor(placeable) {\n    let placeableColor;\n    if (placeable instanceof Prism) {\n      placeableColor = placeable.backgroundColor;\n    } else if (placeable instanceof Section) {\n      placeableColor = SECTION_COLORS.get(placeable.type);\n    }\n    if (!placeableColor) {\n      return;\n    }\n    const primaryReadability = tinycolor.readability(placeableColor, HIGHLIGHT_PRIMARY_COLOR);\n    const alternateReadability = tinycolor.readability(placeableColor, HIGHLIGHT_ALTERNATE_COLOR);\n    const colorStr = (primaryReadability > alternateReadability)\n        ? HIGHLIGHT_PRIMARY_COLOR : HIGHLIGHT_ALTERNATE_COLOR;\n    const rgb = tinycolor(colorStr).toRgb();\n    this.highlightColor[0] = rgb.r / 255;\n    this.highlightColor[1] = rgb.g / 255;\n    this.highlightColor[2] = rgb.b / 255;\n  }\n\n  setHighlightIntensity(placeableView, intensity) {\n    const material = this.getRenderableMaterial(placeableView.renderable);\n    this.highlightColor[3] = intensity;\n    material.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, this.highlightColor);\n  }\n\n  setGhostColor(renderable, color) {\n    const material = this.getRenderableMaterial(renderable);\n    material.setColor4Parameter(\"baseColor\",\n        window.Filament.RgbaType.sRGB, colorToFloat4(color));\n  }\n\n  showGhostPrism(position, orientation) {\n    this.setRenderableTransform(this.ghostRenderable, position, orientation);\n    this.scene.addEntity(this.ghostRenderable);\n  }\n\n  hideGhostPrism() {\n    this.scene.remove(this.ghostRenderable);\n  }\n\n  showPrismKnobs(junctions) {\n    while (this.knobRenderables.length < junctions.length) {\n      this.knobRenderables.push(this.createGhostKnobRenderable());\n    }\n    for (let i = 0; i < junctions.length; i++) {\n      const junction = junctions[i];\n      const knobRenderable = this.knobRenderables[i];\n      this.setGhostColor(knobRenderable, INDICATION_COLOR);\n      this.setRenderableTransform(knobRenderable, junction.pivot, quat.create());\n      this.scene.addEntity(knobRenderable);\n    }\n    for (let i = junctions.length; i < this.knobRenderables.length; i++) {\n      this.scene.remove(this.knobRenderables[i])\n    }\n  }\n\n  activatePrismKnob(junctions, activeJunction) {\n    const junctionIndex = junctions.indexOf(activeJunction);\n    const knobRenderable = this.knobRenderables[junctionIndex];\n    this.setGhostColor(knobRenderable, CREATION_COLOR);\n    this.hidePrismKnobs();\n    this.scene.addEntity(knobRenderable);\n  }\n\n  hidePrismKnobs() {\n    this.knobRenderables.forEach(knobRenderable => this.scene.remove(knobRenderable));\n  }\n\n  showPrismSections(junctions) {\n    let index = 0;\n    for (const junction of junctions) {\n      if (!junction.section) {\n        continue;\n      }\n      if (this.sectionRenderables.length <= index) {\n        this.sectionRenderables.push(this.createGhostSectionRenderable());\n      }\n      const sectionRenderable = this.sectionRenderables[index];\n      this.setGhostColor(sectionRenderable, INDICATION_COLOR);\n      this.setRenderableTransform(sectionRenderable, junction.section.worldPosition,\n          junction.section.worldOrientation);\n      this.scene.addEntity(sectionRenderable);\n      index++;\n    }\n    for (let i = index; i < this.sectionRenderables.length; i++) {\n      this.scene.remove(this.sectionRenderables[i])\n    }\n  }\n\n  activatePrismSection(junctions, activeJunction) {\n    let index = -1;\n    for (const junction of junctions) {\n      if (!junction.section) {\n        continue;\n      }\n      index++;\n      if (junction === activeJunction) {\n        break;\n      }\n    }\n    const sectionRenderable = this.sectionRenderables[index];\n    this.setGhostColor(sectionRenderable, CREATION_COLOR);\n    this.hidePrismSections();\n    this.scene.addEntity(sectionRenderable);\n  }\n\n  hidePrismSections() {\n    this.sectionRenderables.forEach(sectionRenderable => this.scene.remove(sectionRenderable));\n  }\n\n  render() {\n    return <canvas className=\"Viewport\" ref={ref => (this.filament = ref)} />\n  }\n}\n\nexport default Viewport;\nexport { COLOR_MASK_COUNT };\n","import React, { Component } from 'react'\nimport reactCSS from 'reactcss'\nimport { SwatchesPicker } from 'react-color'\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false\n    };\n  }\n\n  handleToggleColorPicker() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleHideColorPicker() {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleColorChange(color) {\n    this.props.onChange(color.hex);\n    this.handleHideColorPicker();\n  };\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: this.props.color,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={() => this.handleToggleColorPicker()}>\n          <div style={styles.color} />\n        </div>\n        {\n          this.state.displayColorPicker\n          ?\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={() => this.handleHideColorPicker()} />\n            <SwatchesPicker color={this.props.color} width=\"220px\" height=\"220px\"\n              onChange={(color) => this.handleColorChange(color)} />\n          </div>\n          :\n          null\n        }\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { COLOR_MASK_COUNT } from './Viewport';\nimport ColorPicker from './ColorPicker';\nimport { AppMode } from './App';\nimport Prism from './Prism';\nimport Section, { SectionType } from './Section';\n\nclass Toolbar extends Component {\n  modifyShape(prevShape, shapeModifier) {\n    const shape = prevShape.clone();\n    shapeModifier(shape);\n    shape.applyTransform();\n    this.props.onShapeChange(shape);\n  }\n\n  modifyPlaceable(prevShape, prevPlaceable, placeableModifier) {\n    this.modifyShape(prevShape, (shape) => {\n      const placeable = shape.findPlaceable(prevPlaceable.id);\n      placeableModifier(placeable);\n    });\n  }\n\n  handleNameChange(prevShape, name) {\n    this.modifyShape(prevShape, (shape) => shape.name = name);\n  }\n\n  handleRollChange(prevShape, roll) {\n    this.modifyShape(prevShape, (shape) => shape.roll = parseFloat(roll) || 0);\n  }\n\n  handlePitchChange(prevShape, pitch) {\n    this.modifyShape(prevShape, (shape) => shape.pitch = parseFloat(pitch) || 0);\n  }\n\n  handleYawChange(prevShape, yaw) {\n    this.modifyShape(prevShape, (shape) => shape.yaw = parseFloat(yaw) || 0);\n  }\n\n  handleShowPoseChange(prevShape, showPose) {\n    this.modifyShape(prevShape, (shape) => shape.showPose = showPose);\n  }\n\n  handleColorMaskChange(prevShape, prevPrism, colorMask) {\n    this.modifyPlaceable(prevShape, prevPrism,\n        (prism) => prism.colorMask = parseInt(colorMask) || 0);\n  }\n\n  handleBackgroundColorChange(prevShape, prevPrism, color) {\n    this.modifyPlaceable(prevShape, prevPrism,\n        (prism) => prism.backgroundColor = color);\n  }\n\n  handleForegroundColorChange(prevShape, prevPrism, color) {\n    this.modifyPlaceable(prevShape, prevPrism,\n        (prism) => prism.foregroundColor = color);\n  }\n\n  handleSwapColors(prevShape, prevPrism) {\n    this.modifyPlaceable(prevShape, prevPrism, (prism) => {\n      prism.foregroundColor = prevPrism.backgroundColor;\n      prism.backgroundColor = prevPrism.foregroundColor;\n    });\n  }\n\n  handleDeletePrism(prevShape, prevPrism) {\n    this.modifyShape(prevShape, (shape) => {\n      shape.prisms = shape.prisms.filter(prism => prism.id !== prevPrism.id);\n      shape.sections = shape.sections.filter(section => (section.basePrismId !== prevPrism.id)\n          && (section.targetPrismId !== prevPrism.id));\n    });\n  }\n\n  handleSectionTypeChange(prevShape, prevSection, type) {\n    this.modifyPlaceable(prevShape, prevSection, (section) => {\n      section.type = parseInt(type);\n    });\n  }\n\n  handleSectionPropertyChange(prevShape, prevSection, name, value) {\n    this.modifyPlaceable(prevShape, prevSection, (section) => {\n      section.setPropertyValue(name, parseFloat(value));\n    });\n  }\n\n  handleSwapSection(prevShape, prevSection) {\n    this.modifyPlaceable(prevShape, prevSection, (section) => {\n      section.swap();\n    });\n  }\n\n  handleDeleteSection(prevShape, prevSection) {\n    this.modifyShape(prevShape, (shape) => {\n      shape.sections = shape.sections.filter(section => section.id !== prevSection.id);\n    });\n  }\n\n  handleConfigChange(prevConfig, property, value) {\n    const config = JSON.parse(JSON.stringify(prevConfig));\n    if (property === \"hiddenLayerSizes\") {\n      value = value.split(\",\").map(Number);\n    } else {\n      value = parseFloat(value) || 0;\n    }\n    config[property] = value;\n    this.props.onConfigChange(config);\n  }\n\n  formatTime(time) {\n    return Math.floor(time / 60) + \":\" + (time % 60).toString().padStart(2, \"0\");\n  }\n\n  getPropertyLabel(name) {\n    return name\n      .split(/(?=[A-Z])/)\n      .map(s => s.charAt(0).toUpperCase() + s.slice(1))\n      .join(' ');\n  }\n\n  renderShapeParams(config, shape) {\n    return (\n      <div className=\"Group\">\n        <h3>Shape</h3>\n        <p>\n          <label htmlFor=\"name\">Name : </label>\n          <input type=\"text\" id=\"name\" name=\"name\" value={shape.name}\n            onChange={e => this.handleNameChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"roll\">Roll : </label>\n          <input type=\"number\" id=\"roll\" name=\"roll\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.roll}\n            onChange={e => this.handleRollChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"pitch\">Pitch : </label>\n          <input type=\"number\" id=\"pitch\" name=\"pitch\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.pitch}\n            onChange={e => this.handlePitchChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"yaw\">Yaw : </label>\n          <input type=\"number\" id=\"yaw\" name=\"yaw\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.yaw}\n            onChange={e => this.handleYawChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <input type=\"checkbox\" id=\"showPose\" name=\"showPose\" checked={shape.showPose}\n            onChange={e => this.handleShowPoseChange(shape, e.target.checked)} />\n          <label htmlFor=\"showPose\">Show pose</label>\n        </p>\n        <h3>File</h3>\n        <p>\n          <button id=\"resetShape\" name=\"resetShape\"\n            onClick={() => this.props.onShapeReset()}>Reset</button>\n          <button id=\"showcaseShape\" name=\"showcaseShape\"\n            onClick={() => this.props.onShapeShowcase()}>Showcase</button>\n        </p>\n        <p>\n          <button id=\"saveArchive\" name=\"saveArchive\"\n            onClick={() => this.props.onArchiveSave()}>Save</button>\n          <button id=\"loadArchive\" name=\"loadArchive\"\n            onClick={() => this.props.onArchiveLoad()}>Load</button>\n        </p>\n        <h3>Training</h3>\n        <button id=\"startTraining\" name=\"startTraining\" disabled={this.props.mode !== AppMode.EDIT}\n          onClick={() => this.props.onTrainingStart()}>Start</button>\n        <button id=\"stopTraining\" name=\"stopTraining\"\n          disabled={(this.props.mode !== AppMode.TRAINING) && (this.props.mode !== AppMode.PLAY)}\n          onClick={() => this.props.onTrainingStop()}>Stop</button>\n        <button id=\"playTraining\" name=\"playTraining\" disabled={this.props.mode !== AppMode.EDIT}\n          onClick={() => this.props.onTrainingPlay()}>Play</button>\n        {this.props.mode === AppMode.TRAINING &&\n          <p>\n            <label>Progress : {this.props.trainingSteps} ~ {Math.floor(this.props.trainingSteps * 100 / this.props.config.totalSteps)}%</label>\n          </p>\n        }\n        {this.props.mode === AppMode.TRAINING &&\n          <p>\n            <label>Value : {Math.floor(this.props.trainingValue)}</label>\n          </p>\n        }\n        {this.props.mode === AppMode.TRAINING &&\n          <p>\n            <label>Time : {this.formatTime(this.props.trainingTime)}</label>\n          </p>\n        }\n        {(this.props.mode !== AppMode.TRAINING) && (this.props.mode !== AppMode.PLAY) &&\n          Object.keys(config).map(property => {\n            const key = \"config_\" + property;\n            const value = config[property];\n            return <p key={key}>\n              <label htmlFor={property}>{this.getPropertyLabel(property)} : </label>\n              <input id={key} name={key} type={Array.isArray(value) ? \"text\" : \"number\"} value={value}\n                onChange={e => this.handleConfigChange(config, property, e.target.value)} />\n            </p>\n          }\n        )}\n      </div>\n    );\n  }\n\n  renderPrismParams(shape, prism) {\n    return (\n      <div className=\"Group\">\n        <h3>Prism</h3>\n        <p>\n          <label htmlFor=\"colorMask\">Mask : </label>\n          <input type=\"number\" id=\"colorMask\" name=\"colorMask\" min=\"0\" max={COLOR_MASK_COUNT - 1}\n            step=\"1\" value={prism.colorMask}\n            onChange={e => this.handleColorMaskChange(shape, prism, e.target.value)} />\n        </p>\n        <div>\n          <label htmlFor=\"backgroundColor\">Background : </label>\n          <ColorPicker id=\"backgroundColor\" name=\"backgroundColor\" color={prism.backgroundColor}\n            onChange={color => this.handleBackgroundColorChange(shape, prism, color)} />\n        </div>\n        <div>\n          <label htmlFor=\"foregroundColor\">Foreground : </label>\n          <ColorPicker id=\"foregroundColor\" name=\"foregroundColor\" color={prism.foregroundColor}\n            onChange={color => this.handleForegroundColorChange(shape, prism, color)} />\n        </div>\n        <p>\n          <button id=\"swapColors\" name=\"swapColors\"\n            onClick={() => this.handleSwapColors(shape, prism)}>Swap</button>\n        </p>\n        <p>\n          <button id=\"deletePrism\" name=\"deletePrism\" disabled={shape.prisms.length <= 1}\n            onClick={() => this.handleDeletePrism(shape, prism)}>Delete</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderSectionParams(shape, section) {\n    return (\n      <div className=\"Group\">\n        <h3>Section</h3>\n        <p>\n          <label htmlFor=\"sectionType\">Type : </label>\n          <select id=\"sectionType\" name=\"sectionType\" value={section.type}\n              onChange={e => this.handleSectionTypeChange(shape, section, e.target.value)}>\n            {Object.keys(SectionType).map(typeName => {\n              const type = SectionType[typeName];\n              return <option value={type} key={type}>\n                {typeName.charAt(0) + typeName.substring(1).toLowerCase()}\n              </option>\n            })}\n          </select>\n        </p>\n        {section.getProperties().map(property => {\n          const key = \"section_\" + property.name;\n          return <p key={key}>\n            <label htmlFor={key}>{this.getPropertyLabel(property.name)} : </label>\n            <input id={key} name={key}\n              type=\"number\" min={property.min} max={property.max} value={property.value}\n              onChange={e => this.handleSectionPropertyChange(shape, section, property.name, e.target.value)} />\n          </p>\n        })}\n        <p>\n          <button id=\"swapSection\" name=\"swapSection\"\n            onClick={() => this.handleSwapSection(shape, section)}>Swap</button>\n        </p>\n        <p>\n          <button id=\"deleteSection\" name=\"deleteSection\"\n            onClick={() => this.handleDeleteSection(shape, section)}>Delete</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderParams() {\n    const activePlaceable = this.props.shape.findPlaceable(this.props.activePlaceableId);\n    if (activePlaceable) {\n      if (activePlaceable instanceof Prism) {\n        return this.renderPrismParams(this.props.shape, activePlaceable);\n      } else if (activePlaceable instanceof Section) {\n        return this.renderSectionParams(this.props.shape, activePlaceable);\n      }\n    } else {\n      return this.renderShapeParams(this.props.config, this.props.shape);\n    }\n  }\n\n  renderHistory() {\n    return (\n      <div className=\"Group\">\n        <h3>History</h3>\n        <button id=\"undoHistory\" name=\"undoHistory\" disabled={this.props.historyIndex <= 0}\n            onClick={() => this.props.onHistoryChange(this.props.historyIndex - 1)}>Undo</button>\n        <button id=\"redoHistory\" name=\"redoHistory\" disabled={this.props.historyIndex >= this.props.historyEntries.length - 1}\n            onClick={() => this.props.onHistoryChange(this.props.historyIndex + 1)}>Redo</button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Toolbar\">\n        {this.renderHistory()}\n        {this.renderParams()}\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import Shape from \"./Shape\";\nimport Prism from \"./Prism\";\nimport { vec3, quat } from 'gl-matrix';\nimport { createTransform, rotatedTransform } from './Transform';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nclass ShapeFolder {\n  constructor() {\n    this.pieceCount = 0;\n    this.shape = new Shape();\n  }\n\n  static build(name, figures) {\n    const definition = figures.definitions.find(definition => definition.name === name);\n    if (!definition) {\n      return;\n    }\n    const skin = ShapeFolder.compileSkin(definition.skin, figures);\n    if (!skin) {\n      return;\n    }\n    const shapeFolder = new ShapeFolder();\n    for (let i = 0; i < definition.pieces; i++) {\n      const colors = skin.colors[i % skin.colors.length];\n      shapeFolder.addPrism(skin.mask, colors[0], colors[1]);\n    }\n    if (!shapeFolder.fold(definition.notation)) {\n      return;\n    }\n    if (!shapeFolder.applyRotations(definition.rotations)) {\n      return;\n    }\n    const shape = shapeFolder.shape;\n    shape.applyTransform();\n    shape.translate(vec3.negate(vec3.create(), shape.aabb.center));\n    shape.applyTransform();\n    return shape;\n  }\n\n  static compileSkin(name, figures) {\n    const startPos = (name.charAt(0) === \"~\" ? 1 : 0);\n    const delimPos = name.lastIndexOf(\":\");\n    const skinName = name.substring(startPos, (delimPos !== -1 ? delimPos : name.length));\n    const skinDefinition = figures.skins.definitions.find(definition => definition.name === skinName);\n    if (!skinDefinition) {\n      return;\n    }\n    const skinPattern = figures.skins.patterns.find(pattern => pattern.key === skinDefinition.pattern);\n    if (!skinPattern) {\n      return;\n    }\n\n    const mask = (delimPos === -1 ? skinDefinition.mask : parseInt(name.substring(delimPos + 1)));\n\n    const shapeColors = [];\n    for (const colorNumbers of skinPattern.value) {\n      const prismColors = [];\n      for (const colorNumber of colorNumbers) {\n        if ((colorNumber < 1) || (colorNumber > skinDefinition.colors.length)) {\n          return;\n        }\n        const colorName = skinDefinition.colors[colorNumber - 1];\n        const color = figures.skins.colors.find(color => color.key === colorName);\n        if (!color) {\n          return;\n        }\n        prismColors.push(color.value);\n      }\n      shapeColors.push(prismColors);\n    }\n    const revertColors = (startPos > 0);\n    if (revertColors) {\n      shapeColors.reverse();\n    }\n\n    return {\n      mask: mask,\n      colors: shapeColors\n    };\n  }\n\n  addPrism(colorMask, backgroundColor, foregroundColor) {\n    let prism;\n    if (this.shape.prisms.length > 0) {\n      const leftPrism = this.shape.prisms[this.shape.prisms.length - 1];\n      prism = leftPrism.getJunctions()[1].prisms[0]; // unturned prism of right junction\n    } else {\n      prism = new Prism();\n    }\n    prism.id = ++this.shape.lastPlaceableId;\n    prism.colorMask = colorMask;\n    prism.backgroundColor = backgroundColor;\n    prism.foregroundColor = foregroundColor;\n    this.shape.prisms.push(prism);\n    this.pieceCount++;\n  }\n\n  /**\n   * Fold the shape using a notation in the following format:\n   * 1. Number of the downward-facing prism (from the left): 1 to (pieceCount+1)/2\n   * 2. Left or right sloping side of the prism: L or R\n   * 3. Position of the twist towards you: 1, 2 or 3\n   * Example: 1R2-2R2-3L2-4L2-6L2-6R2-7R2-9L2-10L2-10R2\n   * @return true if no errors, otherwise false.\n   */\n  fold(notation) {\n    const tokens = notation.split(\"-\");\n    for (let token of tokens) {\n      let pos;\n      let left;\n      if ((pos = token.indexOf(\"L\")) !== -1) {\n        left = true;\n      } else if ((pos = token.indexOf(\"R\")) !== -1) {\n        left = false;\n      } else {\n        return false;\n      }\n      const downwardPrismNumberStr = token.substring(0, pos);\n      if (!downwardPrismNumberStr) {\n        return false;\n      }\n      const downwardPrismNumber = parseInt(downwardPrismNumberStr, 10);\n      const index = (downwardPrismNumber - 1) * 2;\n      if ((index < 0) || (index >= this.pieceCount)) {\n        return false;\n      }\n      const twistsStr = token.substring(pos + 1);\n      if (!twistsStr) {\n        return false;\n      }\n      const twists = parseInt(twistsStr, 10);\n      if (!twists) {\n        continue; // no twist\n      }\n      if ((twists < 1) || (twists > 3)) {\n        return false;\n      }\n\n      if (twists < 3) {\n        for (let i = 0; i < twists; i++) {\n          if (!this.twist(index, left, left)) {\n            return false;\n          }\n        }\n      } else {\n        if (!this.twist(index, left, !left)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Twist left or right adjacent prisms around a downward-facing prism\n   * 90 degrees counter-clockwise or clockwise.\n   * @param index prism index in range [0..pieceCount).\n   * @param left twist left (true) or right (false) adjacent prisms.\n   * @param ccw twist counter-clockwise (true) or clockwise (false).\n   * @return true if prism index is in range, otherwise false.\n   */\n  twist(index, left, ccw) {\n    if ((index < 0) || (index >= this.pieceCount)) {\n      return false;\n    }\n    const prism = this.shape.prisms[index];\n    const junctions = prism.getJunctions();\n    const junction = (left ? junctions[0] : junctions[1]);\n    const twistAngle = (ccw ? 1 : -1) * Math.PI / 2;\n    if (left) {\n      for (let i = index - 1; i >= 0; i--) {\n        this.twistPrism(i, junction.pivot, junction.normal, twistAngle);\n      }\n    } else {\n      for (let i = index + 1; i < this.pieceCount; i++) {\n        this.twistPrism(i, junction.pivot, junction.normal, twistAngle);\n      }\n    }\n    return true;\n  }\n\n  twistPrism(index, pivot, axis, angle) {\n    const prism = this.shape.prisms[index];\n    const prismTransform = createTransform(prism.position, prism.orientation);\n    const transform = rotatedTransform(prismTransform, pivot, axis, angle);\n    vec3.copy(prism.position, transform.position);\n    quat.copy(prism.orientation, transform.orientation);\n  }\n\n  applyRotations(rotations) {\n    if (rotations.length === 0) {\n      return true;\n    }\n    const shapeRotation = quat.create();\n    const rotation = quat.create();\n    const axis = vec3.create();\n    for (const aa of rotations) {\n      if (aa.length === 4) {\n        vec3.set(axis, aa[0], aa[2], -aa[1]);\n        vec3.normalize(axis, axis);\n        quat.setAxisAngle(rotation, axis, aa[3] * DEGREES_TO_RADIANS);\n        quat.multiply(shapeRotation, rotation, shapeRotation);\n      } else {\n        return false;\n      }\n    }\n    this.shape.rotate(shapeRotation);\n    return true;\n  }\n}\n\nexport default ShapeFolder;\n","\nfunction vectorToString(vector, precision) {\n  return vector[0].toFixed(precision) + \" \"\n      + vector[1].toFixed(precision) + \" \"\n      + vector[2].toFixed(precision);\n}\n\nfunction quaternionToString(quad, precision) {\n  return quad[0].toFixed(precision) + \" \"\n      + quad[1].toFixed(precision) + \" \"\n      + quad[2].toFixed(precision) + \" \"\n      + quad[3].toFixed(precision);\n}\n\nfunction transformToString(transform) {\n  return vectorToString(transform.position, 6) + \" \"\n      + quaternionToString(transform.orientation, 4);\n}\n\nclass Exporter {\n  constructor(rigidInfo) {\n    this.rigidInfo = rigidInfo;\n  }\n\n  export(name) {\n    const lines = [];\n\n    lines.push(\"o \" + name);\n\n    for (const link of this.rigidInfo.links) {\n      lines.push(\"l \" + link.mass.toFixed(4) + \" \"\n          + vectorToString(link.inertia, 4) + \" \"\n          + transformToString(link.transform));\n      for (const localTransform of link.localTransforms) {\n        lines.push(\"p \" + transformToString(localTransform));\n      }\n    }\n\n    for (const joint of this.rigidInfo.joints) {\n      lines.push(\"j \" + joint.baseLink.index + \" \"\n          + joint.targetLink.index + \" \"\n          + joint.lowerAngle.toFixed(2) + \" \"\n          + joint.upperAngle.toFixed(2) + \" \"\n          + joint.power.toFixed(2) + \" \"\n          + transformToString(joint.transform));\n    }\n\n    for (const baseLink of this.rigidInfo.baseLinks) {\n      lines.push(\"b \" + baseLink.index);\n    }\n\n    return lines.join(\"\\n\");\n  }\n}\n\nexport default Exporter;\n","\nclass Config {\n  constructor() {\n    this.totalSteps = 1000000;\n    this.trainingStartSteps = 1000;\n    this.trainingInterval = 50;\n    this.checkpointSteps = 10000;\n\n    this.discount = 0.99;\n    this.batchSize = 100;\n    this.randomSteps = 10000;\n    this.replayBufferSize = 1000000;\n    this.learningRate = 3e-4;\n    this.interpolation = 0.995;\n    this.hiddenLayerSizes = [64, 64];\n  }\n}\n\nexport default Config;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/Worker.worker.d2124e10.worker.js\");\n}\n","import { vec3, quat, mat3 } from 'gl-matrix';\nimport { createTransform, multiplyTransforms, inverseTransform } from './Transform';\nimport { PRISM_HEIGHT, PRISM_BASE, PRISM_SIDE, PRISM_MARGIN } from './Prism';\nimport { SectionType } from './Section';\nimport { diagonalizeMatrix } from './VecMath';\n\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\n\nconst PRISM_HALF_HEIGHT = 0.5 * PRISM_HEIGHT;\nconst PRISM_HALF_BASE = 0.5 * PRISM_BASE;\nconst PRISM_HALF_SIDE = 0.5 * PRISM_SIDE;\nconst PRISM_MARGIN_DIAG = PRISM_MARGIN * Math.cos(Math.PI / 4);\n\nconst PRISM_CG_H = 1 / 3 * PRISM_HEIGHT;\nconst PRISM_CG_DY = PRISM_HALF_HEIGHT - PRISM_CG_H;\nconst PRISM_MASS_OFFSET = createTransform(vec3.fromValues(0, PRISM_CG_DY, 0));\nconst PRISM_MASS_OFFSET_INVERSED = inverseTransform(createTransform(), PRISM_MASS_OFFSET);\n\nconst PRISM_COLLISION_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(-PRISM_HALF_BASE + 2 * PRISM_MARGIN_DIAG + PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT + PRISM_CG_DY - 2 * PRISM_MARGIN_DIAG,\n      -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(0, PRISM_HALF_HEIGHT + PRISM_CG_DY - 2 * PRISM_MARGIN_DIAG,\n      PRISM_HALF_SIDE - PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, -PRISM_HALF_SIDE + PRISM_MARGIN),\n  vec3.fromValues(PRISM_HALF_BASE - 2 * PRISM_MARGIN_DIAG - PRISM_MARGIN,\n      -PRISM_HALF_HEIGHT + PRISM_CG_DY + PRISM_MARGIN, PRISM_HALF_SIDE - PRISM_MARGIN)\n];\n\nconst PRISM_VOLUME = 0.5 * PRISM_BASE * PRISM_HEIGHT * PRISM_SIDE;\nconst PRISM_DENSITY = 1 / Math.sqrt(2);\nconst PRISM_MASS = PRISM_VOLUME * PRISM_DENSITY;\nconst PRISM_INERTIA_FACTOR = PRISM_MASS * PRISM_HEIGHT * PRISM_HEIGHT;\nconst PRISM_INERTIA_X = 2 / 9 * PRISM_INERTIA_FACTOR;\nconst PRISM_INERTIA_Y = 1 / 3 * PRISM_INERTIA_FACTOR;\nconst PRISM_INERTIA_Z = 2 / 9 * PRISM_INERTIA_FACTOR;\n\nclass RigidInfo {\n  constructor(shape) {\n    this.prismCollisionMargin = PRISM_MARGIN;\n    this.prismCollisionVertices = PRISM_COLLISION_VERTICES;\n\n    this.links = [];\n    this.baseLinks = [];\n    this.joints = [];\n\n    const parts = shape.discoverParts();\n    for (let i = 0; i < parts.length; i++) {\n      console.log(\"Link \" + (i + 1) + \"/\" + parts.length + \":\");\n      const link = this.createLink(parts[i]);\n      if (link) {\n        this.links.push(link);\n      }\n    }\n\n    for (const section of shape.sections) {\n      if (section.type === SectionType.ACTUATOR) {\n        const joint = this.createJoint(shape, parts, section);\n        if (joint) {\n          this.joints.push(joint);\n        }\n      }\n    }\n\n    const partChains = shape.discoverPartChains(parts);\n    if (partChains) {\n      this.baseLinks.push(...partChains.map(partChain =>\n        this.links[parts.findIndex(p => p === partChain[0])]));\n    }\n  }\n\n  createLink(part) {\n    if (part.length === 0) {\n      return;\n    }\n\n    const transforms = [];\n    const partOrigin = vec3.create();\n    for (const prism of part) {\n      const transform = multiplyTransforms(createTransform(),\n          createTransform(prism.worldPosition, prism.worldOrientation),\n          PRISM_MASS_OFFSET_INVERSED);\n      vec3.add(partOrigin, partOrigin, transform.position);\n      transforms.push(transform);\n    }\n    vec3.scale(partOrigin, partOrigin, 1 / part.length);\n\n    const tensor = mat3.fromValues(0, 0, 0, 0, 0, 0, 0, 0, 0);\n    const mat1 = mat3.create();\n    const mat2 = mat3.create();\n    for (const transform of transforms) {\n      const basis = mat3.fromQuat(mat1, transform.orientation);\n      const j = mat3.set(mat2,\n        basis[0] * PRISM_INERTIA_X, basis[3] * PRISM_INERTIA_Y, basis[6] * PRISM_INERTIA_Z,\n        basis[1] * PRISM_INERTIA_X, basis[4] * PRISM_INERTIA_Y, basis[7] * PRISM_INERTIA_Z,\n        basis[2] * PRISM_INERTIA_X, basis[5] * PRISM_INERTIA_Y, basis[8] * PRISM_INERTIA_Z\n      );\n      mat3.mul(j, basis, j);\n      mat3.add(tensor, tensor, j);\n\n      const prismOrigin = transform.position;\n      const px = prismOrigin[0] - partOrigin[0];\n      const py = prismOrigin[1] - partOrigin[1];\n      const pz = prismOrigin[2] - partOrigin[2];\n      const squaredDistance = px * px + py * py + pz * pz;\n      mat3.set(j,\n        squaredDistance - px * px, -px * py, -px * pz,\n        -py * px, squaredDistance - py * py, -py * pz,\n        -pz * px, -pz * py, squaredDistance - pz * pz\n      );\n      mat3.multiplyScalar(j, j, PRISM_MASS);\n      mat3.add(tensor, tensor, j);\n    }\n    const principalRotation = quat.fromMat3(quat.create(),\n        diagonalizeMatrix(tensor, 1e-5, 20));\n    const partTransform = createTransform(partOrigin, principalRotation);\n    const inertia = vec3.fromValues(tensor[0], tensor[4], tensor[8]);\n\n    const mass = part.length * PRISM_MASS;\n\n    const childTransform = inverseTransform(createTransform(), partTransform);\n    const localTransforms = [];\n    for (const transform of transforms) {\n      const localTransform = multiplyTransforms(createTransform(), childTransform, transform);\n      localTransforms.push(localTransform);\n    }\n    const viewTransforms = [];\n    for (const prism of part) {\n      const worldTransform = createTransform(prism.worldPosition, prism.worldOrientation);\n      const viewTransform = multiplyTransforms(createTransform(), childTransform, worldTransform);\n      viewTransforms.push(viewTransform);\n    }\n\n    console.log(\"Mass: \" + mass);\n    console.log(\"Origin: {\" + partOrigin[0].toFixed(2) + \", \" + partOrigin[1].toFixed(2)\n        + \", \" + partOrigin[2].toFixed(2) + \"}\");\n    console.log(\"Inertia: {\" + inertia[0].toFixed(2) + \", \" + inertia[1].toFixed(2)\n        + \", \" + inertia[2].toFixed(2) + \"}\");\n    const principalAxis = vec3.create();\n    const principalAngle = quat.getAxisAngle(principalAxis, principalRotation);\n    console.log(\"Principal: axis={\" + principalAxis[0].toFixed(2) + \", \"\n        + principalAxis[1].toFixed(2) + \", \" + principalAxis[2].toFixed(2)\n        + \"} angle=\" + (principalAngle * RADIANS_TO_DEGREES).toFixed(0));\n\n    return {\n      index: this.links.length,\n      prisms: part,\n      mass: mass,\n      inertia: inertia,\n      transform: partTransform,\n      localTransforms: localTransforms,\n      viewTransforms: viewTransforms\n    };\n  }\n\n  createJoint(shape, parts, section) {\n    const basePrism = shape.findPlaceable(section.basePrismId);\n    const targetPrism = shape.findPlaceable(section.targetPrismId);\n    const basePartIndex = parts.findIndex(part => part.some(prism => prism === basePrism));\n    const targetPartIndex = parts.findIndex(part => part.some(prism => prism === targetPrism));\n    if (basePartIndex === -1) {\n      console.log(\"Base part not found\");\n      return;\n    }\n    if (targetPartIndex === -1) {\n      console.log(\"Target part not found\");\n      return;\n    }\n    if (basePartIndex === targetPartIndex) {\n      console.log(\"Actuator must connect different parts\");\n      return;\n    }\n\n    const baseLink = this.links[basePartIndex];\n    if (!baseLink) {\n      console.log(\"Base link not found\");\n      return;\n    }\n    const targetLink = this.links[targetPartIndex];\n    if (!targetLink) {\n      console.log(\"Target link not found\");\n      return;\n    }\n\n    const transform = createTransform(section.worldPosition, section.worldOrientation);\n    const lowerAngle = section.getPropertyValue(\"lowerAngle\");\n    const upperAngle = section.getPropertyValue(\"upperAngle\");\n    const power = section.getPropertyValue(\"power\");\n\n    return {\n      baseLink: baseLink,\n      targetLink: targetLink,\n      transform: transform,\n      lowerAngle: lowerAngle,\n      upperAngle: upperAngle,\n      power: power\n    };\n  }\n}\n\nexport default RigidInfo;\n","import { mat3 } from 'gl-matrix';\n\nfunction diagonalizeMatrix(mat, threshold, maxSteps) {\n  const rot = mat3.create();\n  for (let step = maxSteps; step > 0; step--) {\n    let p = 0;\n    let q = 1;\n    let r = 2;\n    let max = Math.abs(mat[3]);\n    let v = Math.abs(mat[6]);\n    if (v > max) {\n      q = 2;\n      r = 1;\n      max = v;\n    }\n    v = Math.abs(mat[7]);\n    if (v > max) {\n      p = 1;\n      q = 2;\n      r = 0;\n      max = v;\n    }\n\n    let t = threshold * (Math.abs(mat[0]) + Math.abs(mat[4]) + Math.abs(mat[8]));\n    if (max <= t) {\n      return rot;\n    }\n\n    const mpq = mat[p + q * 3];\n    const theta = (mat[q + q * 3] - mat[p + p * 3]) / (2 * mpq);\n    const theta2 = theta * theta;\n    let cos;\n    let sin;\n    t = (theta >= 0)\n        ? 1 / (theta + Math.sqrt(1 + theta2))\n        : 1 / (theta - Math.sqrt(1 + theta2));\n    cos = 1 / Math.sqrt(1 + t * t);\n    sin = cos * t;\n\n    mat[p + q * 3] = 0;\n    mat[q + p * 3] = 0;\n    mat[p + p * 3] -= t * mpq;\n    mat[q + q * 3] += t * mpq;\n    let mrp = mat[r + p * 3];\n    let mrq = mat[r + q * 3];\n    mat[r + p * 3] = mat[p + r * 3] = cos * mrp - sin * mrq;\n    mat[r + q * 3] = mat[q + r * 3] = cos * mrq + sin * mrp;\n\n    for (let i = 0; i < 3; i++) {\n      mrp = rot[i + p * 3];\n      mrq = rot[i + q * 3];\n      rot[i + p * 3] = cos * mrp - sin * mrq;\n      rot[i + q * 3] = cos * mrq + sin * mrp;\n    }\n  }\n  return rot;\n}\n\nexport { diagonalizeMatrix };\n","import './App.css';\nimport React, { Component } from 'react';\nimport Viewport from './Viewport';\nimport Toolbar from './Toolbar';\nimport Shape from './Shape';\nimport ShapeFolder from './ShapeFolder';\nimport Exporter from './Exporter';\nimport Config from './Config';\nimport Worker from \"./Worker.worker.js\";\nimport RigidInfo from './RigidInfo';\n\nconst ARCHIVE_VERSION = 3;\nconst ARCHIVE_EXTENSION = \".twy\";\nconst HISTORY_LENGTH_MAX = 30;\n\nconst AppMode = Object.freeze({\n  EDIT: 0,\n  TRAINING: 1,\n  PLAY: 2,\n  LOADING: 3\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const shape = Shape.createInitialShape();\n\n    this.state = {\n      mode: AppMode.EDIT,\n      shape: shape,\n      activePlaceableId: 0,\n      historyEntries: [],\n      historyIndex: -1,\n      config: new Config(),\n      trainingSteps: 0,\n      trainingValue: 0,\n      trainingTime: 0,\n      trainingState: null\n    };\n    this.figures = null;\n    this.figureRandomIndices = null;\n    this.figureIndex = -1;\n    this.finalShape = shape;\n    this.rigidInfo = null;\n    this.shapeData = null;\n    this.checkpoint = null;\n    this.database = null;\n    this.worker = null;\n    this.playing = false;\n\n    this.addHistoryEntry(this.state, shape, this.finalShape, 0);\n  }\n\n  addHistoryEntry(state, shape, finalShape, activePlaceableId) {\n    let historyLength = state.historyIndex + 1;\n    const historyStart = (historyLength >= HISTORY_LENGTH_MAX ?\n        historyLength - HISTORY_LENGTH_MAX + 1 : 0);\n    historyLength = Math.min(historyLength, HISTORY_LENGTH_MAX - 1);\n    state.historyEntries = state.historyEntries.splice(historyStart, historyLength);\n    state.historyEntries.push({\n      shape: shape,\n      finalShape: finalShape,\n      activePlaceableId: activePlaceableId\n    });\n    state.historyIndex = state.historyEntries.length - 1;\n  }\n\n  showFigure(name) {\n    const shape = ShapeFolder.build(name, this.figures);\n    if (shape) {\n      this.handleShapeChange(shape, true);\n    }\n  }\n\n  handleShapeChange(shape, reset = false, activePlaceableId = undefined) {\n    if (!this.ensureEditMode()) {\n      return;\n    }\n\n    const nextState = {\n      shape: shape,\n      historyEntries: this.state.historyEntries,\n      historyIndex: this.state.historyIndex\n    };\n    if (reset || (this.state.activePlaceableId\n        && !shape.findPlaceable(this.state.activePlaceableId))) {\n      nextState.activePlaceableId = 0;\n    } else if (activePlaceableId) {\n      nextState.activePlaceableId = activePlaceableId;\n    }\n    if (shape.showPose) {\n      this.finalShape = shape.clone();\n      this.finalShape.applyInitialAngles();\n      if (this.finalShape.hasPrismIntersections()) {\n        console.log(\"Shape has intersections between prisms\");\n      }\n    } else {\n      this.finalShape = shape;\n    }\n    this.addHistoryEntry(nextState, shape, this.finalShape, nextState.activePlaceableId);\n    this.setState(nextState);\n  }\n\n  handleActivePlaceableChange(activePlaceableId) {\n    this.setState({ activePlaceableId: activePlaceableId });\n  }\n\n  handleHistoryChange(index) {\n    if (!this.ensureEditMode()) {\n      return;\n    }\n\n    if ((index < 0) || (index >= this.state.historyEntries.length)) {\n      return;\n    }\n    const historyEntry = this.state.historyEntries[index];\n    this.finalShape = historyEntry.finalShape;\n    this.setState({\n      shape: historyEntry.shape,\n      activePlaceableId: historyEntry.activePlaceableId,\n      historyIndex: index\n    });\n  }\n\n  handleShapeReset() {\n    this.handleShapeChange(Shape.createInitialShape(), true);\n  }\n\n  handleShapeShowcase() {\n    if (!this.figures) {\n      fetch(\"res/figures.rsf\")\n        .then(response => response.json())\n        .then(data => {\n          this.figures = data;\n          this.figureRandomIndices =\n            [...Array(this.figures.definitions.length).keys()]\n            .map(a => ({sort: Math.random(), value: a}))\n            .sort((a, b) => a.sort - b.sort)\n            .map(a => a.value);\n          this.figureIndex = -1;\n          this.handleShapeShowcase();\n        });\n    } else {\n      this.figureIndex = (this.figureIndex + 1) % this.figureRandomIndices.length;\n      const figureName = this.figures.definitions[this.figureRandomIndices[this.figureIndex]].name;\n      this.showFigure(figureName);\n    }\n  }\n\n  handleArchiveLoad() {\n    if (!this.ensureEditMode()) {\n      return;\n    }\n\n    this.uploadFile(ARCHIVE_EXTENSION, (content) => {\n      const archive = JSON.parse(content);\n      if (archive.version > ARCHIVE_VERSION) {\n        alert(\"Unsupported version: \" + archive.version);\n        return;\n      }\n      const shape = new Shape();\n      shape.fromArchive(archive.shape, archive.version);\n      shape.applyTransform();\n      if (shape) {\n        this.handleShapeChange(shape, true);\n      } else {\n        alert(\"Failed to load shape\");\n      }\n      if (archive.version >= 3) {\n        const config = archive.config;\n        if (config) {\n          this.handleConfigChange(config);\n        } else {\n          alert(\"Failed to load config\");\n        }\n        this.checkpoint = archive.checkpoint;\n      }\n    });\n  }\n\n  handleArchiveSave() {\n    if (!this.state.shape.name) {\n      alert(\"Shape name must be given\");\n      return;\n    }\n    this.generateShapeData();\n    const content = JSON.stringify({\n      version: ARCHIVE_VERSION,\n      shape: this.state.shape.toArchive(),\n      shapeData: this.shapeData,\n      config: this.state.config,\n      checkpoint: this.checkpoint\n    });\n    this.downloadFile(this.state.shape.name + ARCHIVE_EXTENSION, content);\n  }\n\n  handleConfigChange(config) {\n    this.setState({ config: config });\n  }\n\n  handleAppModeChange(mode) {\n    const nextState = {\n      mode: mode\n    };\n    if (this.worker != null) {\n      this.worker.terminate();\n      this.worker = null;\n    }\n    if ((mode === AppMode.TRAINING) || (mode === AppMode.PLAY)) {\n      this.generateShapeData();\n      this.playing = (mode === AppMode.PLAY);\n\n      let activeJointCount = 0;\n      for (const joint of this.rigidInfo.joints) {\n        if (joint.power !== 0) {\n          activeJointCount++;\n        }\n      }\n      if (activeJointCount > 0) {\n        nextState.mode = AppMode.LOADING;\n        nextState.trainingSteps = 0;\n        nextState.trainingValue = 0;\n        nextState.trainingTime = 0;\n      } else {\n        nextState.mode = this.state.mode;\n        alert(\"No active actuator\");\n      }\n    } else if (mode === AppMode.LOADING) {\n      if (window.Worker) {\n        nextState.mode = (this.playing ? AppMode.PLAY : AppMode.TRAINING);\n      } else {\n        nextState.mode = AppMode.EDIT;\n        alert(\"No worker support\");\n      }\n    }\n    this.setState(nextState);\n\n    if (nextState.mode === AppMode.LOADING) {\n      this.loadCheckpoint(checkpoint => {\n        if (checkpoint) {\n          if (checkpoint.key !== this.checkpoint.key) {\n            console.log(\"Checkpoint keys must be equal\");\n          } else if (!this.checkpoint.data || !this.checkpoint.time ||\n                     (checkpoint.time > this.checkpoint.time)) {\n            this.checkpoint = checkpoint;\n            console.log(\"Use checkpoint from DB\");\n          }\n        }\n        this.handleAppModeChange(this.state.mode);\n      });\n    } else if ((nextState.mode === AppMode.TRAINING) || (nextState.mode === AppMode.PLAY)) {\n      this.worker = new Worker();\n      this.worker.onmessage = ((e) => this.handleWorkerMessage(e));\n      this.worker.postMessage([this.state.config, this.shapeData, this.checkpoint.data, this.playing]);\n    }\n  }\n\n  handleWorkerMessage(e) {\n    const [steps, value, time, state, data] = e.data;\n    if (data) {\n      this.checkpoint.data = data;\n      this.checkpoint.time = Date.now();\n      this.saveCheckpoint(() => {\n        console.log(\"Save checkpoint at \" + steps + \"/\" + this.state.config.totalSteps);\n      });\n    }\n    const nextState = {\n      trainingState: state\n    };\n    if ((this.state.trainingValue !== value) || (this.state.trainingTime !== time) ||\n        ((steps === this.state.config.totalSteps) && (nextState.trainingSteps !== steps))) {\n      nextState.trainingSteps = steps;\n      nextState.trainingValue = value;\n      nextState.trainingTime = time;\n    }\n    this.setState(nextState);\n  }\n\n  generateShapeData() {\n    this.rigidInfo = new RigidInfo(this.finalShape);\n    const exporter = new Exporter(this.rigidInfo);\n    this.shapeData = exporter.export(this.finalShape.name);\n    const checkpoint = this.createCheckpoint(this.state.config, this.shapeData);\n    if (checkpoint.key !== this.checkpoint?.key) {\n      this.checkpoint = checkpoint;\n    }\n  }\n\n  ensureEditMode() {\n    const editMode = (this.state.mode === AppMode.EDIT);\n    if (!editMode) {\n      alert(\"Stop training mode first\");\n    }\n    return editMode;\n  }\n\n  downloadFile(name, content) {\n    const element = document.createElement(\"a\");\n    const file = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n    element.href = URL.createObjectURL(file);\n    element.download = name;\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  uploadFile(extension, onload) {\n    const element = document.createElement(\"input\");\n    element.setAttribute(\"type\", \"file\");\n    element.setAttribute(\"accept\", extension);\n    element.addEventListener(\"change\", () => {\n      if (!element.files.length) {\n        return;\n      }\n      const file = element.files[0];\n      const reader = new FileReader();\n      reader.onload = ((e) => {\n        onload(e.target.result);\n      });\n      reader.readAsText(file);\n    });\n    element.click();\n  }\n\n  createCheckpoint(config, shapeData) {\n    return {\n      key: getStringHash(config.hiddenLayerSizes.toString() + \"\\n\" + shapeData),\n      data: null,\n      time: null\n    };\n  }\n\n  loadCheckpoint(ondone) {\n    if (this.database) {\n      const getRequest = this.database\n                         .transaction(\"checkpoint\", \"readonly\")\n                         .objectStore(\"checkpoint\")\n                         .get(this.checkpoint.key);\n      getRequest.onsuccess = (e) => {\n        ondone(getRequest.result);\n      };\n      getRequest.onerror = (e) => {\n        console.log(\"Failed to load checkpoint\");\n        ondone();\n      };\n    } else {\n      this.openDatabase(() => {\n        if (this.database) {\n          this.loadCheckpoint(ondone);\n        } else {\n          ondone();\n        }\n      });\n    }\n  }\n\n  saveCheckpoint(onsuccess) {\n    if (this.database) {\n      const putRequest = this.database\n                         .transaction(\"checkpoint\", \"readwrite\")\n                         .objectStore(\"checkpoint\")\n                         .put(this.checkpoint);\n      putRequest.onsuccess = (e) => onsuccess();\n      putRequest.onerror = (e) => {\n        console.log(\"Failed to save checkpoint\");\n      };\n    } else {\n      this.openDatabase(() => {\n        if (this.database) {\n          this.saveCheckpoint(onsuccess);\n        }\n      });\n    }\n  }\n\n  openDatabase(ondone) {\n    const openRequest = indexedDB.open(\"database\");\n    openRequest.onupgradeneeded = (e) => {\n      const database = e.target.result;\n      if (!database.objectStoreNames.contains(\"checkpoint\")) {\n        database.createObjectStore(\"checkpoint\", {keyPath: \"key\"});\n        console.log(\"Initialize DB\");\n      }\n    };\n    openRequest.onsuccess = (e) => {\n      this.database = openRequest.result;\n      ondone();\n    };\n    openRequest.onerror = (e) => {\n      console.log(\"Failed to open DB\");\n      ondone();\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Viewport mode={this.state.mode} originalShape={this.state.shape}\n          finalShape={this.finalShape} rigidInfo={this.rigidInfo}\n          activePlaceableId={this.state.activePlaceableId} trainingState={this.state.trainingState}\n          onShapeChange={(shape, activePlaceableId) => this.handleShapeChange(shape, false, activePlaceableId)}\n          onActivePlaceableChange={activePlaceableId => this.handleActivePlaceableChange(activePlaceableId)} />\n        <Toolbar mode={this.state.mode} shape={this.state.shape}\n          activePlaceableId={this.state.activePlaceableId}\n          historyEntries={this.state.historyEntries} historyIndex={this.state.historyIndex}\n          trainingSteps={this.state.trainingSteps} trainingValue={this.state.trainingValue}\n          trainingTime={this.state.trainingTime} config={this.state.config}\n          onShapeChange={shape => this.handleShapeChange(shape)}\n          onHistoryChange={index => this.handleHistoryChange(index)}\n          onShapeReset={() => this.handleShapeReset()}\n          onShapeShowcase={() => this.handleShapeShowcase()}\n          onArchiveSave={() => this.handleArchiveSave()}\n          onArchiveLoad={() => this.handleArchiveLoad()}\n          onTrainingStart={() => this.handleAppModeChange(AppMode.TRAINING)}\n          onTrainingStop={() => this.handleAppModeChange(AppMode.EDIT)}\n          onTrainingPlay={() => this.handleAppModeChange(AppMode.PLAY)}\n          onConfigChange={config => this.handleConfigChange(config)} />\n      </div>\n    );\n  }\n}\n\nfunction getStringHash(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash &= hash; // Convert to 32bit integer\n  }\n  return hash.toString(36);\n}\n\nexport default App;\nexport { AppMode };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}