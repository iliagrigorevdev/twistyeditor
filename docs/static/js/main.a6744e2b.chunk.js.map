{"version":3,"sources":["PrismView.js","ShapeView.js","Collision.js","Viewport.js","ColorPicker.js","Toolbar.js","Transform.js","Prism.js","Shape.js","App.js","serviceWorker.js","index.js"],"names":["PrismView","prism","renderable","this","ShapeView","shape","viewport","prismViews","i","prisms","length","push","createPrismView","syncTransform","createPrismRenderable","colorMask","backgroundColor","foregroundColor","id","prismView","forEach","scene","addEntity","remove","setRenderableTransform","worldPosition","worldOrientation","auxVec1","vec3","create","auxVec2","auxVec3","auxVec4","intersectTriangle","ray","p1","p2","p3","edge1","sub","edge2","pvec","cross","direction","det","dot","tvec","origin","u","qvec","v","intersectSphere","center","radius","rayorig","squaredRadius","squaredRayLength","squaredLength","a","b","d","sqrtD","Math","sqrt","t","projectVerticesOntoAxis","axis","vertices","dmin","dmax","overlapProjectionsOntoAxis","vertices1","vertices2","eps","rayToPointDistance","point","vector","projection","scale","distance","ELEVATION_LIMIT","PI","DEFAULT_ELEVATION","DEFAULT_HEADING","iblUrl","getPrismTextureUrl","maskIndex","colorToFloat3","color","rgb","tinycolor","toRgb","r","g","IDENTITY_QUAT","quat","auxMat4","mat4","Viewport","assets","window","Filament","init","prevProps","props","handleShapeChange","engine","shapeView","removeFromScene","addToScene","activePrismView","selectPrism","activePrism","elevation","heading","availableJunctions","focalPoint","targetPosition","lastPosition","highlightColor","animationTimer","highlightTimer","pressing","dragging","pickedPrism","pickedJunction","activeJunctionPrism","pointerX","pointerY","canvas","filament","Engine","camera","createCamera","EntityManager","get","createScene","indirectLight","createIblFromKtx","setIntensity","setIndirectLight","skybox","createSkyFromKtx","setSkybox","prismSourceMaterial","createMaterial","prismSourceMesh","loadFilamesh","prismBoundingBox","getBoundingBox","ghostMaterial","ghostRenderable","buildPrismRenderable","getDefaultInstance","knobSourceMaterial","knobSourceMesh","knobBoundingBox","knobRenderables","prismTextures","createTextureFromPng","prismTextureSampler","TextureSampler","MinFilter","LINEAR_MIPMAP_LINEAR","MagFilter","LINEAR","WrapMode","CLAMP_TO_EDGE","swapChain","createSwapChain","renderer","createRenderer","view","createView","setCamera","setScene","resize","renderFrame","bind","addEventListener","requestAnimationFrame","e","handlePointerDown","handlePointerUp","handlePointerMove","material","RenderableManager","Builder","boundingBox","geometry","RenderableManager$PrimitiveType","TRIANGLES","vertexBuffer","indexBuffer","build","validColorMask","prismMaterial","createInstance","setTextureParameter","setColor3Parameter","RgbType","sRGB","setColor4Parameter","RgbaType","setFloatParameter","renderableManager","getRenderableManager","renderableInstance","getInstance","getAxisAlignedBoundingBox","delete","position","orientation","transformManager","getTransformManager","transformInstance","transform","fromRotationTranslation","setTransform","getMaterialInstanceAt","eye","rotateX","rotateY","lookAt","timestamp","undefined","lastTime","deltaTime","min","k","lerp","updateCamera","abs","highlightIntensity","HIGHLIGHT_OPAQUE_BLEND","setHighlightIntensity","render","dpr","devicePixelRatio","width","innerWidth","height","innerHeight","setViewport","setProjectionFov","Camera$Fov","VERTICAL","pointerType","isPrimary","isPrimaryPointer","junctionIntersection","getCastingRay","clientX","clientY","prismIntersection","intersect","intersectJunctions","hitDistance","hitJunction","activatePrismKnob","hitPrism","addPrism","onActivePrismChange","hideGhostPrism","showPrismKnobs","dx","dy","nearestJunctionPrism","pickNearestJunctionPrism","showGhostPrism","max","POINTER_DRAG_THRESHOLD","x","y","rayVec","vec4","fromValues","transformMat4","Camera","inverseProjection","getProjectionMatrix","getModelMatrix","normalize","getPosition","junction","junctionHitDistance","pivot","rayDistance","junctionPrism","prismRayDistance","animate","copy","updateHighlightColor","findPrismView","getAvailableJunctions","hidePrismKnobs","aabb","HIGHLIGHT_ANIMATION_TIME","clone","lastPrismId","applyTransform","onShapeChange","colorStr","readability","intensity","getRenderableMaterial","junctions","createKnobRenderable","knobRenderable","activeJunction","junctionIndex","indexOf","className","ref","Component","ColorPicker","state","displayColorPicker","setState","onChange","hex","handleHideColorPicker","styles","reactCSS","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","style","onClick","handleToggleColorPicker","handleColorChange","Toolbar","prevShape","shapeModifier","prevPrism","prismModifier","modifyShape","findPrism","roll","parseFloat","pitch","yaw","modifyPrism","parseInt","htmlFor","type","name","step","value","handleRollChange","target","handlePitchChange","handleYawChange","COLOR_MASK_COUNT","handleColorMaskChange","handleBackgroundColorChange","handleForegroundColorChange","handleSwapColors","renderPrismParams","renderShapeParams","renderParams","createTransform","rotatedTransform","angle","rotation","setAxisAngle","transformQuat","add","mul","multiplyTransforms","transform1","transform2","PRISM_SIDE","PRISM_HALF_SIDE","PRISM_VERTICES","PRISM_TRIANGLE_INDICES","PRISM_POLYGON_NORMALS","map","indices","p0","normal","PRISM_LEFT_SLOPE_PIVOT_POINT","PRISM_RIGHT_SLOPE_PIVOT_POINT","PRISM_LEFT_SLOPE_NORMAL","rotateZ","PRISM_RIGHT_SLOPE_NORMAL","PRISM_LEFT_TRANSFORM","fromEuler","PRISM_RIGHT_TRANSFORM","PRISM_JUNCTIONS","swapColors","transforms","Prism","vertex","polygonNormals","shapeOrientation","multiply","triangleHitDistance","intersectTriangles","polygonNormals1","polygonNormals2","every","polygonNormal1","polygonNormal2","junctionPrisms","j","junctionTransform","RADIANS_TO_DEGREES","Shape","getOrientation","zero","prismHitDistance","getJunctions","filter","shapePrism","collides","App","createInitialShape","nextState","handleActivePrismChange","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6744e2b.chunk.js","sourcesContent":["class PrismView {\n  constructor(prism, renderable) {\n    this.prism = prism;\n    this.renderable = renderable;\n  }\n}\n\nexport default PrismView;\n","import PrismView from './PrismView';\n\nclass ShapeView {\n  constructor(shape, viewport) {\n    this.shape = shape;\n\n    this.prismViews = [];\n    for (let i = 0; i < this.shape.prisms.length; i++) {\n      this.prismViews.push(this.createPrismView(this.shape.prisms[i], viewport));\n    }\n\n    this.syncTransform(viewport);\n  }\n\n  createPrismView(prism, viewport) {\n    const renderable = viewport.createPrismRenderable(prism.colorMask,\n        prism.backgroundColor, prism.foregroundColor);\n    return new PrismView(prism, renderable);\n  }\n\n  findPrismView(id) {\n    for (let i = 0; i < this.prismViews.length; i++) {\n      const prismView = this.prismViews[i];\n      if (prismView.prism.id === id) {\n        return prismView;\n      }\n    }\n    return null;\n  }\n\n  addToScene(viewport) {\n    this.prismViews.forEach((prismView) => viewport.scene.addEntity(prismView.renderable));\n  }\n\n  removeFromScene(viewport) {\n    this.prismViews.forEach((prismView) => viewport.scene.remove(prismView.renderable));\n  }\n\n  syncTransform(viewport) {\n    for (let i = 0; i < this.prismViews.length; i++) {\n      const prismView = this.prismViews[i];\n      const prism = prismView.prism;\n      viewport.setRenderableTransform(prismView.renderable, prism.worldPosition,\n          prism.worldOrientation);\n    }\n  }\n}\n\nexport default ShapeView;\n","import { vec3 } from 'gl-matrix';\n\nconst auxVec1 = vec3.create();\nconst auxVec2 = vec3.create();\nconst auxVec3 = vec3.create();\nconst auxVec4 = vec3.create();\n\nfunction intersectTriangles(ray, vertices, indices) {\n  let hitDistance;\n  for (let i = 0; i < indices.length; i += 3) {\n    const triangleHitDistance = intersectTriangle(ray,\n        vertices[indices[i]], vertices[indices[i + 1]], vertices[indices[i + 2]]);\n    if (triangleHitDistance !== undefined) {\n      if ((hitDistance === undefined) || (triangleHitDistance < hitDistance)) {\n        hitDistance = triangleHitDistance;\n      }\n    }\n  }\n  return hitDistance;\n}\n\nfunction intersectTriangle(ray, p1, p2, p3) {\n  const edge1 = vec3.sub(auxVec1, p2, p1);\n  const edge2 = vec3.sub(auxVec2, p3, p1);\n  const pvec = vec3.cross(auxVec3, ray.direction, edge2);\n  const det = vec3.dot(edge1, pvec);\n  if (det < 1e-6) {\n    return;\n  }\n  const tvec = vec3.sub(auxVec4, ray.origin, p1);\n  const u = vec3.dot(tvec, pvec);\n  if ((u < 0) || (u > det)) {\n    return;\n  }\n  const qvec = vec3.cross(auxVec4, tvec, edge1);\n  const v = vec3.dot(ray.direction, qvec);\n  if ((v < 0) || (u + v > det)) {\n    return;\n  }\n  return vec3.dot(edge2, qvec) / det;\n}\n\nfunction intersectSphere(ray, center, radius) {\n  const rayorig = vec3.sub(auxVec1, ray.origin, center);\n  const squaredRadius = radius * radius;\n  const squaredRayLength = vec3.squaredLength(rayorig);\n\n  if (squaredRayLength <= squaredRadius) {\n    return 0; // inside hit\n  }\n\n  const a = vec3.dot(ray.direction, ray.direction);\n  const b = 2 * vec3.dot(rayorig, ray.direction);\n  const c = squaredRayLength - squaredRadius;\n  const d = b * b - (4 * a * c);\n  if (d >= 0) {\n    const sqrtD = Math.sqrt(d);\n    let t = (-b - sqrtD) / (2 * a);\n    if (t < 0) {\n      t = (-b + sqrtD) / (2 * a);\n    }\n    return t; // nearest surface hit\n  }\n}\n\nfunction projectVerticesOntoAxis(axis, vertices) {\n  let dmin = 0;\n  let dmax = 0;\n  for (let i = 0; i < vertices.length; i++) {\n    const d = vec3.dot(axis, vertices[i]);\n    if (i === 0) {\n      dmin = d;\n      dmax = d;\n    } else {\n      if (d < dmin) {\n        dmin = d;\n      }\n      if (d > dmax) {\n        dmax = d;\n      }\n    }\n  }\n  return {\n    dmin: dmin,\n    dmax: dmax\n  };\n}\n\nfunction overlapProjectionsOntoAxis(axis, vertices1, vertices2, eps = 1e-3) {\n  if ((vertices1.length === 0) || (vertices2.length === 0)) {\n    return false;\n  }\n  let p1 = projectVerticesOntoAxis(axis, vertices1);\n  let p2 = projectVerticesOntoAxis(axis, vertices2);\n  return (p1.dmin + eps < p2.dmax) && (p2.dmin + eps < p1.dmax);\n}\n\nfunction collideConvexHulls(vertices1, polygonNormals1, vertices2, polygonNormals2) {\n  return polygonNormals1.every(polygonNormal1 =>\n          overlapProjectionsOntoAxis(polygonNormal1, vertices1, vertices2))\n      && polygonNormals2.every(polygonNormal2 =>\n          overlapProjectionsOntoAxis(polygonNormal2, vertices1, vertices2));\n}\n\nfunction rayToPointDistance(ray, point) {\n  const vector = vec3.sub(auxVec1, point, ray.origin);\n  const projection = vec3.scale(auxVec2, ray.direction, vec3.dot(vector, ray.direction));\n  return vec3.distance(vector, projection);\n}\n\nexport { intersectTriangles, intersectSphere, collideConvexHulls, rayToPointDistance };\n","import React, { Component } from 'react';\nimport { vec3, vec4, quat, mat4 } from 'gl-matrix';\nimport ShapeView from './ShapeView';\nimport './App.css';\nimport tinycolor from 'tinycolor2';\nimport { intersectSphere, rayToPointDistance } from './Collision';\n\nconst COLOR_MASK_COUNT = 8;\nconst POINTER_DRAG_THRESHOLD = 3;\nconst POINTER_DRAG_THRESHOLD_SQUARED = POINTER_DRAG_THRESHOLD * POINTER_DRAG_THRESHOLD;\nconst POINTER_DRAG_FACTOR = 0.01;\nconst ELEVATION_LIMIT = 0.48 * Math.PI;\nconst CAMERA_ANIMATION_TIME = 0.3;\nconst DEFAULT_ELEVATION = -Math.PI / 10;\nconst DEFAULT_HEADING = -Math.PI / 40;\n\nconst HIGHLIGHT_PRIMARY_COLOR = \"#ffff40\";\nconst HIGHLIGHT_ALTERNATE_COLOR = \"#b266ff\";\nconst HIGHLIGHT_OPAQUE_BLEND = 0.8;\nconst HIGHLIGHT_START_BLEND = 0.3;\nconst HIGHLIGHT_RANGE_BLEND = HIGHLIGHT_OPAQUE_BLEND - HIGHLIGHT_START_BLEND;\nconst HIGHLIGHT_ANIMATION_TIME = 2;\n\nconst KNOB_RADIUS = 0.2;\nconst KNOB_IDLE_ALPHA = 0.3;\nconst KNOB_ACTIVE_ALPHA = 1.0;\n\nconst iblUrl = \"res/environment_ibl.ktx\";\nconst skyboxUrl = \"res/environment_skybox.ktx\";\nconst prismMeshUrl = \"res/prism.filamesh\";\nconst prismMaterialUrl = \"res/prism.filamat\";\nconst ghostMaterialUrl = \"res/ghost.filamat\";\nconst knobMeshUrl = \"res/knob.filamesh\";\nconst knobMaterialUrl = \"res/knob.filamat\";\nconst getPrismTextureUrl = ((maskIndex) => \"res/prism\" + maskIndex + \".png\");\nconst colorToFloat3 = ((color) => {\n  const rgb = tinycolor(color).toRgb();\n  return [rgb.r / 255, rgb.g / 255, rgb.b / 255];\n});\n\nconst IDENTITY_QUAT = quat.create();\nconst auxMat4 = mat4.create();\n\nclass Viewport extends Component {\n  componentDidMount() {\n    let assets = [iblUrl, skyboxUrl, prismMeshUrl, prismMaterialUrl,\n        ghostMaterialUrl, knobMeshUrl, knobMaterialUrl];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      assets.push(getPrismTextureUrl(i));\n    }\n    window.Filament.init(assets, () => {\n      this.init();\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.shape !== this.props.shape) {\n      this.handleShapeChange();\n    }\n  }\n\n  handleShapeChange() {\n    if (!this.engine) {\n      return;\n    }\n    if (this.shapeView) {\n      this.shapeView.removeFromScene(this);\n    }\n    this.shapeView = new ShapeView(this.props.shape, this);\n    this.shapeView.addToScene(this);\n    this.activePrismView = null;\n    this.selectPrism(this.props.activePrism, false);\n  }\n\n  init() {\n    this.elevation = DEFAULT_ELEVATION;\n    this.heading = DEFAULT_HEADING;\n    this.distance = 10;\n    this.activePrismView = null;\n    this.availableJunctions = null;\n    this.focalPoint = vec3.create();\n    this.targetPosition = vec3.create();\n    this.lastPosition = vec3.create();\n    this.highlightColor = [0, 0, 0, 0];\n    this.animationTimer = 0;\n    this.highlightTimer = 0;\n\n    this.pressing = false;\n    this.dragging = false;\n    this.pickedPrism = null;\n    this.pickedJunction = null;\n    this.activeJunctionPrism = null;\n    this.pointerX = 0;\n    this.pointerY = 0;\n\n    this.canvas = this.filament;\n    const engine = this.engine = window.Filament.Engine.create(this.canvas);\n    this.camera = engine.createCamera(window.Filament.EntityManager.get().create());\n    this.scene = engine.createScene();\n\n    const indirectLight = engine.createIblFromKtx(iblUrl);\n    indirectLight.setIntensity(50000);\n    this.scene.setIndirectLight(indirectLight);\n\n    const skybox = engine.createSkyFromKtx(skyboxUrl);\n    this.scene.setSkybox(skybox);\n\n    this.prismSourceMaterial = engine.createMaterial(prismMaterialUrl);\n    this.prismSourceMesh = engine.loadFilamesh(prismMeshUrl);\n    this.prismBoundingBox = this.getBoundingBox(this.prismSourceMesh.renderable);\n\n    const ghostMaterial = engine.createMaterial(ghostMaterialUrl);\n    this.ghostRenderable = this.buildPrismRenderable(ghostMaterial.getDefaultInstance());\n\n    this.knobSourceMaterial = engine.createMaterial(knobMaterialUrl);\n    this.knobSourceMesh = engine.loadFilamesh(knobMeshUrl);\n    this.knobBoundingBox = this.getBoundingBox(this.knobSourceMesh.renderable);\n    this.knobRenderables = [];\n\n    this.prismTextures = [];\n    for (let i = 0; i < COLOR_MASK_COUNT; i++) {\n      this.prismTextures.push(engine.createTextureFromPng(getPrismTextureUrl(i)));\n    }\n    this.prismTextureSampler = new window.Filament.TextureSampler(\n        window.Filament.MinFilter.LINEAR_MIPMAP_LINEAR,\n        window.Filament.MagFilter.LINEAR,\n        window.Filament.WrapMode.CLAMP_TO_EDGE);\n\n    this.handleShapeChange();\n\n    this.swapChain = engine.createSwapChain();\n    this.renderer = engine.createRenderer();\n    this.view = engine.createView();\n    this.view.setCamera(this.camera);\n    this.view.setScene(this.scene);\n\n    this.resize();\n    this.renderFrame = this.renderFrame.bind(this);\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n    window.requestAnimationFrame(this.renderFrame);\n    this.canvas.addEventListener(\"pointerdown\", (e) => this.handlePointerDown(e));\n    this.canvas.addEventListener(\"pointerup\", (e) => this.handlePointerUp(e));\n    this.canvas.addEventListener(\"pointermove\", (e) => this.handlePointerMove(e));\n  }\n\n  buildPrismRenderable(material) {\n    const renderable = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox(this.prismBoundingBox)\n      .material(0, material)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES,\n          this.prismSourceMesh.vertexBuffer, this.prismSourceMesh.indexBuffer)\n      .build(this.engine, renderable);\n    return renderable;\n  }\n\n  createPrismRenderable(colorMask, backgroundColor, foregroundColor) {\n    const validColorMask = (colorMask >= 0) && (colorMask < COLOR_MASK_COUNT)\n        ? colorMask : 0;\n    const prismMaterial = this.prismSourceMaterial.createInstance();\n    prismMaterial.setTextureParameter(\"colorMask\",\n        this.prismTextures[validColorMask], this.prismTextureSampler);\n    prismMaterial.setColor3Parameter(\"backgroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(backgroundColor));\n    prismMaterial.setColor3Parameter(\"foregroundColor\",\n        window.Filament.RgbType.sRGB, colorToFloat3(foregroundColor));\n    prismMaterial.setColor4Parameter(\"highlightColor\",\n        window.Filament.RgbaType.sRGB, [0, 0, 0, 0]);\n    return this.buildPrismRenderable(prismMaterial);\n  }\n\n  createKnobRenderable() {\n    const material = this.knobSourceMaterial.createInstance();\n    material.setFloatParameter(\"alpha\", 0);\n\n    const renderable = window.Filament.EntityManager.get()\n      .create();\n    window.Filament.RenderableManager.Builder(1)\n      .boundingBox(this.knobBoundingBox)\n      .material(0, material)\n      .geometry(0, window.Filament.RenderableManager$PrimitiveType.TRIANGLES,\n          this.knobSourceMesh.vertexBuffer, this.knobSourceMesh.indexBuffer)\n      .build(this.engine, renderable);\n    return renderable;\n  }\n\n  getBoundingBox(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const boundingBox = renderableManager.getAxisAlignedBoundingBox(renderableInstance);\n    renderableInstance.delete();\n    return boundingBox;\n  }\n\n  setRenderableTransform(renderable, position, orientation) {\n    const transformManager = this.engine.getTransformManager();\n    const transformInstance = transformManager.getInstance(renderable);\n    const transform = mat4.fromRotationTranslation(auxMat4, orientation, position);\n    transformManager.setTransform(transformInstance, transform);\n    transformInstance.delete();\n  }\n\n  getRenderableMaterial(renderable) {\n    const renderableManager = this.engine.getRenderableManager();\n    const renderableInstance = renderableManager.getInstance(renderable);\n    const material = renderableManager.getMaterialInstanceAt(renderableInstance, 0);\n    renderableInstance.delete();\n    return material;\n  }\n\n  updateCamera() {\n    const eye = [this.focalPoint[0], this.focalPoint[1], this.focalPoint[2] + this.distance];\n    const up = [0, 1, 0];\n    vec3.rotateX(eye, eye, this.focalPoint, this.elevation);\n    vec3.rotateY(eye, eye, this.focalPoint, this.heading);\n    this.camera.lookAt(eye, this.focalPoint, up);\n  }\n\n  renderFrame(timestamp) {\n    if (this.lastTime === undefined) {\n      this.lastTime = timestamp;\n    }\n    const deltaTime = 1e-3 * (timestamp - this.lastTime);\n    this.lastTime = timestamp;\n\n    if (this.animationTimer < CAMERA_ANIMATION_TIME) {\n      this.animationTimer += deltaTime;\n      const t = Math.min(this.animationTimer / CAMERA_ANIMATION_TIME, 1);\n      const k = t * t * (3 - 2 * t);\n      vec3.lerp(this.focalPoint, this.lastPosition, this.targetPosition, k);\n      this.updateCamera();\n    }\n\n    if (this.activePrismView) {\n      this.highlightTimer += deltaTime;\n      if (this.highlightTimer > HIGHLIGHT_ANIMATION_TIME) {\n        this.highlightTimer %= HIGHLIGHT_ANIMATION_TIME;\n      }\n      const t = 2 * Math.abs(this.highlightTimer / HIGHLIGHT_ANIMATION_TIME - 0.5);\n      const k = t * t * (3 - 2 * t);\n      const highlightIntensity = HIGHLIGHT_START_BLEND + k * HIGHLIGHT_RANGE_BLEND;\n      this.setHighlightIntensity(this.activePrismView, highlightIntensity);\n    }\n\n    this.renderer.render(this.swapChain, this.view);\n    window.requestAnimationFrame(this.renderFrame);\n  }\n\n  resize() {\n    const dpr = window.devicePixelRatio;\n    const width = this.canvas.width = 0.8 * window.innerWidth * dpr;\n    const height = this.canvas.height = window.innerHeight * dpr;\n    this.view.setViewport([0, 0, width, height]);\n\n    this.camera.setProjectionFov(45.0, width / height, 1.0, 100.0,\n        window.Filament.Camera$Fov.VERTICAL);\n  }\n\n  isPrimaryPointer(e) {\n    return (e.pointerType !== \"touch\") || e.isPrimary;\n  }\n\n  handlePointerDown(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n\n    const ray = this.getCastingRay(e.clientX, e.clientY);\n    const prismIntersection = this.shapeView.shape.intersect(ray);\n    let junctionIntersection;\n    if (this.props.activePrism) {\n      junctionIntersection = this.intersectJunctions(ray);\n    }\n    if (junctionIntersection && (!prismIntersection\n        || (junctionIntersection.hitDistance < prismIntersection.hitDistance))) {\n      this.pickedPrism = null;\n      this.pickedJunction = junctionIntersection.hitJunction;\n      this.activatePrismKnob(this.availableJunctions, this.pickedJunction);\n    } else {\n      this.pickedPrism = (prismIntersection) ? prismIntersection.hitPrism : null;\n      this.pickedJunction = null;\n    }\n    this.activeJunctionPrism = null;\n\n    this.pressing = true;\n    this.dragging = false;\n    this.pointerX = e.clientX;\n    this.pointerY = e.clientY;\n  }\n\n  handlePointerUp(e) {\n    if (!this.isPrimaryPointer(e)) {\n      return;\n    }\n    if (this.activeJunctionPrism) {\n      this.addPrism(this.activeJunctionPrism);\n    } else if (!this.dragging && !this.pickedJunction) {\n      this.selectPrism(this.pickedPrism, true);\n      this.props.onActivePrismChange(this.pickedPrism);\n    }\n    this.pressing = false;\n    this.hideGhostPrism();\n    if (this.availableJunctions) {\n      this.showPrismKnobs(this.availableJunctions);\n    }\n  }\n\n  handlePointerMove(e) {\n    if (!this.isPrimaryPointer(e) || !this.pressing) {\n      return;\n    }\n    const dx = e.clientX - this.pointerX;\n    const dy = e.clientY - this.pointerY;\n    if (this.dragging) {\n      if (this.pickedJunction) {\n        const ray = this.getCastingRay(e.clientX, e.clientY);\n        const nearestJunctionPrism = this.pickNearestJunctionPrism(ray, this.pickedJunction);\n        if (nearestJunctionPrism !== this.activeJunctionPrism) {\n          this.showGhostPrism(nearestJunctionPrism.worldPosition, nearestJunctionPrism.worldOrientation);\n          this.activeJunctionPrism = nearestJunctionPrism;\n        }\n      } else {\n        this.elevation = Math.min(Math.max(\n            this.elevation - dy * POINTER_DRAG_FACTOR, -ELEVATION_LIMIT), ELEVATION_LIMIT);\n        this.heading = (this.heading - dx * POINTER_DRAG_FACTOR) % (2 * Math.PI);\n        this.updateCamera();\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n      }\n    } else {\n      const dragDistanceSquared = dx * dx + dy * dy;\n      if (dragDistanceSquared >= POINTER_DRAG_THRESHOLD_SQUARED) {\n        this.pointerX = e.clientX;\n        this.pointerY = e.clientY;\n        this.dragging = true;\n      }\n    }\n  }\n\n  getCastingRay(clientX, clientY) {\n    const dpr = window.devicePixelRatio;\n    const x = (2 * clientX * dpr) / this.canvas.width - 1;\n    const y = 1 - (2 * clientY * dpr) / this.canvas.height;\n    const rayVec = vec4.fromValues(x, y, -1, 1);\n    vec4.transformMat4(rayVec, rayVec, window.Filament.Camera.inverseProjection(\n        this.camera.getProjectionMatrix()));\n    rayVec[2] = -1;\n    rayVec[3] = 0;\n    vec4.transformMat4(rayVec, rayVec, this.camera.getModelMatrix());\n    const direction = vec3.fromValues(rayVec[0], rayVec[1], rayVec[2]);\n    vec3.normalize(direction, direction);\n    return {\n      origin: this.camera.getPosition(),\n      direction: direction\n    };\n  }\n\n  intersectJunctions(ray) {\n    if (!this.availableJunctions) {\n      return;\n    }\n    let hitJunction;\n    let hitDistance;\n    for (let i = 0; i < this.availableJunctions.length; i++) {\n      const junction = this.availableJunctions[i];\n      const junctionHitDistance = intersectSphere(ray, junction.pivot, KNOB_RADIUS);\n      if (junctionHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (junctionHitDistance < hitDistance)) {\n          hitJunction = junction;\n          hitDistance = junctionHitDistance;\n        }\n      }\n    }\n    if (!hitJunction) {\n      return;\n    }\n    return {\n      hitJunction: hitJunction,\n      hitDistance: hitDistance\n    };\n  }\n\n  pickNearestJunctionPrism(ray, junction) {\n    let junctionPrism = null;\n    let rayDistance;\n    for (let i = 0; i < junction.prisms.length; i++) {\n      const prism = junction.prisms[i];\n      const prismRayDistance = rayToPointDistance(ray, prism.worldPosition);\n      if ((rayDistance === undefined) || (prismRayDistance < rayDistance)) {\n        junctionPrism = prism;\n        rayDistance = prismRayDistance;\n      }\n    }\n    return junctionPrism;\n  }\n\n  selectPrism(prism, animate) {\n    vec3.copy(this.lastPosition, this.targetPosition);\n    if (this.activePrismView) {\n      this.setHighlightIntensity(this.activePrismView, 0);\n    }\n    if (prism) {\n      this.updateHighlightColor(prism);\n      this.activePrismView = this.shapeView.findPrismView(prism.id);\n      this.availableJunctions = this.shapeView.shape.getAvailableJunctions(prism);\n      this.showPrismKnobs(this.availableJunctions);\n      vec3.copy(this.targetPosition, prism.worldPosition);\n    } else {\n      this.activePrismView = null;\n      this.availableJunctions = null;\n      this.hidePrismKnobs();\n      vec3.copy(this.targetPosition, this.shapeView.shape.aabb.center);\n    }\n    if (animate) {\n      this.animationTimer = 0;\n      this.highlightTimer = 0;\n    } else {\n      this.highlightTimer = HIGHLIGHT_ANIMATION_TIME / 2;\n      vec3.copy(this.lastPosition, this.targetPosition);\n      vec3.copy(this.focalPoint, this.targetPosition);\n      this.updateCamera();\n    }\n  }\n\n  addPrism(prism) {\n    const shape = this.shapeView.shape.clone();\n    prism.id = ++shape.lastPrismId;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    this.props.onShapeChange(shape);\n  }\n\n  updateHighlightColor(prism) {\n    const primaryReadability = tinycolor.readability(prism.backgroundColor, HIGHLIGHT_PRIMARY_COLOR);\n    const alternateReadability = tinycolor.readability(prism.backgroundColor, HIGHLIGHT_ALTERNATE_COLOR);\n    const colorStr = (primaryReadability > alternateReadability)\n        ? HIGHLIGHT_PRIMARY_COLOR : HIGHLIGHT_ALTERNATE_COLOR;\n    const rgb = tinycolor(colorStr).toRgb();\n    this.highlightColor[0] = rgb.r / 255;\n    this.highlightColor[1] = rgb.g / 255;\n    this.highlightColor[2] = rgb.b / 255;\n  }\n\n  setHighlightIntensity(prismView, intensity) {\n    const prismMaterial = this.getRenderableMaterial(prismView.renderable);\n    this.highlightColor[3] = intensity;\n    prismMaterial.setColor4Parameter(\"highlightColor\", window.Filament.RgbaType.sRGB, this.highlightColor);\n  }\n\n  showGhostPrism(position, orientation) {\n    this.setRenderableTransform(this.ghostRenderable, position, orientation);\n    this.scene.addEntity(this.ghostRenderable);\n  }\n\n  hideGhostPrism() {\n    this.scene.remove(this.ghostRenderable);\n  }\n\n  showPrismKnobs(junctions) {\n    while (this.knobRenderables.length < junctions.length) {\n      this.knobRenderables.push(this.createKnobRenderable());\n    }\n    for (let i = 0; i < junctions.length; i++) {\n      const junction = junctions[i];\n      const knobRenderable = this.knobRenderables[i];\n      const knobMaterial = this.getRenderableMaterial(knobRenderable);\n      knobMaterial.setFloatParameter(\"alpha\", KNOB_IDLE_ALPHA);\n      this.setRenderableTransform(knobRenderable, junction.pivot, IDENTITY_QUAT);\n      this.scene.addEntity(knobRenderable);\n    }\n    for (let i = junctions.length; i < this.knobRenderables.length; i++) {\n      const knobRenderable = this.knobRenderables[i];\n      this.scene.remove(knobRenderable)\n    }\n  }\n\n  activatePrismKnob(junctions, activeJunction) {\n    const junctionIndex = junctions.indexOf(activeJunction);\n    const knobRenderable = this.knobRenderables[junctionIndex];\n    const knobMaterial = this.getRenderableMaterial(knobRenderable);\n    knobMaterial.setFloatParameter(\"alpha\", KNOB_ACTIVE_ALPHA);\n    this.hidePrismKnobs();\n    this.scene.addEntity(knobRenderable);\n  }\n\n  hidePrismKnobs() {\n    this.knobRenderables.forEach(knobRenderable => this.scene.remove(knobRenderable));\n  }\n\n  render() {\n    return <canvas className=\"Viewport\" ref={ref => (this.filament = ref)} />\n  }\n}\n\nexport default Viewport;\nexport { COLOR_MASK_COUNT };\n","import React, { Component } from 'react'\nimport reactCSS from 'reactcss'\nimport { SwatchesPicker } from 'react-color'\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false\n    };\n  }\n\n  handleToggleColorPicker() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleHideColorPicker() {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleColorChange(color) {\n    this.props.onChange(color.hex);\n    this.handleHideColorPicker();\n  };\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: this.props.color,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={() => this.handleToggleColorPicker()}>\n          <div style={styles.color} />\n        </div>\n        {\n          this.state.displayColorPicker\n          ?\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={() => this.handleHideColorPicker()} />\n            <SwatchesPicker color={this.props.color} width=\"220px\" height=\"220px\"\n              onChange={(color) => this.handleColorChange(color)} />\n          </div>\n          :\n          null\n        }\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { COLOR_MASK_COUNT } from './Viewport';\nimport ColorPicker from './ColorPicker';\n\nclass Toolbar extends Component {\n  modifyShape(prevShape, shapeModifier) {\n    const shape = prevShape.clone();\n    shapeModifier(shape);\n    shape.applyTransform();\n    this.props.onShapeChange(shape);\n  }\n\n  modifyPrism(prevShape, prevPrism, prismModifier) {\n    this.modifyShape(prevShape, (shape) => {\n      const prism = shape.findPrism(prevPrism.id);\n      prismModifier(prism);\n    });\n  }\n\n  handleRollChange(prevShape, roll) {\n    this.modifyShape(prevShape, (shape) => shape.roll = parseFloat(roll) || 0);\n  }\n\n  handlePitchChange(prevShape, pitch) {\n    this.modifyShape(prevShape, (shape) => shape.pitch = parseFloat(pitch) || 0);\n  }\n\n  handleYawChange(prevShape, yaw) {\n    this.modifyShape(prevShape, (shape) => shape.yaw = parseFloat(yaw) || 0);\n  }\n\n  handleColorMaskChange(prevShape, prevPrism, colorMask) {\n    this.modifyPrism(prevShape, prevPrism, (prism) => prism.colorMask = parseInt(colorMask) || 0);\n  }\n\n  handleBackgroundColorChange(prevShape, prevPrism, color) {\n    this.modifyPrism(prevShape, prevPrism, (prism) => prism.backgroundColor = color);\n  }\n\n  handleForegroundColorChange(prevShape, prevPrism, color) {\n    this.modifyPrism(prevShape, prevPrism, (prism) => prism.foregroundColor = color);\n  }\n\n  handleSwapColors(prevShape, prevPrism) {\n    this.modifyPrism(prevShape, prevPrism, (prism) => {\n      prism.foregroundColor = prevPrism.backgroundColor;\n      prism.backgroundColor = prevPrism.foregroundColor;\n    });\n  }\n\n  renderShapeParams(shape) {\n    return (\n      <div className=\"Params\">\n        <h3>Shape</h3>\n        <p>\n          <label htmlFor=\"roll\">Roll : </label>\n          <input type=\"number\" id=\"roll\" name=\"roll\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.roll}\n            onChange={e => this.handleRollChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"pitch\">Pitch : </label>\n          <input type=\"number\" id=\"pitch\" name=\"pitch\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.pitch}\n            onChange={e => this.handlePitchChange(shape, e.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"yaw\">Yaw : </label>\n          <input type=\"number\" id=\"yaw\" name=\"yaw\" min=\"-180\" max=\"180\"\n            step=\"15\" value={shape.yaw}\n            onChange={e => this.handleYawChange(shape, e.target.value)} />\n        </p>\n      </div>\n    );\n  }\n\n  renderPrismParams(shape, prism) {\n    return (\n      <div className=\"Params\">\n        <h3>Prism</h3>\n        <p>\n          <label htmlFor=\"colorMask\">Mask : </label>\n          <input type=\"number\" id=\"colorMask\" name=\"colorMask\" min=\"0\" max={COLOR_MASK_COUNT - 1}\n            step=\"1\" value={prism.colorMask}\n            onChange={e => this.handleColorMaskChange(shape, prism, e.target.value)} />\n        </p>\n        <div>\n          <label htmlFor=\"backgroundColor\">Background : </label>\n          <ColorPicker id=\"backgroundColor\" name=\"backgroundColor\" color={prism.backgroundColor}\n            onChange={color => this.handleBackgroundColorChange(shape, prism, color)} />\n        </div>\n        <div>\n          <label htmlFor=\"foregroundColor\">Foreground : </label>\n          <ColorPicker id=\"foregroundColor\" name=\"foregroundColor\" color={prism.foregroundColor}\n            onChange={color => this.handleForegroundColorChange(shape, prism, color)} />\n        </div>\n        <p>\n          <button id=\"swapColors\" name=\"swapColors\"\n            onClick={() => this.handleSwapColors(shape, prism)}>Swap</button>\n        </p>\n      </div>\n    );\n  }\n\n  renderParams() {\n    if (this.props.activePrism) {\n      return this.renderPrismParams(this.props.shape, this.props.activePrism);\n    } else {\n      return this.renderShapeParams(this.props.shape);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Toolbar\">\n        {this.renderParams()}\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import { vec3, quat } from 'gl-matrix';\n\nfunction createTransform(position, orientation) {\n  return {\n    position: position,\n    orientation: orientation\n  };\n}\n\nfunction rotatedTransform(transform, pivot, axis, angle) {\n  const rotation = quat.setAxisAngle(quat.create(), axis, angle);\n  const position = vec3.sub(vec3.create(), transform.position, pivot);\n  vec3.transformQuat(position, position, rotation);\n  vec3.add(position, position, pivot);\n  const orientation = quat.mul(rotation, rotation, transform.orientation);\n  quat.normalize(orientation, orientation);\n  return createTransform(position, orientation);\n}\n\nfunction multiplyTransforms(transform1, transform2) {\n  const position = vec3.transformQuat(vec3.create(), transform2.position, transform1.orientation);\n  vec3.add(position, position, transform1.position);\n  const orientation = quat.mul(quat.create(), transform1.orientation, transform2.orientation);\n  quat.normalize(orientation, orientation);\n  return createTransform(position, orientation);\n}\n\nexport { createTransform, rotatedTransform, multiplyTransforms };\n","import { vec3, quat } from 'gl-matrix';\nimport { intersectTriangles, collideConvexHulls } from './Collision';\nimport { createTransform, rotatedTransform, multiplyTransforms } from './Transform';\n\nconst PRISM_HEIGHT = 1.0;\nconst PRISM_HALF_HEIGHT = 0.5 * PRISM_HEIGHT;\nconst PRISM_BASE = 2.0 * PRISM_HEIGHT;\nconst PRISM_HALF_BASE = 0.5 * PRISM_BASE;\nconst PRISM_SIDE = Math.sqrt(PRISM_BASE);\nconst PRISM_HALF_SIDE = 0.5 * PRISM_SIDE;\nconst PRISM_DISTANCE = 0.5 * PRISM_BASE;\nconst PRISM_HALF_DISTANCE = 0.5 * PRISM_DISTANCE;\n\n// Prism geometry\n//     2\n//     /\\\n//    /| \\\n//   / |  \\\n// 0/  /\\  \\4\n//  | /3 \\ |\n//  |/    \\|\n//  /______\\\n// 1        5\nconst PRISM_VERTICES = [\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(-PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(0.0, PRISM_HALF_HEIGHT, PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, -PRISM_HALF_SIDE),\n  vec3.fromValues(PRISM_HALF_BASE, -PRISM_HALF_HEIGHT, PRISM_HALF_SIDE)\n];\nconst PRISM_POLYGON_INDICES = [\n  [ 0, 1, 2, 3 ], // left slope\n  [ 2, 3, 5, 4 ], // right slope\n  [ 1, 0, 4, 5 ], // bottom\n  [ 0, 2, 4 ], // back\n  [ 5, 3, 1 ] // front\n];\nconst PRISM_TRIANGLE_INDICES = [\n  0, 1, 2,  2, 1, 3, // left slope\n  2, 3, 4,  4, 3, 5, // right slope\n  4, 5, 0,  0, 5, 1, // bottom\n  0, 2, 4, // back\n  5, 3, 1 // front\n];\nconst PRISM_POLYGON_NORMALS = PRISM_POLYGON_INDICES.map(indices => {\n  const p0 = PRISM_VERTICES[indices[0]];\n  const p1 = PRISM_VERTICES[indices[1]];\n  const p2 = PRISM_VERTICES[indices[2]];\n  const normal = vec3.sub(vec3.create(), p1, p0);\n  vec3.cross(normal, normal, vec3.sub(vec3.create(), p2, p0));\n  return vec3.normalize(normal, normal);\n});\n\nconst PRISM_LEFT_SLOPE_PIVOT_POINT = vec3.fromValues(-PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_RIGHT_SLOPE_PIVOT_POINT = vec3.fromValues(PRISM_HALF_DISTANCE, 0, 0);\nconst PRISM_SIDE_PIVOT_Y = -PRISM_HALF_HEIGHT / 6;\nconst PRISM_LEFT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), 0.25 * Math.PI);\nconst PRISM_RIGHT_SLOPE_NORMAL = vec3.rotateZ(vec3.create(), vec3.fromValues(0, 1, 0),\n    vec3.fromValues(0, 0, 0), -0.25 * Math.PI);\nconst PRISM_LEFT_TRANSFORM = createTransform(vec3.fromValues(-PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), -180, 0, 0));\nconst PRISM_RIGHT_TRANSFORM = createTransform(vec3.fromValues(PRISM_DISTANCE, 0, 0),\n    quat.fromEuler(quat.create(), 180, 0, 0));\nconst PRISM_JUNCTIONS = [\n  {\n    swapColors: true,\n    pivot: PRISM_LEFT_SLOPE_PIVOT_POINT,\n    normal: PRISM_LEFT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_LEFT_TRANSFORM, // left 0\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, 0.5 * Math.PI), // left 1\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, Math.PI), // left 2\n      rotatedTransform(PRISM_LEFT_TRANSFORM, PRISM_LEFT_SLOPE_PIVOT_POINT,\n          PRISM_LEFT_SLOPE_NORMAL, -0.5 * Math.PI) // left 3\n    ]\n  },\n  {\n    swapColors: true,\n    pivot: PRISM_RIGHT_SLOPE_PIVOT_POINT,\n    normal: PRISM_RIGHT_SLOPE_NORMAL,\n    transforms: [\n      PRISM_RIGHT_TRANSFORM, // right 0\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, -0.5 * Math.PI), // right 1\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, Math.PI), // right 2\n      rotatedTransform(PRISM_RIGHT_TRANSFORM, PRISM_RIGHT_SLOPE_PIVOT_POINT,\n          PRISM_RIGHT_SLOPE_NORMAL, 0.5 * Math.PI) // right 3\n    ]\n  },\n  {\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, 1),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, PRISM_SIDE), quat.create()) // front\n    ]\n  },\n  {\n    swapColors: false,\n    pivot: vec3.fromValues(0, PRISM_SIDE_PIVOT_Y, -PRISM_HALF_SIDE),\n    normal: vec3.fromValues(0, 0, -1),\n    transforms: [\n      createTransform(vec3.fromValues(0, 0, -PRISM_SIDE), quat.create()) // back\n    ]\n  },\n  {\n    swapColors: false,\n    pivot: vec3.fromValues(0, -PRISM_HALF_HEIGHT, 0),\n    normal: vec3.fromValues(0, -1, 0),\n    transforms: [\n      createTransform(vec3.fromValues(0, -PRISM_HEIGHT, 0),\n          quat.fromEuler(quat.create(), 180, 0, 0)) // bottom\n    ]\n  }\n];\n\nclass Prism {\n  constructor() {\n    this.id = 0;\n    this.colorMask = 0;\n    this.backgroundColor = \"#000\";\n    this.foregroundColor = \"#fff\";\n    this.position = vec3.create();\n    this.orientation = quat.create();\n    this.worldPosition = vec3.create();\n    this.worldOrientation = quat.create();\n    this.vertices = PRISM_VERTICES.map(vertex => vec3.clone(vertex));\n    this.polygonNormals = PRISM_POLYGON_NORMALS.map(normal => vec3.clone(normal));\n  }\n\n  applyTransform(shapeOrientation) {\n    vec3.transformQuat(this.worldPosition, this.position, shapeOrientation);\n    quat.multiply(this.worldOrientation, shapeOrientation, this.orientation);\n    for (let i = 0; i < this.vertices.length; i++) {\n      const vertex = this.vertices[i];\n      vec3.transformQuat(vertex, PRISM_VERTICES[i], this.worldOrientation);\n      vec3.add(vertex, vertex, this.worldPosition);\n    }\n    for (let i = 0; i < this.polygonNormals.length; i++) {\n      vec3.transformQuat(this.polygonNormals[i], PRISM_POLYGON_NORMALS[i], this.worldOrientation);\n    }\n  }\n\n  intersect(ray) {\n    return intersectTriangles(ray, this.vertices, PRISM_TRIANGLE_INDICES);\n  }\n\n  collides(prism) {\n    return collideConvexHulls(this.vertices, this.polygonNormals,\n        prism.vertices, prism.polygonNormals);\n  }\n\n  getJunctions() {\n    const junctions = [];\n    const transform = createTransform(this.position, this.orientation);\n    for (let i = 0; i < PRISM_JUNCTIONS.length; i++) {\n      const junction = PRISM_JUNCTIONS[i];\n      const junctionPrisms = [];\n      for (let j = 0; j < junction.transforms.length; j++) {\n        const junctionTransform = multiplyTransforms(transform, junction.transforms[j]);\n        const prism = new Prism();\n        prism.colorMask = this.colorMask;\n        prism.backgroundColor = (junction.swapColors) ? this.foregroundColor : this.backgroundColor;\n        prism.foregroundColor = (junction.swapColors) ? this.backgroundColor : this.foregroundColor;\n        vec3.copy(prism.position, junctionTransform.position);\n        quat.copy(prism.orientation, junctionTransform.orientation);\n        junctionPrisms.push(prism);\n      }\n      const pivot = vec3.transformQuat(vec3.create(), junction.pivot, this.orientation);\n      vec3.add(pivot, pivot, this.position);\n      const normal = vec3.transformQuat(vec3.create(), junction.normal, this.orientation);\n      junctions.push({\n        pivot: pivot,\n        normal: normal,\n        prisms: junctionPrisms\n      });\n    }\n    return junctions;\n  }\n\n  clone() {\n    const prism = new Prism();\n    prism.id = this.id;\n    prism.colorMask = this.colorMask;\n    prism.backgroundColor = this.backgroundColor;\n    prism.foregroundColor = this.foregroundColor;\n    vec3.copy(prism.position, this.position);\n    quat.copy(prism.orientation, this.orientation);\n    vec3.copy(prism.worldPosition, this.worldPosition);\n    quat.copy(prism.worldOrientation, this.worldOrientation);\n    return prism;\n  }\n}\n\nexport default Prism;\n","import { quat, vec3 } from 'gl-matrix';\nimport Prism from './Prism';\n\nconst RADIANS_TO_DEGREES = Math.PI / 180;\nconst DEFAULT_BACKGROUND_COLOR = \"#1976d2\";\nconst DEFAULT_FOREGROUND_COLOR = \"#d9d9d9\";\n\nclass Shape {\n  constructor() {\n    this.prisms = [];\n    this.lastPrismId = 0;\n    this.roll = 0;\n    this.pitch = 0;\n    this.yaw = 0;\n    this.aabb = {\n      min: vec3.create(),\n      max: vec3.create(),\n      center: vec3.create()\n    };\n  }\n\n  static createInitialShape() {\n    const shape = new Shape();\n    const prism = new Prism();\n    prism.id = ++shape.lastPrismId;\n    prism.backgroundColor = DEFAULT_BACKGROUND_COLOR;\n    prism.foregroundColor = DEFAULT_FOREGROUND_COLOR;\n    shape.prisms.push(prism);\n    shape.applyTransform();\n    return shape;\n  }\n\n  getOrientation() {\n    const orientation = quat.create();\n    quat.rotateY(orientation, orientation, this.yaw * RADIANS_TO_DEGREES);\n    quat.rotateX(orientation, orientation, this.roll * RADIANS_TO_DEGREES);\n    quat.rotateZ(orientation, orientation, this.pitch * RADIANS_TO_DEGREES);\n    return orientation;\n  }\n\n  applyTransform() {\n    const orientation = this.getOrientation();\n    vec3.zero(this.aabb.min);\n    vec3.zero(this.aabb.max);\n    for (let i = 0; i < this.prisms.length; i++) {\n      const prism = this.prisms[i];\n      prism.applyTransform(orientation);\n\n      // Compute axis aligned bounding box\n      for (let j = 0; j < prism.vertices.length; j++) {\n        const vertex = prism.vertices[j];\n        if ((i === 0) && (j === 0)) {\n          vec3.copy(this.aabb.min, vertex);\n          vec3.copy(this.aabb.max, vertex);\n        } else {\n          vec3.min(this.aabb.min, this.aabb.min, vertex);\n          vec3.max(this.aabb.max, this.aabb.max, vertex);\n        }\n      }\n    }\n    vec3.add(this.aabb.center, this.aabb.min, this.aabb.max);\n    vec3.scale(this.aabb.center, this.aabb.center, 0.5);\n  }\n\n  findPrism(id) {\n    for (let i = 0; i < this.prisms.length; i++) {\n      const prism = this.prisms[i];\n      if (prism.id === id) {\n        return prism;\n      }\n    }\n    return null;\n  }\n\n  intersect(ray) {\n    let hitPrism;\n    let hitDistance;\n    for (let i = 0; i < this.prisms.length; i++) {\n      const prism = this.prisms[i];\n      const prismHitDistance = prism.intersect(ray);\n      if (prismHitDistance !== undefined) {\n        if ((hitDistance === undefined) || (prismHitDistance < hitDistance)) {\n          hitPrism = prism;\n          hitDistance = prismHitDistance;\n        }\n      }\n    }\n    if (!hitPrism) {\n      return;\n    }\n    return {\n      hitPrism: hitPrism,\n      hitDistance: hitDistance\n    };\n  }\n\n  getAvailableJunctions(prism) {\n    const orientation = this.getOrientation();\n    let junctions = prism.getJunctions();\n    junctions.forEach(junction => {\n      vec3.transformQuat(junction.pivot, junction.pivot, orientation);\n      vec3.transformQuat(junction.normal, junction.normal, orientation);\n      junction.prisms.forEach(junctionPrism => junctionPrism.applyTransform(orientation));\n      junction.prisms = junction.prisms.filter(junctionPrism => this.prisms.every(shapePrism =>\n          (shapePrism === prism) || !shapePrism.collides(junctionPrism)));\n    });\n    return junctions.filter(junction => junction.prisms.length > 0);\n  }\n\n  clone() {\n    const shape = new Shape();\n    for (let i = 0; i < this.prisms.length; i++) {\n      shape.prisms.push(this.prisms[i].clone());\n    }\n    shape.lastPrismId = this.lastPrismId;\n    shape.roll = this.roll;\n    shape.pitch = this.pitch;\n    shape.yaw = this.yaw;\n    vec3.copy(shape.aabb.min, this.aabb.min);\n    vec3.copy(shape.aabb.max, this.aabb.max);\n    vec3.copy(shape.aabb.center, this.aabb.center);\n    return shape;\n  }\n}\n\nexport default Shape;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Viewport from './Viewport';\nimport Toolbar from './Toolbar';\nimport Shape from './Shape';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shape: Shape.createInitialShape(),\n      activePrism: null\n    };\n  }\n\n  handleShapeChange(shape) {\n    const nextState = { shape: shape };\n    if (this.state.activePrism) {\n      nextState.activePrism = shape.findPrism(this.state.activePrism.id);\n    }\n    this.setState(nextState);\n  }\n\n  handleActivePrismChange(activePrism) {\n    this.setState({ activePrism: activePrism });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Viewport shape={this.state.shape} activePrism={this.state.activePrism}\n          onShapeChange={(shape) => this.handleShapeChange(shape)}\n          onActivePrismChange={(activePrism) => this.handleActivePrismChange(activePrism)} />\n        <Toolbar shape={this.state.shape} activePrism={this.state.activePrism}\n          onShapeChange={(shape) => this.handleShapeChange(shape)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}